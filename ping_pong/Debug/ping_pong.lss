
ping_pong.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000f8  00800100  00000ca2  00000d36  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ca2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008001f8  008001f8  00000e2e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e2e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000e8c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00000ec8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b2b  00000000  00000000  00000f58  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000870  00000000  00000000  00001a83  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000055b  00000000  00000000  000022f3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000144  00000000  00000000  00002850  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000467  00000000  00000000  00002994  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000032a  00000000  00000000  00002dfb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  00003125  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e2 ea       	ldi	r30, 0xA2	; 162
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a8 3f       	cpi	r26, 0xF8	; 248
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	22 e0       	ldi	r18, 0x02	; 2
  94:	a8 ef       	ldi	r26, 0xF8	; 248
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a2 30       	cpi	r26, 0x02	; 2
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 57 00 	call	0xae	; 0xae <main>
  a6:	0c 94 4f 06 	jmp	0xc9e	; 0xc9e <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <main>:
#define MYUBRR FOSC/16/BAUD-1

int main(void)
{
	//Drivers init
	UART_Init(MYUBRR);
  ae:	8f e1       	ldi	r24, 0x1F	; 31
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	0e 94 e6 00 	call	0x1cc	; 0x1cc <UART_Init>
	
	//Ports setting 
	DDRE = 0b11111111;
  b6:	8f ef       	ldi	r24, 0xFF	; 255
  b8:	86 b9       	out	0x06, r24	; 6
    DDRA = 0b11111111;  
  ba:	8a bb       	out	0x1a, r24	; 26
	PORTE = 0b00000010;
  bc:	82 e0       	ldi	r24, 0x02	; 2
  be:	87 b9       	out	0x07, r24	; 7
	SRAM_test();
  c0:	0e 94 63 00 	call	0xc6	; 0xc6 <SRAM_test>
  c4:	ff cf       	rjmp	.-2      	; 0xc4 <main+0x16>

000000c6 <SRAM_test>:
{
	printf("YEAAH\n\r");
}

void SRAM_test(void)
{
  c6:	ef 92       	push	r14
  c8:	ff 92       	push	r15
  ca:	0f 93       	push	r16
  cc:	1f 93       	push	r17
  ce:	cf 93       	push	r28
  d0:	df 93       	push	r29
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
	printf("Starting SRAM test...\n");
  d2:	82 e1       	ldi	r24, 0x12	; 18
  d4:	91 e0       	ldi	r25, 0x01	; 1
  d6:	0e 94 b0 01 	call	0x360	; 0x360 <puts>
	
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
  da:	0e 94 3f 01 	call	0x27e	; 0x27e <rand>
  de:	7c 01       	movw	r14, r24
	
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
  e0:	0e 94 44 01 	call	0x288	; 0x288 <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
  e4:	c0 e0       	ldi	r28, 0x00	; 0
  e6:	d0 e0       	ldi	r29, 0x00	; 0

void SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
  e8:	00 e0       	ldi	r16, 0x00	; 0
  ea:	10 e0       	ldi	r17, 0x00	; 0
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
  ec:	20 c0       	rjmp	.+64     	; 0x12e <SRAM_test+0x68>
		uint8_t some_value = rand();
  ee:	0e 94 3f 01 	call	0x27e	; 0x27e <rand>
		ext_ram[i] = some_value;
  f2:	fe 01       	movw	r30, r28
  f4:	f8 5e       	subi	r31, 0xE8	; 232
  f6:	80 83       	st	Z, r24
		uint8_t retreived_value = ext_ram[i];
  f8:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
  fa:	28 17       	cp	r18, r24
  fc:	b9 f0       	breq	.+46     	; 0x12c <SRAM_test+0x66>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
  fe:	99 27       	eor	r25, r25
 100:	9f 93       	push	r25
 102:	8f 93       	push	r24
 104:	1f 92       	push	r1
 106:	2f 93       	push	r18
 108:	df 93       	push	r29
 10a:	cf 93       	push	r28
 10c:	88 e2       	ldi	r24, 0x28	; 40
 10e:	91 e0       	ldi	r25, 0x01	; 1
 110:	9f 93       	push	r25
 112:	8f 93       	push	r24
 114:	0e 94 9a 01 	call	0x334	; 0x334 <printf>
			write_errors++;
 118:	0f 5f       	subi	r16, 0xFF	; 255
 11a:	1f 4f       	sbci	r17, 0xFF	; 255
 11c:	8d b7       	in	r24, 0x3d	; 61
 11e:	9e b7       	in	r25, 0x3e	; 62
 120:	08 96       	adiw	r24, 0x08	; 8
 122:	0f b6       	in	r0, 0x3f	; 63
 124:	f8 94       	cli
 126:	9e bf       	out	0x3e, r25	; 62
 128:	0f be       	out	0x3f, r0	; 63
 12a:	8d bf       	out	0x3d, r24	; 61
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 12c:	21 96       	adiw	r28, 0x01	; 1
 12e:	c1 15       	cp	r28, r1
 130:	98 e0       	ldi	r25, 0x08	; 8
 132:	d9 07       	cpc	r29, r25
 134:	e0 f2       	brcs	.-72     	; 0xee <SRAM_test+0x28>
			write_errors++;
		}
	}
	
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
 136:	c7 01       	movw	r24, r14
 138:	0e 94 44 01 	call	0x288	; 0x288 <srand>
	
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 13c:	c0 e0       	ldi	r28, 0x00	; 0
 13e:	d0 e0       	ldi	r29, 0x00	; 0
void SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
 140:	e1 2c       	mov	r14, r1
 142:	f1 2c       	mov	r15, r1
	
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
	
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 144:	20 c0       	rjmp	.+64     	; 0x186 <SRAM_test+0xc0>
		uint8_t some_value = rand();
 146:	0e 94 3f 01 	call	0x27e	; 0x27e <rand>
		uint8_t retreived_value = ext_ram[i];
 14a:	fe 01       	movw	r30, r28
 14c:	f8 5e       	subi	r31, 0xE8	; 232
 14e:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
 150:	28 17       	cp	r18, r24
 152:	c1 f0       	breq	.+48     	; 0x184 <SRAM_test+0xbe>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
 154:	99 27       	eor	r25, r25
 156:	9f 93       	push	r25
 158:	8f 93       	push	r24
 15a:	1f 92       	push	r1
 15c:	2f 93       	push	r18
 15e:	df 93       	push	r29
 160:	cf 93       	push	r28
 162:	81 e6       	ldi	r24, 0x61	; 97
 164:	91 e0       	ldi	r25, 0x01	; 1
 166:	9f 93       	push	r25
 168:	8f 93       	push	r24
 16a:	0e 94 9a 01 	call	0x334	; 0x334 <printf>
			retrieval_errors++;
 16e:	8f ef       	ldi	r24, 0xFF	; 255
 170:	e8 1a       	sub	r14, r24
 172:	f8 0a       	sbc	r15, r24
 174:	8d b7       	in	r24, 0x3d	; 61
 176:	9e b7       	in	r25, 0x3e	; 62
 178:	08 96       	adiw	r24, 0x08	; 8
 17a:	0f b6       	in	r0, 0x3f	; 63
 17c:	f8 94       	cli
 17e:	9e bf       	out	0x3e, r25	; 62
 180:	0f be       	out	0x3f, r0	; 63
 182:	8d bf       	out	0x3d, r24	; 61
	
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
	
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 184:	21 96       	adiw	r28, 0x01	; 1
 186:	c1 15       	cp	r28, r1
 188:	98 e0       	ldi	r25, 0x08	; 8
 18a:	d9 07       	cpc	r29, r25
 18c:	e0 f2       	brcs	.-72     	; 0x146 <SRAM_test+0x80>
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with \n%4d errors in write phase and \n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors);
 18e:	ff 92       	push	r15
 190:	ef 92       	push	r14
 192:	1f 93       	push	r17
 194:	0f 93       	push	r16
 196:	8e e9       	ldi	r24, 0x9E	; 158
 198:	91 e0       	ldi	r25, 0x01	; 1
 19a:	9f 93       	push	r25
 19c:	8f 93       	push	r24
 19e:	0e 94 9a 01 	call	0x334	; 0x334 <printf>
 1a2:	0f 90       	pop	r0
 1a4:	0f 90       	pop	r0
 1a6:	0f 90       	pop	r0
 1a8:	0f 90       	pop	r0
 1aa:	0f 90       	pop	r0
 1ac:	0f 90       	pop	r0
 1ae:	df 91       	pop	r29
 1b0:	cf 91       	pop	r28
 1b2:	1f 91       	pop	r17
 1b4:	0f 91       	pop	r16
 1b6:	ff 90       	pop	r15
 1b8:	ef 90       	pop	r14
 1ba:	08 95       	ret

000001bc <UART_Transmit>:
}

void UART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1 << UDRE0)) );
 1bc:	5d 9b       	sbis	0x0b, 5	; 11
 1be:	fe cf       	rjmp	.-4      	; 0x1bc <UART_Transmit>
	
	/* Put data into buffer, sends the data */
	UDR0 = data;
 1c0:	8c b9       	out	0x0c, r24	; 12
 1c2:	08 95       	ret

000001c4 <UART_Receive>:
}

unsigned char UART_Receive( void )
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1 << RXC0)) );
 1c4:	5f 9b       	sbis	0x0b, 7	; 11
 1c6:	fe cf       	rjmp	.-4      	; 0x1c4 <UART_Receive>
	
	/* Get and return received data from buffer */
	return UDR0;
 1c8:	8c b1       	in	r24, 0x0c	; 12
 1ca:	08 95       	ret

000001cc <UART_Init>:
#include "UART.h"

void UART_Init(unsigned int my_ubrr)
{
	/* Set baud rate */
	UBRR0H = (unsigned char)(my_ubrr >> 8);
 1cc:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)my_ubrr;
 1ce:	89 b9       	out	0x09, r24	; 9
	
	/* Enable receiver and transmitter */
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
 1d0:	88 e1       	ldi	r24, 0x18	; 24
 1d2:	8a b9       	out	0x0a, r24	; 10
	
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1 << URSEL0) | (1 << USBS0) | (3 << UCSZ00);
 1d4:	8e e8       	ldi	r24, 0x8E	; 142
 1d6:	80 bd       	out	0x20, r24	; 32

	fdevopen(UART_Transmit, UART_Receive);
 1d8:	62 ee       	ldi	r22, 0xE2	; 226
 1da:	70 e0       	ldi	r23, 0x00	; 0
 1dc:	8e ed       	ldi	r24, 0xDE	; 222
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	0e 94 4f 01 	call	0x29e	; 0x29e <fdevopen>
 1e4:	08 95       	ret

000001e6 <do_rand>:
 1e6:	8f 92       	push	r8
 1e8:	9f 92       	push	r9
 1ea:	af 92       	push	r10
 1ec:	bf 92       	push	r11
 1ee:	cf 92       	push	r12
 1f0:	df 92       	push	r13
 1f2:	ef 92       	push	r14
 1f4:	ff 92       	push	r15
 1f6:	cf 93       	push	r28
 1f8:	df 93       	push	r29
 1fa:	ec 01       	movw	r28, r24
 1fc:	68 81       	ld	r22, Y
 1fe:	79 81       	ldd	r23, Y+1	; 0x01
 200:	8a 81       	ldd	r24, Y+2	; 0x02
 202:	9b 81       	ldd	r25, Y+3	; 0x03
 204:	61 15       	cp	r22, r1
 206:	71 05       	cpc	r23, r1
 208:	81 05       	cpc	r24, r1
 20a:	91 05       	cpc	r25, r1
 20c:	21 f4       	brne	.+8      	; 0x216 <__EEPROM_REGION_LENGTH__+0x16>
 20e:	64 e2       	ldi	r22, 0x24	; 36
 210:	79 ed       	ldi	r23, 0xD9	; 217
 212:	8b e5       	ldi	r24, 0x5B	; 91
 214:	97 e0       	ldi	r25, 0x07	; 7
 216:	2d e1       	ldi	r18, 0x1D	; 29
 218:	33 ef       	ldi	r19, 0xF3	; 243
 21a:	41 e0       	ldi	r20, 0x01	; 1
 21c:	50 e0       	ldi	r21, 0x00	; 0
 21e:	0e 94 b5 05 	call	0xb6a	; 0xb6a <__divmodsi4>
 222:	49 01       	movw	r8, r18
 224:	5a 01       	movw	r10, r20
 226:	9b 01       	movw	r18, r22
 228:	ac 01       	movw	r20, r24
 22a:	a7 ea       	ldi	r26, 0xA7	; 167
 22c:	b1 e4       	ldi	r27, 0x41	; 65
 22e:	0e 94 d4 05 	call	0xba8	; 0xba8 <__muluhisi3>
 232:	6b 01       	movw	r12, r22
 234:	7c 01       	movw	r14, r24
 236:	ac ee       	ldi	r26, 0xEC	; 236
 238:	b4 ef       	ldi	r27, 0xF4	; 244
 23a:	a5 01       	movw	r20, r10
 23c:	94 01       	movw	r18, r8
 23e:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <__mulohisi3>
 242:	dc 01       	movw	r26, r24
 244:	cb 01       	movw	r24, r22
 246:	8c 0d       	add	r24, r12
 248:	9d 1d       	adc	r25, r13
 24a:	ae 1d       	adc	r26, r14
 24c:	bf 1d       	adc	r27, r15
 24e:	b7 ff       	sbrs	r27, 7
 250:	03 c0       	rjmp	.+6      	; 0x258 <__EEPROM_REGION_LENGTH__+0x58>
 252:	01 97       	sbiw	r24, 0x01	; 1
 254:	a1 09       	sbc	r26, r1
 256:	b0 48       	sbci	r27, 0x80	; 128
 258:	88 83       	st	Y, r24
 25a:	99 83       	std	Y+1, r25	; 0x01
 25c:	aa 83       	std	Y+2, r26	; 0x02
 25e:	bb 83       	std	Y+3, r27	; 0x03
 260:	9f 77       	andi	r25, 0x7F	; 127
 262:	df 91       	pop	r29
 264:	cf 91       	pop	r28
 266:	ff 90       	pop	r15
 268:	ef 90       	pop	r14
 26a:	df 90       	pop	r13
 26c:	cf 90       	pop	r12
 26e:	bf 90       	pop	r11
 270:	af 90       	pop	r10
 272:	9f 90       	pop	r9
 274:	8f 90       	pop	r8
 276:	08 95       	ret

00000278 <rand_r>:
 278:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <do_rand>
 27c:	08 95       	ret

0000027e <rand>:
 27e:	80 e0       	ldi	r24, 0x00	; 0
 280:	91 e0       	ldi	r25, 0x01	; 1
 282:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <do_rand>
 286:	08 95       	ret

00000288 <srand>:
 288:	a0 e0       	ldi	r26, 0x00	; 0
 28a:	b0 e0       	ldi	r27, 0x00	; 0
 28c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 290:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 294:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 298:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 29c:	08 95       	ret

0000029e <fdevopen>:
 29e:	0f 93       	push	r16
 2a0:	1f 93       	push	r17
 2a2:	cf 93       	push	r28
 2a4:	df 93       	push	r29
 2a6:	00 97       	sbiw	r24, 0x00	; 0
 2a8:	31 f4       	brne	.+12     	; 0x2b6 <fdevopen+0x18>
 2aa:	61 15       	cp	r22, r1
 2ac:	71 05       	cpc	r23, r1
 2ae:	19 f4       	brne	.+6      	; 0x2b6 <fdevopen+0x18>
 2b0:	80 e0       	ldi	r24, 0x00	; 0
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	3a c0       	rjmp	.+116    	; 0x32a <fdevopen+0x8c>
 2b6:	8b 01       	movw	r16, r22
 2b8:	ec 01       	movw	r28, r24
 2ba:	6e e0       	ldi	r22, 0x0E	; 14
 2bc:	70 e0       	ldi	r23, 0x00	; 0
 2be:	81 e0       	ldi	r24, 0x01	; 1
 2c0:	90 e0       	ldi	r25, 0x00	; 0
 2c2:	0e 94 c1 03 	call	0x782	; 0x782 <calloc>
 2c6:	fc 01       	movw	r30, r24
 2c8:	89 2b       	or	r24, r25
 2ca:	91 f3       	breq	.-28     	; 0x2b0 <fdevopen+0x12>
 2cc:	80 e8       	ldi	r24, 0x80	; 128
 2ce:	83 83       	std	Z+3, r24	; 0x03
 2d0:	01 15       	cp	r16, r1
 2d2:	11 05       	cpc	r17, r1
 2d4:	71 f0       	breq	.+28     	; 0x2f2 <fdevopen+0x54>
 2d6:	13 87       	std	Z+11, r17	; 0x0b
 2d8:	02 87       	std	Z+10, r16	; 0x0a
 2da:	81 e8       	ldi	r24, 0x81	; 129
 2dc:	83 83       	std	Z+3, r24	; 0x03
 2de:	80 91 f8 01 	lds	r24, 0x01F8	; 0x8001f8 <__data_end>
 2e2:	90 91 f9 01 	lds	r25, 0x01F9	; 0x8001f9 <__data_end+0x1>
 2e6:	89 2b       	or	r24, r25
 2e8:	21 f4       	brne	.+8      	; 0x2f2 <fdevopen+0x54>
 2ea:	f0 93 f9 01 	sts	0x01F9, r31	; 0x8001f9 <__data_end+0x1>
 2ee:	e0 93 f8 01 	sts	0x01F8, r30	; 0x8001f8 <__data_end>
 2f2:	20 97       	sbiw	r28, 0x00	; 0
 2f4:	c9 f0       	breq	.+50     	; 0x328 <fdevopen+0x8a>
 2f6:	d1 87       	std	Z+9, r29	; 0x09
 2f8:	c0 87       	std	Z+8, r28	; 0x08
 2fa:	83 81       	ldd	r24, Z+3	; 0x03
 2fc:	82 60       	ori	r24, 0x02	; 2
 2fe:	83 83       	std	Z+3, r24	; 0x03
 300:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end+0x2>
 304:	90 91 fb 01 	lds	r25, 0x01FB	; 0x8001fb <__data_end+0x3>
 308:	89 2b       	or	r24, r25
 30a:	71 f4       	brne	.+28     	; 0x328 <fdevopen+0x8a>
 30c:	f0 93 fb 01 	sts	0x01FB, r31	; 0x8001fb <__data_end+0x3>
 310:	e0 93 fa 01 	sts	0x01FA, r30	; 0x8001fa <__data_end+0x2>
 314:	80 91 fc 01 	lds	r24, 0x01FC	; 0x8001fc <__data_end+0x4>
 318:	90 91 fd 01 	lds	r25, 0x01FD	; 0x8001fd <__data_end+0x5>
 31c:	89 2b       	or	r24, r25
 31e:	21 f4       	brne	.+8      	; 0x328 <fdevopen+0x8a>
 320:	f0 93 fd 01 	sts	0x01FD, r31	; 0x8001fd <__data_end+0x5>
 324:	e0 93 fc 01 	sts	0x01FC, r30	; 0x8001fc <__data_end+0x4>
 328:	cf 01       	movw	r24, r30
 32a:	df 91       	pop	r29
 32c:	cf 91       	pop	r28
 32e:	1f 91       	pop	r17
 330:	0f 91       	pop	r16
 332:	08 95       	ret

00000334 <printf>:
 334:	a0 e0       	ldi	r26, 0x00	; 0
 336:	b0 e0       	ldi	r27, 0x00	; 0
 338:	e0 ea       	ldi	r30, 0xA0	; 160
 33a:	f1 e0       	ldi	r31, 0x01	; 1
 33c:	0c 94 f7 05 	jmp	0xbee	; 0xbee <__prologue_saves__+0x20>
 340:	ae 01       	movw	r20, r28
 342:	4b 5f       	subi	r20, 0xFB	; 251
 344:	5f 4f       	sbci	r21, 0xFF	; 255
 346:	fa 01       	movw	r30, r20
 348:	61 91       	ld	r22, Z+
 34a:	71 91       	ld	r23, Z+
 34c:	af 01       	movw	r20, r30
 34e:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <__data_end+0x2>
 352:	90 91 fb 01 	lds	r25, 0x01FB	; 0x8001fb <__data_end+0x3>
 356:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <vfprintf>
 35a:	e2 e0       	ldi	r30, 0x02	; 2
 35c:	0c 94 13 06 	jmp	0xc26	; 0xc26 <__epilogue_restores__+0x20>

00000360 <puts>:
 360:	0f 93       	push	r16
 362:	1f 93       	push	r17
 364:	cf 93       	push	r28
 366:	df 93       	push	r29
 368:	e0 91 fa 01 	lds	r30, 0x01FA	; 0x8001fa <__data_end+0x2>
 36c:	f0 91 fb 01 	lds	r31, 0x01FB	; 0x8001fb <__data_end+0x3>
 370:	23 81       	ldd	r18, Z+3	; 0x03
 372:	21 ff       	sbrs	r18, 1
 374:	1b c0       	rjmp	.+54     	; 0x3ac <puts+0x4c>
 376:	8c 01       	movw	r16, r24
 378:	d0 e0       	ldi	r29, 0x00	; 0
 37a:	c0 e0       	ldi	r28, 0x00	; 0
 37c:	f8 01       	movw	r30, r16
 37e:	81 91       	ld	r24, Z+
 380:	8f 01       	movw	r16, r30
 382:	60 91 fa 01 	lds	r22, 0x01FA	; 0x8001fa <__data_end+0x2>
 386:	70 91 fb 01 	lds	r23, 0x01FB	; 0x8001fb <__data_end+0x3>
 38a:	db 01       	movw	r26, r22
 38c:	18 96       	adiw	r26, 0x08	; 8
 38e:	ed 91       	ld	r30, X+
 390:	fc 91       	ld	r31, X
 392:	19 97       	sbiw	r26, 0x09	; 9
 394:	88 23       	and	r24, r24
 396:	31 f0       	breq	.+12     	; 0x3a4 <puts+0x44>
 398:	09 95       	icall
 39a:	89 2b       	or	r24, r25
 39c:	79 f3       	breq	.-34     	; 0x37c <puts+0x1c>
 39e:	df ef       	ldi	r29, 0xFF	; 255
 3a0:	cf ef       	ldi	r28, 0xFF	; 255
 3a2:	ec cf       	rjmp	.-40     	; 0x37c <puts+0x1c>
 3a4:	8a e0       	ldi	r24, 0x0A	; 10
 3a6:	09 95       	icall
 3a8:	89 2b       	or	r24, r25
 3aa:	19 f0       	breq	.+6      	; 0x3b2 <puts+0x52>
 3ac:	8f ef       	ldi	r24, 0xFF	; 255
 3ae:	9f ef       	ldi	r25, 0xFF	; 255
 3b0:	02 c0       	rjmp	.+4      	; 0x3b6 <puts+0x56>
 3b2:	8d 2f       	mov	r24, r29
 3b4:	9c 2f       	mov	r25, r28
 3b6:	df 91       	pop	r29
 3b8:	cf 91       	pop	r28
 3ba:	1f 91       	pop	r17
 3bc:	0f 91       	pop	r16
 3be:	08 95       	ret

000003c0 <vfprintf>:
 3c0:	ab e0       	ldi	r26, 0x0B	; 11
 3c2:	b0 e0       	ldi	r27, 0x00	; 0
 3c4:	e6 ee       	ldi	r30, 0xE6	; 230
 3c6:	f1 e0       	ldi	r31, 0x01	; 1
 3c8:	0c 94 e7 05 	jmp	0xbce	; 0xbce <__prologue_saves__>
 3cc:	6c 01       	movw	r12, r24
 3ce:	7b 01       	movw	r14, r22
 3d0:	8a 01       	movw	r16, r20
 3d2:	fc 01       	movw	r30, r24
 3d4:	17 82       	std	Z+7, r1	; 0x07
 3d6:	16 82       	std	Z+6, r1	; 0x06
 3d8:	83 81       	ldd	r24, Z+3	; 0x03
 3da:	81 ff       	sbrs	r24, 1
 3dc:	cc c1       	rjmp	.+920    	; 0x776 <__stack+0x277>
 3de:	ce 01       	movw	r24, r28
 3e0:	01 96       	adiw	r24, 0x01	; 1
 3e2:	3c 01       	movw	r6, r24
 3e4:	f6 01       	movw	r30, r12
 3e6:	93 81       	ldd	r25, Z+3	; 0x03
 3e8:	f7 01       	movw	r30, r14
 3ea:	93 fd       	sbrc	r25, 3
 3ec:	85 91       	lpm	r24, Z+
 3ee:	93 ff       	sbrs	r25, 3
 3f0:	81 91       	ld	r24, Z+
 3f2:	7f 01       	movw	r14, r30
 3f4:	88 23       	and	r24, r24
 3f6:	09 f4       	brne	.+2      	; 0x3fa <vfprintf+0x3a>
 3f8:	ba c1       	rjmp	.+884    	; 0x76e <__stack+0x26f>
 3fa:	85 32       	cpi	r24, 0x25	; 37
 3fc:	39 f4       	brne	.+14     	; 0x40c <__DATA_REGION_LENGTH__+0xc>
 3fe:	93 fd       	sbrc	r25, 3
 400:	85 91       	lpm	r24, Z+
 402:	93 ff       	sbrs	r25, 3
 404:	81 91       	ld	r24, Z+
 406:	7f 01       	movw	r14, r30
 408:	85 32       	cpi	r24, 0x25	; 37
 40a:	29 f4       	brne	.+10     	; 0x416 <__DATA_REGION_LENGTH__+0x16>
 40c:	b6 01       	movw	r22, r12
 40e:	90 e0       	ldi	r25, 0x00	; 0
 410:	0e 94 1b 05 	call	0xa36	; 0xa36 <fputc>
 414:	e7 cf       	rjmp	.-50     	; 0x3e4 <vfprintf+0x24>
 416:	91 2c       	mov	r9, r1
 418:	21 2c       	mov	r2, r1
 41a:	31 2c       	mov	r3, r1
 41c:	ff e1       	ldi	r31, 0x1F	; 31
 41e:	f3 15       	cp	r31, r3
 420:	d8 f0       	brcs	.+54     	; 0x458 <__DATA_REGION_LENGTH__+0x58>
 422:	8b 32       	cpi	r24, 0x2B	; 43
 424:	79 f0       	breq	.+30     	; 0x444 <__DATA_REGION_LENGTH__+0x44>
 426:	38 f4       	brcc	.+14     	; 0x436 <__DATA_REGION_LENGTH__+0x36>
 428:	80 32       	cpi	r24, 0x20	; 32
 42a:	79 f0       	breq	.+30     	; 0x44a <__DATA_REGION_LENGTH__+0x4a>
 42c:	83 32       	cpi	r24, 0x23	; 35
 42e:	a1 f4       	brne	.+40     	; 0x458 <__DATA_REGION_LENGTH__+0x58>
 430:	23 2d       	mov	r18, r3
 432:	20 61       	ori	r18, 0x10	; 16
 434:	1d c0       	rjmp	.+58     	; 0x470 <__DATA_REGION_LENGTH__+0x70>
 436:	8d 32       	cpi	r24, 0x2D	; 45
 438:	61 f0       	breq	.+24     	; 0x452 <__DATA_REGION_LENGTH__+0x52>
 43a:	80 33       	cpi	r24, 0x30	; 48
 43c:	69 f4       	brne	.+26     	; 0x458 <__DATA_REGION_LENGTH__+0x58>
 43e:	23 2d       	mov	r18, r3
 440:	21 60       	ori	r18, 0x01	; 1
 442:	16 c0       	rjmp	.+44     	; 0x470 <__DATA_REGION_LENGTH__+0x70>
 444:	83 2d       	mov	r24, r3
 446:	82 60       	ori	r24, 0x02	; 2
 448:	38 2e       	mov	r3, r24
 44a:	e3 2d       	mov	r30, r3
 44c:	e4 60       	ori	r30, 0x04	; 4
 44e:	3e 2e       	mov	r3, r30
 450:	2a c0       	rjmp	.+84     	; 0x4a6 <__DATA_REGION_LENGTH__+0xa6>
 452:	f3 2d       	mov	r31, r3
 454:	f8 60       	ori	r31, 0x08	; 8
 456:	1d c0       	rjmp	.+58     	; 0x492 <__DATA_REGION_LENGTH__+0x92>
 458:	37 fc       	sbrc	r3, 7
 45a:	2d c0       	rjmp	.+90     	; 0x4b6 <__DATA_REGION_LENGTH__+0xb6>
 45c:	20 ed       	ldi	r18, 0xD0	; 208
 45e:	28 0f       	add	r18, r24
 460:	2a 30       	cpi	r18, 0x0A	; 10
 462:	40 f0       	brcs	.+16     	; 0x474 <__DATA_REGION_LENGTH__+0x74>
 464:	8e 32       	cpi	r24, 0x2E	; 46
 466:	b9 f4       	brne	.+46     	; 0x496 <__DATA_REGION_LENGTH__+0x96>
 468:	36 fc       	sbrc	r3, 6
 46a:	81 c1       	rjmp	.+770    	; 0x76e <__stack+0x26f>
 46c:	23 2d       	mov	r18, r3
 46e:	20 64       	ori	r18, 0x40	; 64
 470:	32 2e       	mov	r3, r18
 472:	19 c0       	rjmp	.+50     	; 0x4a6 <__DATA_REGION_LENGTH__+0xa6>
 474:	36 fe       	sbrs	r3, 6
 476:	06 c0       	rjmp	.+12     	; 0x484 <__DATA_REGION_LENGTH__+0x84>
 478:	8a e0       	ldi	r24, 0x0A	; 10
 47a:	98 9e       	mul	r9, r24
 47c:	20 0d       	add	r18, r0
 47e:	11 24       	eor	r1, r1
 480:	92 2e       	mov	r9, r18
 482:	11 c0       	rjmp	.+34     	; 0x4a6 <__DATA_REGION_LENGTH__+0xa6>
 484:	ea e0       	ldi	r30, 0x0A	; 10
 486:	2e 9e       	mul	r2, r30
 488:	20 0d       	add	r18, r0
 48a:	11 24       	eor	r1, r1
 48c:	22 2e       	mov	r2, r18
 48e:	f3 2d       	mov	r31, r3
 490:	f0 62       	ori	r31, 0x20	; 32
 492:	3f 2e       	mov	r3, r31
 494:	08 c0       	rjmp	.+16     	; 0x4a6 <__DATA_REGION_LENGTH__+0xa6>
 496:	8c 36       	cpi	r24, 0x6C	; 108
 498:	21 f4       	brne	.+8      	; 0x4a2 <__DATA_REGION_LENGTH__+0xa2>
 49a:	83 2d       	mov	r24, r3
 49c:	80 68       	ori	r24, 0x80	; 128
 49e:	38 2e       	mov	r3, r24
 4a0:	02 c0       	rjmp	.+4      	; 0x4a6 <__DATA_REGION_LENGTH__+0xa6>
 4a2:	88 36       	cpi	r24, 0x68	; 104
 4a4:	41 f4       	brne	.+16     	; 0x4b6 <__DATA_REGION_LENGTH__+0xb6>
 4a6:	f7 01       	movw	r30, r14
 4a8:	93 fd       	sbrc	r25, 3
 4aa:	85 91       	lpm	r24, Z+
 4ac:	93 ff       	sbrs	r25, 3
 4ae:	81 91       	ld	r24, Z+
 4b0:	7f 01       	movw	r14, r30
 4b2:	81 11       	cpse	r24, r1
 4b4:	b3 cf       	rjmp	.-154    	; 0x41c <__DATA_REGION_LENGTH__+0x1c>
 4b6:	98 2f       	mov	r25, r24
 4b8:	9f 7d       	andi	r25, 0xDF	; 223
 4ba:	95 54       	subi	r25, 0x45	; 69
 4bc:	93 30       	cpi	r25, 0x03	; 3
 4be:	28 f4       	brcc	.+10     	; 0x4ca <__DATA_REGION_LENGTH__+0xca>
 4c0:	0c 5f       	subi	r16, 0xFC	; 252
 4c2:	1f 4f       	sbci	r17, 0xFF	; 255
 4c4:	9f e3       	ldi	r25, 0x3F	; 63
 4c6:	99 83       	std	Y+1, r25	; 0x01
 4c8:	0d c0       	rjmp	.+26     	; 0x4e4 <__DATA_REGION_LENGTH__+0xe4>
 4ca:	83 36       	cpi	r24, 0x63	; 99
 4cc:	31 f0       	breq	.+12     	; 0x4da <__DATA_REGION_LENGTH__+0xda>
 4ce:	83 37       	cpi	r24, 0x73	; 115
 4d0:	71 f0       	breq	.+28     	; 0x4ee <__DATA_REGION_LENGTH__+0xee>
 4d2:	83 35       	cpi	r24, 0x53	; 83
 4d4:	09 f0       	breq	.+2      	; 0x4d8 <__DATA_REGION_LENGTH__+0xd8>
 4d6:	59 c0       	rjmp	.+178    	; 0x58a <__stack+0x8b>
 4d8:	21 c0       	rjmp	.+66     	; 0x51c <__stack+0x1d>
 4da:	f8 01       	movw	r30, r16
 4dc:	80 81       	ld	r24, Z
 4de:	89 83       	std	Y+1, r24	; 0x01
 4e0:	0e 5f       	subi	r16, 0xFE	; 254
 4e2:	1f 4f       	sbci	r17, 0xFF	; 255
 4e4:	88 24       	eor	r8, r8
 4e6:	83 94       	inc	r8
 4e8:	91 2c       	mov	r9, r1
 4ea:	53 01       	movw	r10, r6
 4ec:	13 c0       	rjmp	.+38     	; 0x514 <__stack+0x15>
 4ee:	28 01       	movw	r4, r16
 4f0:	f2 e0       	ldi	r31, 0x02	; 2
 4f2:	4f 0e       	add	r4, r31
 4f4:	51 1c       	adc	r5, r1
 4f6:	f8 01       	movw	r30, r16
 4f8:	a0 80       	ld	r10, Z
 4fa:	b1 80       	ldd	r11, Z+1	; 0x01
 4fc:	36 fe       	sbrs	r3, 6
 4fe:	03 c0       	rjmp	.+6      	; 0x506 <__stack+0x7>
 500:	69 2d       	mov	r22, r9
 502:	70 e0       	ldi	r23, 0x00	; 0
 504:	02 c0       	rjmp	.+4      	; 0x50a <__stack+0xb>
 506:	6f ef       	ldi	r22, 0xFF	; 255
 508:	7f ef       	ldi	r23, 0xFF	; 255
 50a:	c5 01       	movw	r24, r10
 50c:	0e 94 10 05 	call	0xa20	; 0xa20 <strnlen>
 510:	4c 01       	movw	r8, r24
 512:	82 01       	movw	r16, r4
 514:	f3 2d       	mov	r31, r3
 516:	ff 77       	andi	r31, 0x7F	; 127
 518:	3f 2e       	mov	r3, r31
 51a:	16 c0       	rjmp	.+44     	; 0x548 <__stack+0x49>
 51c:	28 01       	movw	r4, r16
 51e:	22 e0       	ldi	r18, 0x02	; 2
 520:	42 0e       	add	r4, r18
 522:	51 1c       	adc	r5, r1
 524:	f8 01       	movw	r30, r16
 526:	a0 80       	ld	r10, Z
 528:	b1 80       	ldd	r11, Z+1	; 0x01
 52a:	36 fe       	sbrs	r3, 6
 52c:	03 c0       	rjmp	.+6      	; 0x534 <__stack+0x35>
 52e:	69 2d       	mov	r22, r9
 530:	70 e0       	ldi	r23, 0x00	; 0
 532:	02 c0       	rjmp	.+4      	; 0x538 <__stack+0x39>
 534:	6f ef       	ldi	r22, 0xFF	; 255
 536:	7f ef       	ldi	r23, 0xFF	; 255
 538:	c5 01       	movw	r24, r10
 53a:	0e 94 fe 04 	call	0x9fc	; 0x9fc <strnlen_P>
 53e:	4c 01       	movw	r8, r24
 540:	f3 2d       	mov	r31, r3
 542:	f0 68       	ori	r31, 0x80	; 128
 544:	3f 2e       	mov	r3, r31
 546:	82 01       	movw	r16, r4
 548:	33 fc       	sbrc	r3, 3
 54a:	1b c0       	rjmp	.+54     	; 0x582 <__stack+0x83>
 54c:	82 2d       	mov	r24, r2
 54e:	90 e0       	ldi	r25, 0x00	; 0
 550:	88 16       	cp	r8, r24
 552:	99 06       	cpc	r9, r25
 554:	b0 f4       	brcc	.+44     	; 0x582 <__stack+0x83>
 556:	b6 01       	movw	r22, r12
 558:	80 e2       	ldi	r24, 0x20	; 32
 55a:	90 e0       	ldi	r25, 0x00	; 0
 55c:	0e 94 1b 05 	call	0xa36	; 0xa36 <fputc>
 560:	2a 94       	dec	r2
 562:	f4 cf       	rjmp	.-24     	; 0x54c <__stack+0x4d>
 564:	f5 01       	movw	r30, r10
 566:	37 fc       	sbrc	r3, 7
 568:	85 91       	lpm	r24, Z+
 56a:	37 fe       	sbrs	r3, 7
 56c:	81 91       	ld	r24, Z+
 56e:	5f 01       	movw	r10, r30
 570:	b6 01       	movw	r22, r12
 572:	90 e0       	ldi	r25, 0x00	; 0
 574:	0e 94 1b 05 	call	0xa36	; 0xa36 <fputc>
 578:	21 10       	cpse	r2, r1
 57a:	2a 94       	dec	r2
 57c:	21 e0       	ldi	r18, 0x01	; 1
 57e:	82 1a       	sub	r8, r18
 580:	91 08       	sbc	r9, r1
 582:	81 14       	cp	r8, r1
 584:	91 04       	cpc	r9, r1
 586:	71 f7       	brne	.-36     	; 0x564 <__stack+0x65>
 588:	e8 c0       	rjmp	.+464    	; 0x75a <__stack+0x25b>
 58a:	84 36       	cpi	r24, 0x64	; 100
 58c:	11 f0       	breq	.+4      	; 0x592 <__stack+0x93>
 58e:	89 36       	cpi	r24, 0x69	; 105
 590:	41 f5       	brne	.+80     	; 0x5e2 <__stack+0xe3>
 592:	f8 01       	movw	r30, r16
 594:	37 fe       	sbrs	r3, 7
 596:	07 c0       	rjmp	.+14     	; 0x5a6 <__stack+0xa7>
 598:	60 81       	ld	r22, Z
 59a:	71 81       	ldd	r23, Z+1	; 0x01
 59c:	82 81       	ldd	r24, Z+2	; 0x02
 59e:	93 81       	ldd	r25, Z+3	; 0x03
 5a0:	0c 5f       	subi	r16, 0xFC	; 252
 5a2:	1f 4f       	sbci	r17, 0xFF	; 255
 5a4:	08 c0       	rjmp	.+16     	; 0x5b6 <__stack+0xb7>
 5a6:	60 81       	ld	r22, Z
 5a8:	71 81       	ldd	r23, Z+1	; 0x01
 5aa:	07 2e       	mov	r0, r23
 5ac:	00 0c       	add	r0, r0
 5ae:	88 0b       	sbc	r24, r24
 5b0:	99 0b       	sbc	r25, r25
 5b2:	0e 5f       	subi	r16, 0xFE	; 254
 5b4:	1f 4f       	sbci	r17, 0xFF	; 255
 5b6:	f3 2d       	mov	r31, r3
 5b8:	ff 76       	andi	r31, 0x6F	; 111
 5ba:	3f 2e       	mov	r3, r31
 5bc:	97 ff       	sbrs	r25, 7
 5be:	09 c0       	rjmp	.+18     	; 0x5d2 <__stack+0xd3>
 5c0:	90 95       	com	r25
 5c2:	80 95       	com	r24
 5c4:	70 95       	com	r23
 5c6:	61 95       	neg	r22
 5c8:	7f 4f       	sbci	r23, 0xFF	; 255
 5ca:	8f 4f       	sbci	r24, 0xFF	; 255
 5cc:	9f 4f       	sbci	r25, 0xFF	; 255
 5ce:	f0 68       	ori	r31, 0x80	; 128
 5d0:	3f 2e       	mov	r3, r31
 5d2:	2a e0       	ldi	r18, 0x0A	; 10
 5d4:	30 e0       	ldi	r19, 0x00	; 0
 5d6:	a3 01       	movw	r20, r6
 5d8:	0e 94 57 05 	call	0xaae	; 0xaae <__ultoa_invert>
 5dc:	88 2e       	mov	r8, r24
 5de:	86 18       	sub	r8, r6
 5e0:	45 c0       	rjmp	.+138    	; 0x66c <__stack+0x16d>
 5e2:	85 37       	cpi	r24, 0x75	; 117
 5e4:	31 f4       	brne	.+12     	; 0x5f2 <__stack+0xf3>
 5e6:	23 2d       	mov	r18, r3
 5e8:	2f 7e       	andi	r18, 0xEF	; 239
 5ea:	b2 2e       	mov	r11, r18
 5ec:	2a e0       	ldi	r18, 0x0A	; 10
 5ee:	30 e0       	ldi	r19, 0x00	; 0
 5f0:	25 c0       	rjmp	.+74     	; 0x63c <__stack+0x13d>
 5f2:	93 2d       	mov	r25, r3
 5f4:	99 7f       	andi	r25, 0xF9	; 249
 5f6:	b9 2e       	mov	r11, r25
 5f8:	8f 36       	cpi	r24, 0x6F	; 111
 5fa:	c1 f0       	breq	.+48     	; 0x62c <__stack+0x12d>
 5fc:	18 f4       	brcc	.+6      	; 0x604 <__stack+0x105>
 5fe:	88 35       	cpi	r24, 0x58	; 88
 600:	79 f0       	breq	.+30     	; 0x620 <__stack+0x121>
 602:	b5 c0       	rjmp	.+362    	; 0x76e <__stack+0x26f>
 604:	80 37       	cpi	r24, 0x70	; 112
 606:	19 f0       	breq	.+6      	; 0x60e <__stack+0x10f>
 608:	88 37       	cpi	r24, 0x78	; 120
 60a:	21 f0       	breq	.+8      	; 0x614 <__stack+0x115>
 60c:	b0 c0       	rjmp	.+352    	; 0x76e <__stack+0x26f>
 60e:	e9 2f       	mov	r30, r25
 610:	e0 61       	ori	r30, 0x10	; 16
 612:	be 2e       	mov	r11, r30
 614:	b4 fe       	sbrs	r11, 4
 616:	0d c0       	rjmp	.+26     	; 0x632 <__stack+0x133>
 618:	fb 2d       	mov	r31, r11
 61a:	f4 60       	ori	r31, 0x04	; 4
 61c:	bf 2e       	mov	r11, r31
 61e:	09 c0       	rjmp	.+18     	; 0x632 <__stack+0x133>
 620:	34 fe       	sbrs	r3, 4
 622:	0a c0       	rjmp	.+20     	; 0x638 <__stack+0x139>
 624:	29 2f       	mov	r18, r25
 626:	26 60       	ori	r18, 0x06	; 6
 628:	b2 2e       	mov	r11, r18
 62a:	06 c0       	rjmp	.+12     	; 0x638 <__stack+0x139>
 62c:	28 e0       	ldi	r18, 0x08	; 8
 62e:	30 e0       	ldi	r19, 0x00	; 0
 630:	05 c0       	rjmp	.+10     	; 0x63c <__stack+0x13d>
 632:	20 e1       	ldi	r18, 0x10	; 16
 634:	30 e0       	ldi	r19, 0x00	; 0
 636:	02 c0       	rjmp	.+4      	; 0x63c <__stack+0x13d>
 638:	20 e1       	ldi	r18, 0x10	; 16
 63a:	32 e0       	ldi	r19, 0x02	; 2
 63c:	f8 01       	movw	r30, r16
 63e:	b7 fe       	sbrs	r11, 7
 640:	07 c0       	rjmp	.+14     	; 0x650 <__stack+0x151>
 642:	60 81       	ld	r22, Z
 644:	71 81       	ldd	r23, Z+1	; 0x01
 646:	82 81       	ldd	r24, Z+2	; 0x02
 648:	93 81       	ldd	r25, Z+3	; 0x03
 64a:	0c 5f       	subi	r16, 0xFC	; 252
 64c:	1f 4f       	sbci	r17, 0xFF	; 255
 64e:	06 c0       	rjmp	.+12     	; 0x65c <__stack+0x15d>
 650:	60 81       	ld	r22, Z
 652:	71 81       	ldd	r23, Z+1	; 0x01
 654:	80 e0       	ldi	r24, 0x00	; 0
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	0e 5f       	subi	r16, 0xFE	; 254
 65a:	1f 4f       	sbci	r17, 0xFF	; 255
 65c:	a3 01       	movw	r20, r6
 65e:	0e 94 57 05 	call	0xaae	; 0xaae <__ultoa_invert>
 662:	88 2e       	mov	r8, r24
 664:	86 18       	sub	r8, r6
 666:	fb 2d       	mov	r31, r11
 668:	ff 77       	andi	r31, 0x7F	; 127
 66a:	3f 2e       	mov	r3, r31
 66c:	36 fe       	sbrs	r3, 6
 66e:	0d c0       	rjmp	.+26     	; 0x68a <__stack+0x18b>
 670:	23 2d       	mov	r18, r3
 672:	2e 7f       	andi	r18, 0xFE	; 254
 674:	a2 2e       	mov	r10, r18
 676:	89 14       	cp	r8, r9
 678:	58 f4       	brcc	.+22     	; 0x690 <__stack+0x191>
 67a:	34 fe       	sbrs	r3, 4
 67c:	0b c0       	rjmp	.+22     	; 0x694 <__stack+0x195>
 67e:	32 fc       	sbrc	r3, 2
 680:	09 c0       	rjmp	.+18     	; 0x694 <__stack+0x195>
 682:	83 2d       	mov	r24, r3
 684:	8e 7e       	andi	r24, 0xEE	; 238
 686:	a8 2e       	mov	r10, r24
 688:	05 c0       	rjmp	.+10     	; 0x694 <__stack+0x195>
 68a:	b8 2c       	mov	r11, r8
 68c:	a3 2c       	mov	r10, r3
 68e:	03 c0       	rjmp	.+6      	; 0x696 <__stack+0x197>
 690:	b8 2c       	mov	r11, r8
 692:	01 c0       	rjmp	.+2      	; 0x696 <__stack+0x197>
 694:	b9 2c       	mov	r11, r9
 696:	a4 fe       	sbrs	r10, 4
 698:	0f c0       	rjmp	.+30     	; 0x6b8 <__stack+0x1b9>
 69a:	fe 01       	movw	r30, r28
 69c:	e8 0d       	add	r30, r8
 69e:	f1 1d       	adc	r31, r1
 6a0:	80 81       	ld	r24, Z
 6a2:	80 33       	cpi	r24, 0x30	; 48
 6a4:	21 f4       	brne	.+8      	; 0x6ae <__stack+0x1af>
 6a6:	9a 2d       	mov	r25, r10
 6a8:	99 7e       	andi	r25, 0xE9	; 233
 6aa:	a9 2e       	mov	r10, r25
 6ac:	09 c0       	rjmp	.+18     	; 0x6c0 <__stack+0x1c1>
 6ae:	a2 fe       	sbrs	r10, 2
 6b0:	06 c0       	rjmp	.+12     	; 0x6be <__stack+0x1bf>
 6b2:	b3 94       	inc	r11
 6b4:	b3 94       	inc	r11
 6b6:	04 c0       	rjmp	.+8      	; 0x6c0 <__stack+0x1c1>
 6b8:	8a 2d       	mov	r24, r10
 6ba:	86 78       	andi	r24, 0x86	; 134
 6bc:	09 f0       	breq	.+2      	; 0x6c0 <__stack+0x1c1>
 6be:	b3 94       	inc	r11
 6c0:	a3 fc       	sbrc	r10, 3
 6c2:	11 c0       	rjmp	.+34     	; 0x6e6 <__stack+0x1e7>
 6c4:	a0 fe       	sbrs	r10, 0
 6c6:	06 c0       	rjmp	.+12     	; 0x6d4 <__stack+0x1d5>
 6c8:	b2 14       	cp	r11, r2
 6ca:	88 f4       	brcc	.+34     	; 0x6ee <__stack+0x1ef>
 6cc:	28 0c       	add	r2, r8
 6ce:	92 2c       	mov	r9, r2
 6d0:	9b 18       	sub	r9, r11
 6d2:	0e c0       	rjmp	.+28     	; 0x6f0 <__stack+0x1f1>
 6d4:	b2 14       	cp	r11, r2
 6d6:	60 f4       	brcc	.+24     	; 0x6f0 <__stack+0x1f1>
 6d8:	b6 01       	movw	r22, r12
 6da:	80 e2       	ldi	r24, 0x20	; 32
 6dc:	90 e0       	ldi	r25, 0x00	; 0
 6de:	0e 94 1b 05 	call	0xa36	; 0xa36 <fputc>
 6e2:	b3 94       	inc	r11
 6e4:	f7 cf       	rjmp	.-18     	; 0x6d4 <__stack+0x1d5>
 6e6:	b2 14       	cp	r11, r2
 6e8:	18 f4       	brcc	.+6      	; 0x6f0 <__stack+0x1f1>
 6ea:	2b 18       	sub	r2, r11
 6ec:	02 c0       	rjmp	.+4      	; 0x6f2 <__stack+0x1f3>
 6ee:	98 2c       	mov	r9, r8
 6f0:	21 2c       	mov	r2, r1
 6f2:	a4 fe       	sbrs	r10, 4
 6f4:	10 c0       	rjmp	.+32     	; 0x716 <__stack+0x217>
 6f6:	b6 01       	movw	r22, r12
 6f8:	80 e3       	ldi	r24, 0x30	; 48
 6fa:	90 e0       	ldi	r25, 0x00	; 0
 6fc:	0e 94 1b 05 	call	0xa36	; 0xa36 <fputc>
 700:	a2 fe       	sbrs	r10, 2
 702:	17 c0       	rjmp	.+46     	; 0x732 <__stack+0x233>
 704:	a1 fc       	sbrc	r10, 1
 706:	03 c0       	rjmp	.+6      	; 0x70e <__stack+0x20f>
 708:	88 e7       	ldi	r24, 0x78	; 120
 70a:	90 e0       	ldi	r25, 0x00	; 0
 70c:	02 c0       	rjmp	.+4      	; 0x712 <__stack+0x213>
 70e:	88 e5       	ldi	r24, 0x58	; 88
 710:	90 e0       	ldi	r25, 0x00	; 0
 712:	b6 01       	movw	r22, r12
 714:	0c c0       	rjmp	.+24     	; 0x72e <__stack+0x22f>
 716:	8a 2d       	mov	r24, r10
 718:	86 78       	andi	r24, 0x86	; 134
 71a:	59 f0       	breq	.+22     	; 0x732 <__stack+0x233>
 71c:	a1 fe       	sbrs	r10, 1
 71e:	02 c0       	rjmp	.+4      	; 0x724 <__stack+0x225>
 720:	8b e2       	ldi	r24, 0x2B	; 43
 722:	01 c0       	rjmp	.+2      	; 0x726 <__stack+0x227>
 724:	80 e2       	ldi	r24, 0x20	; 32
 726:	a7 fc       	sbrc	r10, 7
 728:	8d e2       	ldi	r24, 0x2D	; 45
 72a:	b6 01       	movw	r22, r12
 72c:	90 e0       	ldi	r25, 0x00	; 0
 72e:	0e 94 1b 05 	call	0xa36	; 0xa36 <fputc>
 732:	89 14       	cp	r8, r9
 734:	38 f4       	brcc	.+14     	; 0x744 <__stack+0x245>
 736:	b6 01       	movw	r22, r12
 738:	80 e3       	ldi	r24, 0x30	; 48
 73a:	90 e0       	ldi	r25, 0x00	; 0
 73c:	0e 94 1b 05 	call	0xa36	; 0xa36 <fputc>
 740:	9a 94       	dec	r9
 742:	f7 cf       	rjmp	.-18     	; 0x732 <__stack+0x233>
 744:	8a 94       	dec	r8
 746:	f3 01       	movw	r30, r6
 748:	e8 0d       	add	r30, r8
 74a:	f1 1d       	adc	r31, r1
 74c:	80 81       	ld	r24, Z
 74e:	b6 01       	movw	r22, r12
 750:	90 e0       	ldi	r25, 0x00	; 0
 752:	0e 94 1b 05 	call	0xa36	; 0xa36 <fputc>
 756:	81 10       	cpse	r8, r1
 758:	f5 cf       	rjmp	.-22     	; 0x744 <__stack+0x245>
 75a:	22 20       	and	r2, r2
 75c:	09 f4       	brne	.+2      	; 0x760 <__stack+0x261>
 75e:	42 ce       	rjmp	.-892    	; 0x3e4 <vfprintf+0x24>
 760:	b6 01       	movw	r22, r12
 762:	80 e2       	ldi	r24, 0x20	; 32
 764:	90 e0       	ldi	r25, 0x00	; 0
 766:	0e 94 1b 05 	call	0xa36	; 0xa36 <fputc>
 76a:	2a 94       	dec	r2
 76c:	f6 cf       	rjmp	.-20     	; 0x75a <__stack+0x25b>
 76e:	f6 01       	movw	r30, r12
 770:	86 81       	ldd	r24, Z+6	; 0x06
 772:	97 81       	ldd	r25, Z+7	; 0x07
 774:	02 c0       	rjmp	.+4      	; 0x77a <__stack+0x27b>
 776:	8f ef       	ldi	r24, 0xFF	; 255
 778:	9f ef       	ldi	r25, 0xFF	; 255
 77a:	2b 96       	adiw	r28, 0x0b	; 11
 77c:	e2 e1       	ldi	r30, 0x12	; 18
 77e:	0c 94 03 06 	jmp	0xc06	; 0xc06 <__epilogue_restores__>

00000782 <calloc>:
 782:	0f 93       	push	r16
 784:	1f 93       	push	r17
 786:	cf 93       	push	r28
 788:	df 93       	push	r29
 78a:	86 9f       	mul	r24, r22
 78c:	80 01       	movw	r16, r0
 78e:	87 9f       	mul	r24, r23
 790:	10 0d       	add	r17, r0
 792:	96 9f       	mul	r25, r22
 794:	10 0d       	add	r17, r0
 796:	11 24       	eor	r1, r1
 798:	c8 01       	movw	r24, r16
 79a:	0e 94 dd 03 	call	0x7ba	; 0x7ba <malloc>
 79e:	ec 01       	movw	r28, r24
 7a0:	00 97       	sbiw	r24, 0x00	; 0
 7a2:	29 f0       	breq	.+10     	; 0x7ae <calloc+0x2c>
 7a4:	a8 01       	movw	r20, r16
 7a6:	60 e0       	ldi	r22, 0x00	; 0
 7a8:	70 e0       	ldi	r23, 0x00	; 0
 7aa:	0e 94 09 05 	call	0xa12	; 0xa12 <memset>
 7ae:	ce 01       	movw	r24, r28
 7b0:	df 91       	pop	r29
 7b2:	cf 91       	pop	r28
 7b4:	1f 91       	pop	r17
 7b6:	0f 91       	pop	r16
 7b8:	08 95       	ret

000007ba <malloc>:
 7ba:	0f 93       	push	r16
 7bc:	1f 93       	push	r17
 7be:	cf 93       	push	r28
 7c0:	df 93       	push	r29
 7c2:	82 30       	cpi	r24, 0x02	; 2
 7c4:	91 05       	cpc	r25, r1
 7c6:	10 f4       	brcc	.+4      	; 0x7cc <malloc+0x12>
 7c8:	82 e0       	ldi	r24, 0x02	; 2
 7ca:	90 e0       	ldi	r25, 0x00	; 0
 7cc:	e0 91 00 02 	lds	r30, 0x0200	; 0x800200 <__flp>
 7d0:	f0 91 01 02 	lds	r31, 0x0201	; 0x800201 <__flp+0x1>
 7d4:	20 e0       	ldi	r18, 0x00	; 0
 7d6:	30 e0       	ldi	r19, 0x00	; 0
 7d8:	a0 e0       	ldi	r26, 0x00	; 0
 7da:	b0 e0       	ldi	r27, 0x00	; 0
 7dc:	30 97       	sbiw	r30, 0x00	; 0
 7de:	19 f1       	breq	.+70     	; 0x826 <malloc+0x6c>
 7e0:	40 81       	ld	r20, Z
 7e2:	51 81       	ldd	r21, Z+1	; 0x01
 7e4:	02 81       	ldd	r16, Z+2	; 0x02
 7e6:	13 81       	ldd	r17, Z+3	; 0x03
 7e8:	48 17       	cp	r20, r24
 7ea:	59 07       	cpc	r21, r25
 7ec:	c8 f0       	brcs	.+50     	; 0x820 <malloc+0x66>
 7ee:	84 17       	cp	r24, r20
 7f0:	95 07       	cpc	r25, r21
 7f2:	69 f4       	brne	.+26     	; 0x80e <malloc+0x54>
 7f4:	10 97       	sbiw	r26, 0x00	; 0
 7f6:	31 f0       	breq	.+12     	; 0x804 <malloc+0x4a>
 7f8:	12 96       	adiw	r26, 0x02	; 2
 7fa:	0c 93       	st	X, r16
 7fc:	12 97       	sbiw	r26, 0x02	; 2
 7fe:	13 96       	adiw	r26, 0x03	; 3
 800:	1c 93       	st	X, r17
 802:	27 c0       	rjmp	.+78     	; 0x852 <malloc+0x98>
 804:	00 93 00 02 	sts	0x0200, r16	; 0x800200 <__flp>
 808:	10 93 01 02 	sts	0x0201, r17	; 0x800201 <__flp+0x1>
 80c:	22 c0       	rjmp	.+68     	; 0x852 <malloc+0x98>
 80e:	21 15       	cp	r18, r1
 810:	31 05       	cpc	r19, r1
 812:	19 f0       	breq	.+6      	; 0x81a <malloc+0x60>
 814:	42 17       	cp	r20, r18
 816:	53 07       	cpc	r21, r19
 818:	18 f4       	brcc	.+6      	; 0x820 <malloc+0x66>
 81a:	9a 01       	movw	r18, r20
 81c:	bd 01       	movw	r22, r26
 81e:	ef 01       	movw	r28, r30
 820:	df 01       	movw	r26, r30
 822:	f8 01       	movw	r30, r16
 824:	db cf       	rjmp	.-74     	; 0x7dc <malloc+0x22>
 826:	21 15       	cp	r18, r1
 828:	31 05       	cpc	r19, r1
 82a:	f9 f0       	breq	.+62     	; 0x86a <malloc+0xb0>
 82c:	28 1b       	sub	r18, r24
 82e:	39 0b       	sbc	r19, r25
 830:	24 30       	cpi	r18, 0x04	; 4
 832:	31 05       	cpc	r19, r1
 834:	80 f4       	brcc	.+32     	; 0x856 <malloc+0x9c>
 836:	8a 81       	ldd	r24, Y+2	; 0x02
 838:	9b 81       	ldd	r25, Y+3	; 0x03
 83a:	61 15       	cp	r22, r1
 83c:	71 05       	cpc	r23, r1
 83e:	21 f0       	breq	.+8      	; 0x848 <malloc+0x8e>
 840:	fb 01       	movw	r30, r22
 842:	93 83       	std	Z+3, r25	; 0x03
 844:	82 83       	std	Z+2, r24	; 0x02
 846:	04 c0       	rjmp	.+8      	; 0x850 <malloc+0x96>
 848:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <__flp+0x1>
 84c:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__flp>
 850:	fe 01       	movw	r30, r28
 852:	32 96       	adiw	r30, 0x02	; 2
 854:	44 c0       	rjmp	.+136    	; 0x8de <malloc+0x124>
 856:	fe 01       	movw	r30, r28
 858:	e2 0f       	add	r30, r18
 85a:	f3 1f       	adc	r31, r19
 85c:	81 93       	st	Z+, r24
 85e:	91 93       	st	Z+, r25
 860:	22 50       	subi	r18, 0x02	; 2
 862:	31 09       	sbc	r19, r1
 864:	39 83       	std	Y+1, r19	; 0x01
 866:	28 83       	st	Y, r18
 868:	3a c0       	rjmp	.+116    	; 0x8de <malloc+0x124>
 86a:	20 91 fe 01 	lds	r18, 0x01FE	; 0x8001fe <__brkval>
 86e:	30 91 ff 01 	lds	r19, 0x01FF	; 0x8001ff <__brkval+0x1>
 872:	23 2b       	or	r18, r19
 874:	41 f4       	brne	.+16     	; 0x886 <malloc+0xcc>
 876:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
 87a:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
 87e:	30 93 ff 01 	sts	0x01FF, r19	; 0x8001ff <__brkval+0x1>
 882:	20 93 fe 01 	sts	0x01FE, r18	; 0x8001fe <__brkval>
 886:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
 88a:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
 88e:	21 15       	cp	r18, r1
 890:	31 05       	cpc	r19, r1
 892:	41 f4       	brne	.+16     	; 0x8a4 <malloc+0xea>
 894:	2d b7       	in	r18, 0x3d	; 61
 896:	3e b7       	in	r19, 0x3e	; 62
 898:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
 89c:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
 8a0:	24 1b       	sub	r18, r20
 8a2:	35 0b       	sbc	r19, r21
 8a4:	e0 91 fe 01 	lds	r30, 0x01FE	; 0x8001fe <__brkval>
 8a8:	f0 91 ff 01 	lds	r31, 0x01FF	; 0x8001ff <__brkval+0x1>
 8ac:	e2 17       	cp	r30, r18
 8ae:	f3 07       	cpc	r31, r19
 8b0:	a0 f4       	brcc	.+40     	; 0x8da <malloc+0x120>
 8b2:	2e 1b       	sub	r18, r30
 8b4:	3f 0b       	sbc	r19, r31
 8b6:	28 17       	cp	r18, r24
 8b8:	39 07       	cpc	r19, r25
 8ba:	78 f0       	brcs	.+30     	; 0x8da <malloc+0x120>
 8bc:	ac 01       	movw	r20, r24
 8be:	4e 5f       	subi	r20, 0xFE	; 254
 8c0:	5f 4f       	sbci	r21, 0xFF	; 255
 8c2:	24 17       	cp	r18, r20
 8c4:	35 07       	cpc	r19, r21
 8c6:	48 f0       	brcs	.+18     	; 0x8da <malloc+0x120>
 8c8:	4e 0f       	add	r20, r30
 8ca:	5f 1f       	adc	r21, r31
 8cc:	50 93 ff 01 	sts	0x01FF, r21	; 0x8001ff <__brkval+0x1>
 8d0:	40 93 fe 01 	sts	0x01FE, r20	; 0x8001fe <__brkval>
 8d4:	81 93       	st	Z+, r24
 8d6:	91 93       	st	Z+, r25
 8d8:	02 c0       	rjmp	.+4      	; 0x8de <malloc+0x124>
 8da:	e0 e0       	ldi	r30, 0x00	; 0
 8dc:	f0 e0       	ldi	r31, 0x00	; 0
 8de:	cf 01       	movw	r24, r30
 8e0:	df 91       	pop	r29
 8e2:	cf 91       	pop	r28
 8e4:	1f 91       	pop	r17
 8e6:	0f 91       	pop	r16
 8e8:	08 95       	ret

000008ea <free>:
 8ea:	cf 93       	push	r28
 8ec:	df 93       	push	r29
 8ee:	00 97       	sbiw	r24, 0x00	; 0
 8f0:	09 f4       	brne	.+2      	; 0x8f4 <free+0xa>
 8f2:	81 c0       	rjmp	.+258    	; 0x9f6 <free+0x10c>
 8f4:	fc 01       	movw	r30, r24
 8f6:	32 97       	sbiw	r30, 0x02	; 2
 8f8:	13 82       	std	Z+3, r1	; 0x03
 8fa:	12 82       	std	Z+2, r1	; 0x02
 8fc:	a0 91 00 02 	lds	r26, 0x0200	; 0x800200 <__flp>
 900:	b0 91 01 02 	lds	r27, 0x0201	; 0x800201 <__flp+0x1>
 904:	10 97       	sbiw	r26, 0x00	; 0
 906:	81 f4       	brne	.+32     	; 0x928 <free+0x3e>
 908:	20 81       	ld	r18, Z
 90a:	31 81       	ldd	r19, Z+1	; 0x01
 90c:	82 0f       	add	r24, r18
 90e:	93 1f       	adc	r25, r19
 910:	20 91 fe 01 	lds	r18, 0x01FE	; 0x8001fe <__brkval>
 914:	30 91 ff 01 	lds	r19, 0x01FF	; 0x8001ff <__brkval+0x1>
 918:	28 17       	cp	r18, r24
 91a:	39 07       	cpc	r19, r25
 91c:	51 f5       	brne	.+84     	; 0x972 <free+0x88>
 91e:	f0 93 ff 01 	sts	0x01FF, r31	; 0x8001ff <__brkval+0x1>
 922:	e0 93 fe 01 	sts	0x01FE, r30	; 0x8001fe <__brkval>
 926:	67 c0       	rjmp	.+206    	; 0x9f6 <free+0x10c>
 928:	ed 01       	movw	r28, r26
 92a:	20 e0       	ldi	r18, 0x00	; 0
 92c:	30 e0       	ldi	r19, 0x00	; 0
 92e:	ce 17       	cp	r28, r30
 930:	df 07       	cpc	r29, r31
 932:	40 f4       	brcc	.+16     	; 0x944 <free+0x5a>
 934:	4a 81       	ldd	r20, Y+2	; 0x02
 936:	5b 81       	ldd	r21, Y+3	; 0x03
 938:	9e 01       	movw	r18, r28
 93a:	41 15       	cp	r20, r1
 93c:	51 05       	cpc	r21, r1
 93e:	f1 f0       	breq	.+60     	; 0x97c <free+0x92>
 940:	ea 01       	movw	r28, r20
 942:	f5 cf       	rjmp	.-22     	; 0x92e <free+0x44>
 944:	d3 83       	std	Z+3, r29	; 0x03
 946:	c2 83       	std	Z+2, r28	; 0x02
 948:	40 81       	ld	r20, Z
 94a:	51 81       	ldd	r21, Z+1	; 0x01
 94c:	84 0f       	add	r24, r20
 94e:	95 1f       	adc	r25, r21
 950:	c8 17       	cp	r28, r24
 952:	d9 07       	cpc	r29, r25
 954:	59 f4       	brne	.+22     	; 0x96c <free+0x82>
 956:	88 81       	ld	r24, Y
 958:	99 81       	ldd	r25, Y+1	; 0x01
 95a:	84 0f       	add	r24, r20
 95c:	95 1f       	adc	r25, r21
 95e:	02 96       	adiw	r24, 0x02	; 2
 960:	91 83       	std	Z+1, r25	; 0x01
 962:	80 83       	st	Z, r24
 964:	8a 81       	ldd	r24, Y+2	; 0x02
 966:	9b 81       	ldd	r25, Y+3	; 0x03
 968:	93 83       	std	Z+3, r25	; 0x03
 96a:	82 83       	std	Z+2, r24	; 0x02
 96c:	21 15       	cp	r18, r1
 96e:	31 05       	cpc	r19, r1
 970:	29 f4       	brne	.+10     	; 0x97c <free+0x92>
 972:	f0 93 01 02 	sts	0x0201, r31	; 0x800201 <__flp+0x1>
 976:	e0 93 00 02 	sts	0x0200, r30	; 0x800200 <__flp>
 97a:	3d c0       	rjmp	.+122    	; 0x9f6 <free+0x10c>
 97c:	e9 01       	movw	r28, r18
 97e:	fb 83       	std	Y+3, r31	; 0x03
 980:	ea 83       	std	Y+2, r30	; 0x02
 982:	49 91       	ld	r20, Y+
 984:	59 91       	ld	r21, Y+
 986:	c4 0f       	add	r28, r20
 988:	d5 1f       	adc	r29, r21
 98a:	ec 17       	cp	r30, r28
 98c:	fd 07       	cpc	r31, r29
 98e:	61 f4       	brne	.+24     	; 0x9a8 <free+0xbe>
 990:	80 81       	ld	r24, Z
 992:	91 81       	ldd	r25, Z+1	; 0x01
 994:	84 0f       	add	r24, r20
 996:	95 1f       	adc	r25, r21
 998:	02 96       	adiw	r24, 0x02	; 2
 99a:	e9 01       	movw	r28, r18
 99c:	99 83       	std	Y+1, r25	; 0x01
 99e:	88 83       	st	Y, r24
 9a0:	82 81       	ldd	r24, Z+2	; 0x02
 9a2:	93 81       	ldd	r25, Z+3	; 0x03
 9a4:	9b 83       	std	Y+3, r25	; 0x03
 9a6:	8a 83       	std	Y+2, r24	; 0x02
 9a8:	e0 e0       	ldi	r30, 0x00	; 0
 9aa:	f0 e0       	ldi	r31, 0x00	; 0
 9ac:	12 96       	adiw	r26, 0x02	; 2
 9ae:	8d 91       	ld	r24, X+
 9b0:	9c 91       	ld	r25, X
 9b2:	13 97       	sbiw	r26, 0x03	; 3
 9b4:	00 97       	sbiw	r24, 0x00	; 0
 9b6:	19 f0       	breq	.+6      	; 0x9be <free+0xd4>
 9b8:	fd 01       	movw	r30, r26
 9ba:	dc 01       	movw	r26, r24
 9bc:	f7 cf       	rjmp	.-18     	; 0x9ac <free+0xc2>
 9be:	8d 91       	ld	r24, X+
 9c0:	9c 91       	ld	r25, X
 9c2:	11 97       	sbiw	r26, 0x01	; 1
 9c4:	9d 01       	movw	r18, r26
 9c6:	2e 5f       	subi	r18, 0xFE	; 254
 9c8:	3f 4f       	sbci	r19, 0xFF	; 255
 9ca:	82 0f       	add	r24, r18
 9cc:	93 1f       	adc	r25, r19
 9ce:	20 91 fe 01 	lds	r18, 0x01FE	; 0x8001fe <__brkval>
 9d2:	30 91 ff 01 	lds	r19, 0x01FF	; 0x8001ff <__brkval+0x1>
 9d6:	28 17       	cp	r18, r24
 9d8:	39 07       	cpc	r19, r25
 9da:	69 f4       	brne	.+26     	; 0x9f6 <free+0x10c>
 9dc:	30 97       	sbiw	r30, 0x00	; 0
 9de:	29 f4       	brne	.+10     	; 0x9ea <free+0x100>
 9e0:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <__flp+0x1>
 9e4:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__flp>
 9e8:	02 c0       	rjmp	.+4      	; 0x9ee <free+0x104>
 9ea:	13 82       	std	Z+3, r1	; 0x03
 9ec:	12 82       	std	Z+2, r1	; 0x02
 9ee:	b0 93 ff 01 	sts	0x01FF, r27	; 0x8001ff <__brkval+0x1>
 9f2:	a0 93 fe 01 	sts	0x01FE, r26	; 0x8001fe <__brkval>
 9f6:	df 91       	pop	r29
 9f8:	cf 91       	pop	r28
 9fa:	08 95       	ret

000009fc <strnlen_P>:
 9fc:	fc 01       	movw	r30, r24
 9fe:	05 90       	lpm	r0, Z+
 a00:	61 50       	subi	r22, 0x01	; 1
 a02:	70 40       	sbci	r23, 0x00	; 0
 a04:	01 10       	cpse	r0, r1
 a06:	d8 f7       	brcc	.-10     	; 0x9fe <strnlen_P+0x2>
 a08:	80 95       	com	r24
 a0a:	90 95       	com	r25
 a0c:	8e 0f       	add	r24, r30
 a0e:	9f 1f       	adc	r25, r31
 a10:	08 95       	ret

00000a12 <memset>:
 a12:	dc 01       	movw	r26, r24
 a14:	01 c0       	rjmp	.+2      	; 0xa18 <memset+0x6>
 a16:	6d 93       	st	X+, r22
 a18:	41 50       	subi	r20, 0x01	; 1
 a1a:	50 40       	sbci	r21, 0x00	; 0
 a1c:	e0 f7       	brcc	.-8      	; 0xa16 <memset+0x4>
 a1e:	08 95       	ret

00000a20 <strnlen>:
 a20:	fc 01       	movw	r30, r24
 a22:	61 50       	subi	r22, 0x01	; 1
 a24:	70 40       	sbci	r23, 0x00	; 0
 a26:	01 90       	ld	r0, Z+
 a28:	01 10       	cpse	r0, r1
 a2a:	d8 f7       	brcc	.-10     	; 0xa22 <strnlen+0x2>
 a2c:	80 95       	com	r24
 a2e:	90 95       	com	r25
 a30:	8e 0f       	add	r24, r30
 a32:	9f 1f       	adc	r25, r31
 a34:	08 95       	ret

00000a36 <fputc>:
 a36:	0f 93       	push	r16
 a38:	1f 93       	push	r17
 a3a:	cf 93       	push	r28
 a3c:	df 93       	push	r29
 a3e:	fb 01       	movw	r30, r22
 a40:	23 81       	ldd	r18, Z+3	; 0x03
 a42:	21 fd       	sbrc	r18, 1
 a44:	03 c0       	rjmp	.+6      	; 0xa4c <fputc+0x16>
 a46:	8f ef       	ldi	r24, 0xFF	; 255
 a48:	9f ef       	ldi	r25, 0xFF	; 255
 a4a:	2c c0       	rjmp	.+88     	; 0xaa4 <fputc+0x6e>
 a4c:	22 ff       	sbrs	r18, 2
 a4e:	16 c0       	rjmp	.+44     	; 0xa7c <fputc+0x46>
 a50:	46 81       	ldd	r20, Z+6	; 0x06
 a52:	57 81       	ldd	r21, Z+7	; 0x07
 a54:	24 81       	ldd	r18, Z+4	; 0x04
 a56:	35 81       	ldd	r19, Z+5	; 0x05
 a58:	42 17       	cp	r20, r18
 a5a:	53 07       	cpc	r21, r19
 a5c:	44 f4       	brge	.+16     	; 0xa6e <fputc+0x38>
 a5e:	a0 81       	ld	r26, Z
 a60:	b1 81       	ldd	r27, Z+1	; 0x01
 a62:	9d 01       	movw	r18, r26
 a64:	2f 5f       	subi	r18, 0xFF	; 255
 a66:	3f 4f       	sbci	r19, 0xFF	; 255
 a68:	31 83       	std	Z+1, r19	; 0x01
 a6a:	20 83       	st	Z, r18
 a6c:	8c 93       	st	X, r24
 a6e:	26 81       	ldd	r18, Z+6	; 0x06
 a70:	37 81       	ldd	r19, Z+7	; 0x07
 a72:	2f 5f       	subi	r18, 0xFF	; 255
 a74:	3f 4f       	sbci	r19, 0xFF	; 255
 a76:	37 83       	std	Z+7, r19	; 0x07
 a78:	26 83       	std	Z+6, r18	; 0x06
 a7a:	14 c0       	rjmp	.+40     	; 0xaa4 <fputc+0x6e>
 a7c:	8b 01       	movw	r16, r22
 a7e:	ec 01       	movw	r28, r24
 a80:	fb 01       	movw	r30, r22
 a82:	00 84       	ldd	r0, Z+8	; 0x08
 a84:	f1 85       	ldd	r31, Z+9	; 0x09
 a86:	e0 2d       	mov	r30, r0
 a88:	09 95       	icall
 a8a:	89 2b       	or	r24, r25
 a8c:	e1 f6       	brne	.-72     	; 0xa46 <fputc+0x10>
 a8e:	d8 01       	movw	r26, r16
 a90:	16 96       	adiw	r26, 0x06	; 6
 a92:	8d 91       	ld	r24, X+
 a94:	9c 91       	ld	r25, X
 a96:	17 97       	sbiw	r26, 0x07	; 7
 a98:	01 96       	adiw	r24, 0x01	; 1
 a9a:	17 96       	adiw	r26, 0x07	; 7
 a9c:	9c 93       	st	X, r25
 a9e:	8e 93       	st	-X, r24
 aa0:	16 97       	sbiw	r26, 0x06	; 6
 aa2:	ce 01       	movw	r24, r28
 aa4:	df 91       	pop	r29
 aa6:	cf 91       	pop	r28
 aa8:	1f 91       	pop	r17
 aaa:	0f 91       	pop	r16
 aac:	08 95       	ret

00000aae <__ultoa_invert>:
 aae:	fa 01       	movw	r30, r20
 ab0:	aa 27       	eor	r26, r26
 ab2:	28 30       	cpi	r18, 0x08	; 8
 ab4:	51 f1       	breq	.+84     	; 0xb0a <__ultoa_invert+0x5c>
 ab6:	20 31       	cpi	r18, 0x10	; 16
 ab8:	81 f1       	breq	.+96     	; 0xb1a <__ultoa_invert+0x6c>
 aba:	e8 94       	clt
 abc:	6f 93       	push	r22
 abe:	6e 7f       	andi	r22, 0xFE	; 254
 ac0:	6e 5f       	subi	r22, 0xFE	; 254
 ac2:	7f 4f       	sbci	r23, 0xFF	; 255
 ac4:	8f 4f       	sbci	r24, 0xFF	; 255
 ac6:	9f 4f       	sbci	r25, 0xFF	; 255
 ac8:	af 4f       	sbci	r26, 0xFF	; 255
 aca:	b1 e0       	ldi	r27, 0x01	; 1
 acc:	3e d0       	rcall	.+124    	; 0xb4a <__ultoa_invert+0x9c>
 ace:	b4 e0       	ldi	r27, 0x04	; 4
 ad0:	3c d0       	rcall	.+120    	; 0xb4a <__ultoa_invert+0x9c>
 ad2:	67 0f       	add	r22, r23
 ad4:	78 1f       	adc	r23, r24
 ad6:	89 1f       	adc	r24, r25
 ad8:	9a 1f       	adc	r25, r26
 ada:	a1 1d       	adc	r26, r1
 adc:	68 0f       	add	r22, r24
 ade:	79 1f       	adc	r23, r25
 ae0:	8a 1f       	adc	r24, r26
 ae2:	91 1d       	adc	r25, r1
 ae4:	a1 1d       	adc	r26, r1
 ae6:	6a 0f       	add	r22, r26
 ae8:	71 1d       	adc	r23, r1
 aea:	81 1d       	adc	r24, r1
 aec:	91 1d       	adc	r25, r1
 aee:	a1 1d       	adc	r26, r1
 af0:	20 d0       	rcall	.+64     	; 0xb32 <__ultoa_invert+0x84>
 af2:	09 f4       	brne	.+2      	; 0xaf6 <__ultoa_invert+0x48>
 af4:	68 94       	set
 af6:	3f 91       	pop	r19
 af8:	2a e0       	ldi	r18, 0x0A	; 10
 afa:	26 9f       	mul	r18, r22
 afc:	11 24       	eor	r1, r1
 afe:	30 19       	sub	r19, r0
 b00:	30 5d       	subi	r19, 0xD0	; 208
 b02:	31 93       	st	Z+, r19
 b04:	de f6       	brtc	.-74     	; 0xabc <__ultoa_invert+0xe>
 b06:	cf 01       	movw	r24, r30
 b08:	08 95       	ret
 b0a:	46 2f       	mov	r20, r22
 b0c:	47 70       	andi	r20, 0x07	; 7
 b0e:	40 5d       	subi	r20, 0xD0	; 208
 b10:	41 93       	st	Z+, r20
 b12:	b3 e0       	ldi	r27, 0x03	; 3
 b14:	0f d0       	rcall	.+30     	; 0xb34 <__ultoa_invert+0x86>
 b16:	c9 f7       	brne	.-14     	; 0xb0a <__ultoa_invert+0x5c>
 b18:	f6 cf       	rjmp	.-20     	; 0xb06 <__ultoa_invert+0x58>
 b1a:	46 2f       	mov	r20, r22
 b1c:	4f 70       	andi	r20, 0x0F	; 15
 b1e:	40 5d       	subi	r20, 0xD0	; 208
 b20:	4a 33       	cpi	r20, 0x3A	; 58
 b22:	18 f0       	brcs	.+6      	; 0xb2a <__ultoa_invert+0x7c>
 b24:	49 5d       	subi	r20, 0xD9	; 217
 b26:	31 fd       	sbrc	r19, 1
 b28:	40 52       	subi	r20, 0x20	; 32
 b2a:	41 93       	st	Z+, r20
 b2c:	02 d0       	rcall	.+4      	; 0xb32 <__ultoa_invert+0x84>
 b2e:	a9 f7       	brne	.-22     	; 0xb1a <__ultoa_invert+0x6c>
 b30:	ea cf       	rjmp	.-44     	; 0xb06 <__ultoa_invert+0x58>
 b32:	b4 e0       	ldi	r27, 0x04	; 4
 b34:	a6 95       	lsr	r26
 b36:	97 95       	ror	r25
 b38:	87 95       	ror	r24
 b3a:	77 95       	ror	r23
 b3c:	67 95       	ror	r22
 b3e:	ba 95       	dec	r27
 b40:	c9 f7       	brne	.-14     	; 0xb34 <__ultoa_invert+0x86>
 b42:	00 97       	sbiw	r24, 0x00	; 0
 b44:	61 05       	cpc	r22, r1
 b46:	71 05       	cpc	r23, r1
 b48:	08 95       	ret
 b4a:	9b 01       	movw	r18, r22
 b4c:	ac 01       	movw	r20, r24
 b4e:	0a 2e       	mov	r0, r26
 b50:	06 94       	lsr	r0
 b52:	57 95       	ror	r21
 b54:	47 95       	ror	r20
 b56:	37 95       	ror	r19
 b58:	27 95       	ror	r18
 b5a:	ba 95       	dec	r27
 b5c:	c9 f7       	brne	.-14     	; 0xb50 <__ultoa_invert+0xa2>
 b5e:	62 0f       	add	r22, r18
 b60:	73 1f       	adc	r23, r19
 b62:	84 1f       	adc	r24, r20
 b64:	95 1f       	adc	r25, r21
 b66:	a0 1d       	adc	r26, r0
 b68:	08 95       	ret

00000b6a <__divmodsi4>:
 b6a:	05 2e       	mov	r0, r21
 b6c:	97 fb       	bst	r25, 7
 b6e:	1e f4       	brtc	.+6      	; 0xb76 <__divmodsi4+0xc>
 b70:	00 94       	com	r0
 b72:	0e 94 cc 05 	call	0xb98	; 0xb98 <__negsi2>
 b76:	57 fd       	sbrc	r21, 7
 b78:	07 d0       	rcall	.+14     	; 0xb88 <__divmodsi4_neg2>
 b7a:	0e 94 1e 06 	call	0xc3c	; 0xc3c <__udivmodsi4>
 b7e:	07 fc       	sbrc	r0, 7
 b80:	03 d0       	rcall	.+6      	; 0xb88 <__divmodsi4_neg2>
 b82:	4e f4       	brtc	.+18     	; 0xb96 <__divmodsi4_exit>
 b84:	0c 94 cc 05 	jmp	0xb98	; 0xb98 <__negsi2>

00000b88 <__divmodsi4_neg2>:
 b88:	50 95       	com	r21
 b8a:	40 95       	com	r20
 b8c:	30 95       	com	r19
 b8e:	21 95       	neg	r18
 b90:	3f 4f       	sbci	r19, 0xFF	; 255
 b92:	4f 4f       	sbci	r20, 0xFF	; 255
 b94:	5f 4f       	sbci	r21, 0xFF	; 255

00000b96 <__divmodsi4_exit>:
 b96:	08 95       	ret

00000b98 <__negsi2>:
 b98:	90 95       	com	r25
 b9a:	80 95       	com	r24
 b9c:	70 95       	com	r23
 b9e:	61 95       	neg	r22
 ba0:	7f 4f       	sbci	r23, 0xFF	; 255
 ba2:	8f 4f       	sbci	r24, 0xFF	; 255
 ba4:	9f 4f       	sbci	r25, 0xFF	; 255
 ba6:	08 95       	ret

00000ba8 <__muluhisi3>:
 ba8:	0e 94 40 06 	call	0xc80	; 0xc80 <__umulhisi3>
 bac:	a5 9f       	mul	r26, r21
 bae:	90 0d       	add	r25, r0
 bb0:	b4 9f       	mul	r27, r20
 bb2:	90 0d       	add	r25, r0
 bb4:	a4 9f       	mul	r26, r20
 bb6:	80 0d       	add	r24, r0
 bb8:	91 1d       	adc	r25, r1
 bba:	11 24       	eor	r1, r1
 bbc:	08 95       	ret

00000bbe <__mulshisi3>:
 bbe:	b7 ff       	sbrs	r27, 7
 bc0:	0c 94 d4 05 	jmp	0xba8	; 0xba8 <__muluhisi3>

00000bc4 <__mulohisi3>:
 bc4:	0e 94 d4 05 	call	0xba8	; 0xba8 <__muluhisi3>
 bc8:	82 1b       	sub	r24, r18
 bca:	93 0b       	sbc	r25, r19
 bcc:	08 95       	ret

00000bce <__prologue_saves__>:
 bce:	2f 92       	push	r2
 bd0:	3f 92       	push	r3
 bd2:	4f 92       	push	r4
 bd4:	5f 92       	push	r5
 bd6:	6f 92       	push	r6
 bd8:	7f 92       	push	r7
 bda:	8f 92       	push	r8
 bdc:	9f 92       	push	r9
 bde:	af 92       	push	r10
 be0:	bf 92       	push	r11
 be2:	cf 92       	push	r12
 be4:	df 92       	push	r13
 be6:	ef 92       	push	r14
 be8:	ff 92       	push	r15
 bea:	0f 93       	push	r16
 bec:	1f 93       	push	r17
 bee:	cf 93       	push	r28
 bf0:	df 93       	push	r29
 bf2:	cd b7       	in	r28, 0x3d	; 61
 bf4:	de b7       	in	r29, 0x3e	; 62
 bf6:	ca 1b       	sub	r28, r26
 bf8:	db 0b       	sbc	r29, r27
 bfa:	0f b6       	in	r0, 0x3f	; 63
 bfc:	f8 94       	cli
 bfe:	de bf       	out	0x3e, r29	; 62
 c00:	0f be       	out	0x3f, r0	; 63
 c02:	cd bf       	out	0x3d, r28	; 61
 c04:	09 94       	ijmp

00000c06 <__epilogue_restores__>:
 c06:	2a 88       	ldd	r2, Y+18	; 0x12
 c08:	39 88       	ldd	r3, Y+17	; 0x11
 c0a:	48 88       	ldd	r4, Y+16	; 0x10
 c0c:	5f 84       	ldd	r5, Y+15	; 0x0f
 c0e:	6e 84       	ldd	r6, Y+14	; 0x0e
 c10:	7d 84       	ldd	r7, Y+13	; 0x0d
 c12:	8c 84       	ldd	r8, Y+12	; 0x0c
 c14:	9b 84       	ldd	r9, Y+11	; 0x0b
 c16:	aa 84       	ldd	r10, Y+10	; 0x0a
 c18:	b9 84       	ldd	r11, Y+9	; 0x09
 c1a:	c8 84       	ldd	r12, Y+8	; 0x08
 c1c:	df 80       	ldd	r13, Y+7	; 0x07
 c1e:	ee 80       	ldd	r14, Y+6	; 0x06
 c20:	fd 80       	ldd	r15, Y+5	; 0x05
 c22:	0c 81       	ldd	r16, Y+4	; 0x04
 c24:	1b 81       	ldd	r17, Y+3	; 0x03
 c26:	aa 81       	ldd	r26, Y+2	; 0x02
 c28:	b9 81       	ldd	r27, Y+1	; 0x01
 c2a:	ce 0f       	add	r28, r30
 c2c:	d1 1d       	adc	r29, r1
 c2e:	0f b6       	in	r0, 0x3f	; 63
 c30:	f8 94       	cli
 c32:	de bf       	out	0x3e, r29	; 62
 c34:	0f be       	out	0x3f, r0	; 63
 c36:	cd bf       	out	0x3d, r28	; 61
 c38:	ed 01       	movw	r28, r26
 c3a:	08 95       	ret

00000c3c <__udivmodsi4>:
 c3c:	a1 e2       	ldi	r26, 0x21	; 33
 c3e:	1a 2e       	mov	r1, r26
 c40:	aa 1b       	sub	r26, r26
 c42:	bb 1b       	sub	r27, r27
 c44:	fd 01       	movw	r30, r26
 c46:	0d c0       	rjmp	.+26     	; 0xc62 <__udivmodsi4_ep>

00000c48 <__udivmodsi4_loop>:
 c48:	aa 1f       	adc	r26, r26
 c4a:	bb 1f       	adc	r27, r27
 c4c:	ee 1f       	adc	r30, r30
 c4e:	ff 1f       	adc	r31, r31
 c50:	a2 17       	cp	r26, r18
 c52:	b3 07       	cpc	r27, r19
 c54:	e4 07       	cpc	r30, r20
 c56:	f5 07       	cpc	r31, r21
 c58:	20 f0       	brcs	.+8      	; 0xc62 <__udivmodsi4_ep>
 c5a:	a2 1b       	sub	r26, r18
 c5c:	b3 0b       	sbc	r27, r19
 c5e:	e4 0b       	sbc	r30, r20
 c60:	f5 0b       	sbc	r31, r21

00000c62 <__udivmodsi4_ep>:
 c62:	66 1f       	adc	r22, r22
 c64:	77 1f       	adc	r23, r23
 c66:	88 1f       	adc	r24, r24
 c68:	99 1f       	adc	r25, r25
 c6a:	1a 94       	dec	r1
 c6c:	69 f7       	brne	.-38     	; 0xc48 <__udivmodsi4_loop>
 c6e:	60 95       	com	r22
 c70:	70 95       	com	r23
 c72:	80 95       	com	r24
 c74:	90 95       	com	r25
 c76:	9b 01       	movw	r18, r22
 c78:	ac 01       	movw	r20, r24
 c7a:	bd 01       	movw	r22, r26
 c7c:	cf 01       	movw	r24, r30
 c7e:	08 95       	ret

00000c80 <__umulhisi3>:
 c80:	a2 9f       	mul	r26, r18
 c82:	b0 01       	movw	r22, r0
 c84:	b3 9f       	mul	r27, r19
 c86:	c0 01       	movw	r24, r0
 c88:	a3 9f       	mul	r26, r19
 c8a:	70 0d       	add	r23, r0
 c8c:	81 1d       	adc	r24, r1
 c8e:	11 24       	eor	r1, r1
 c90:	91 1d       	adc	r25, r1
 c92:	b2 9f       	mul	r27, r18
 c94:	70 0d       	add	r23, r0
 c96:	81 1d       	adc	r24, r1
 c98:	11 24       	eor	r1, r1
 c9a:	91 1d       	adc	r25, r1
 c9c:	08 95       	ret

00000c9e <_exit>:
 c9e:	f8 94       	cli

00000ca0 <__stop_program>:
 ca0:	ff cf       	rjmp	.-2      	; 0xca0 <__stop_program>

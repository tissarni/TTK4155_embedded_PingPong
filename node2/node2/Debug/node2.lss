
node2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001418  00080000  00080000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000434  20000000  00081418  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000084  20000434  0008184c  00020434  2**2
                  ALLOC
  3 .stack        00000400  200004b8  000818d0  00020434  2**0
                  ALLOC
  4 .heap         00000200  200008b8  00081cd0  00020434  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020434  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  0002045d  2**0
                  CONTENTS, READONLY
  7 .debug_info   000085dc  00000000  00000000  000204b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000014d9  00000000  00000000  00028a92  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000114c  00000000  00000000  00029f6b  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000218  00000000  00000000  0002b0b7  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001b0  00000000  00000000  0002b2cf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00013439  00000000  00000000  0002b47f  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00005303  00000000  00000000  0003e8b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00055457  00000000  00000000  00043bbb  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00000788  00000000  00000000  00099014  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	b8 08 00 20 25 04 08 00 21 04 08 00 21 04 08 00     ... %...!...!...
   80010:	21 04 08 00 21 04 08 00 21 04 08 00 00 00 00 00     !...!...!.......
	...
   8002c:	21 04 08 00 21 04 08 00 00 00 00 00 21 04 08 00     !...!.......!...
   8003c:	21 04 08 00 21 04 08 00 21 04 08 00 21 04 08 00     !...!...!...!...
   8004c:	21 04 08 00 21 04 08 00 21 04 08 00 21 04 08 00     !...!...!...!...
   8005c:	21 04 08 00 69 0b 08 00 21 04 08 00 00 00 00 00     !...i...!.......
   8006c:	21 04 08 00 21 04 08 00 21 04 08 00 21 04 08 00     !...!...!...!...
	...
   80084:	21 04 08 00 21 04 08 00 21 04 08 00 21 04 08 00     !...!...!...!...
   80094:	21 04 08 00 21 04 08 00 21 04 08 00 21 04 08 00     !...!...!...!...
   800a4:	00 00 00 00 21 04 08 00 21 04 08 00 21 04 08 00     ....!...!...!...
   800b4:	21 04 08 00 21 04 08 00 21 04 08 00 21 04 08 00     !...!...!...!...
   800c4:	21 04 08 00 21 04 08 00 21 04 08 00 21 04 08 00     !...!...!...!...
   800d4:	21 04 08 00 21 04 08 00 21 04 08 00 21 04 08 00     !...!...!...!...
   800e4:	21 04 08 00 21 04 08 00 b1 03 08 00 21 04 08 00     !...!.......!...

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20000434 	.word	0x20000434
   80110:	00000000 	.word	0x00000000
   80114:	00081418 	.word	0x00081418

00080118 <frame_dummy>:
   80118:	4b0c      	ldr	r3, [pc, #48]	; (8014c <frame_dummy+0x34>)
   8011a:	b143      	cbz	r3, 8012e <frame_dummy+0x16>
   8011c:	480c      	ldr	r0, [pc, #48]	; (80150 <frame_dummy+0x38>)
   8011e:	b510      	push	{r4, lr}
   80120:	490c      	ldr	r1, [pc, #48]	; (80154 <frame_dummy+0x3c>)
   80122:	f3af 8000 	nop.w
   80126:	480c      	ldr	r0, [pc, #48]	; (80158 <frame_dummy+0x40>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b923      	cbnz	r3, 80136 <frame_dummy+0x1e>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	480a      	ldr	r0, [pc, #40]	; (80158 <frame_dummy+0x40>)
   80130:	6803      	ldr	r3, [r0, #0]
   80132:	b933      	cbnz	r3, 80142 <frame_dummy+0x2a>
   80134:	4770      	bx	lr
   80136:	4b09      	ldr	r3, [pc, #36]	; (8015c <frame_dummy+0x44>)
   80138:	2b00      	cmp	r3, #0
   8013a:	d0f7      	beq.n	8012c <frame_dummy+0x14>
   8013c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80140:	4718      	bx	r3
   80142:	4b06      	ldr	r3, [pc, #24]	; (8015c <frame_dummy+0x44>)
   80144:	2b00      	cmp	r3, #0
   80146:	d0f5      	beq.n	80134 <frame_dummy+0x1c>
   80148:	4718      	bx	r3
   8014a:	bf00      	nop
   8014c:	00000000 	.word	0x00000000
   80150:	00081418 	.word	0x00081418
   80154:	20000438 	.word	0x20000438
   80158:	00081418 	.word	0x00081418
   8015c:	00000000 	.word	0x00000000

00080160 <DAC_init>:
   80160:	4a0c      	ldr	r2, [pc, #48]	; (80194 <DAC_init+0x34>)
   80162:	f8d2 3100 	ldr.w	r3, [r2, #256]	; 0x100
   80166:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   8016a:	f8c2 3100 	str.w	r3, [r2, #256]	; 0x100
   8016e:	4b0a      	ldr	r3, [pc, #40]	; (80198 <DAC_init+0x38>)
   80170:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
   80174:	f022 0202 	bic.w	r2, r2, #2
   80178:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
   8017c:	691a      	ldr	r2, [r3, #16]
   8017e:	f042 0202 	orr.w	r2, r2, #2
   80182:	611a      	str	r2, [r3, #16]
   80184:	685a      	ldr	r2, [r3, #4]
   80186:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
   8018a:	605a      	str	r2, [r3, #4]
   8018c:	685a      	ldr	r2, [r3, #4]
   8018e:	605a      	str	r2, [r3, #4]
   80190:	4770      	bx	lr
   80192:	bf00      	nop
   80194:	400e0600 	.word	0x400e0600
   80198:	400c8000 	.word	0x400c8000

0008019c <DAC_send_voltage>:
   8019c:	b510      	push	{r4, lr}
   8019e:	4604      	mov	r4, r0
   801a0:	490d      	ldr	r1, [pc, #52]	; (801d8 <DAC_send_voltage+0x3c>)
   801a2:	6800      	ldr	r0, [r0, #0]
   801a4:	4b0d      	ldr	r3, [pc, #52]	; (801dc <DAC_send_voltage+0x40>)
   801a6:	4798      	blx	r3
   801a8:	b108      	cbz	r0, 801ae <DAC_send_voltage+0x12>
   801aa:	4b0b      	ldr	r3, [pc, #44]	; (801d8 <DAC_send_voltage+0x3c>)
   801ac:	6023      	str	r3, [r4, #0]
   801ae:	2100      	movs	r1, #0
   801b0:	6820      	ldr	r0, [r4, #0]
   801b2:	4b0b      	ldr	r3, [pc, #44]	; (801e0 <DAC_send_voltage+0x44>)
   801b4:	4798      	blx	r3
   801b6:	b960      	cbnz	r0, 801d2 <DAC_send_voltage+0x36>
   801b8:	490a      	ldr	r1, [pc, #40]	; (801e4 <DAC_send_voltage+0x48>)
   801ba:	6820      	ldr	r0, [r4, #0]
   801bc:	4b0a      	ldr	r3, [pc, #40]	; (801e8 <DAC_send_voltage+0x4c>)
   801be:	4798      	blx	r3
   801c0:	4905      	ldr	r1, [pc, #20]	; (801d8 <DAC_send_voltage+0x3c>)
   801c2:	4b0a      	ldr	r3, [pc, #40]	; (801ec <DAC_send_voltage+0x50>)
   801c4:	4798      	blx	r3
   801c6:	4b0a      	ldr	r3, [pc, #40]	; (801f0 <DAC_send_voltage+0x54>)
   801c8:	4798      	blx	r3
   801ca:	b280      	uxth	r0, r0
   801cc:	4b09      	ldr	r3, [pc, #36]	; (801f4 <DAC_send_voltage+0x58>)
   801ce:	6218      	str	r0, [r3, #32]
   801d0:	bd10      	pop	{r4, pc}
   801d2:	2300      	movs	r3, #0
   801d4:	6023      	str	r3, [r4, #0]
   801d6:	e7ef      	b.n	801b8 <DAC_send_voltage+0x1c>
   801d8:	40a00000 	.word	0x40a00000
   801dc:	00081165 	.word	0x00081165
   801e0:	00081129 	.word	0x00081129
   801e4:	457ff000 	.word	0x457ff000
   801e8:	00080ded 	.word	0x00080ded
   801ec:	00080f55 	.word	0x00080f55
   801f0:	000811c5 	.word	0x000811c5
   801f4:	400c8000 	.word	0x400c8000

000801f8 <adc_init>:
   801f8:	4a0d      	ldr	r2, [pc, #52]	; (80230 <adc_init+0x38>)
   801fa:	f8d2 3100 	ldr.w	r3, [r2, #256]	; 0x100
   801fe:	f043 0320 	orr.w	r3, r3, #32
   80202:	f8c2 3100 	str.w	r3, [r2, #256]	; 0x100
   80206:	4b0b      	ldr	r3, [pc, #44]	; (80234 <adc_init+0x3c>)
   80208:	681a      	ldr	r2, [r3, #0]
   8020a:	f042 0201 	orr.w	r2, r2, #1
   8020e:	601a      	str	r2, [r3, #0]
   80210:	685a      	ldr	r2, [r3, #4]
   80212:	f042 0210 	orr.w	r2, r2, #16
   80216:	605a      	str	r2, [r3, #4]
   80218:	685a      	ldr	r2, [r3, #4]
   8021a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   8021e:	605a      	str	r2, [r3, #4]
   80220:	691a      	ldr	r2, [r3, #16]
   80222:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   80226:	611a      	str	r2, [r3, #16]
   80228:	2202      	movs	r2, #2
   8022a:	601a      	str	r2, [r3, #0]
   8022c:	4770      	bx	lr
   8022e:	bf00      	nop
   80230:	400e0600 	.word	0x400e0600
   80234:	400c0000 	.word	0x400c0000

00080238 <can_init>:
 * \retval Success(0) or failure(1)
 */


uint8_t can_init(uint32_t can_br, uint8_t num_tx_mb, uint8_t num_rx_mb)
{
   80238:	b4f0      	push	{r4, r5, r6, r7}
	
	//Make sure num_rx_mb and num_tx_mb is valid
	if(num_rx_mb > 8 | num_tx_mb > 8 | num_rx_mb + num_tx_mb > 8)
   8023a:	1857      	adds	r7, r2, r1
   8023c:	2f08      	cmp	r7, #8
   8023e:	bfd4      	ite	le
   80240:	2300      	movle	r3, #0
   80242:	2301      	movgt	r3, #1
   80244:	2908      	cmp	r1, #8
   80246:	bf98      	it	ls
   80248:	2a08      	cmpls	r2, #8
   8024a:	d85c      	bhi.n	80306 <can_init+0xce>
   8024c:	460d      	mov	r5, r1
   8024e:	2b00      	cmp	r3, #0
   80250:	d159      	bne.n	80306 <can_init+0xce>


	uint32_t ul_status; 
	
	//Disable can
	CAN0->CAN_MR &= ~CAN_MR_CANEN; 
   80252:	4a2e      	ldr	r2, [pc, #184]	; (8030c <can_init+0xd4>)
   80254:	6813      	ldr	r3, [r2, #0]
   80256:	f023 0301 	bic.w	r3, r3, #1
   8025a:	6013      	str	r3, [r2, #0]
	//Clear status register on read
	ul_status = CAN0->CAN_SR; 
   8025c:	6913      	ldr	r3, [r2, #16]
	
	
	// Disable interrupts on CANH and CANL pins
	PIOA->PIO_IDR = PIO_PA8A_URXD | PIO_PA9A_UTXD;
   8025e:	4b2c      	ldr	r3, [pc, #176]	; (80310 <can_init+0xd8>)
   80260:	f44f 7440 	mov.w	r4, #768	; 0x300
   80264:	645c      	str	r4, [r3, #68]	; 0x44
	
	//Select CAN0 RX and TX in PIOA
	uint32_t ul_sr = PIOA->PIO_ABSR;
   80266:	6f1c      	ldr	r4, [r3, #112]	; 0x70
	PIOA->PIO_ABSR = ~(PIO_PA1A_CANRX0 | PIO_PA0A_CANTX0) & ul_sr;
   80268:	f024 0403 	bic.w	r4, r4, #3
   8026c:	671c      	str	r4, [r3, #112]	; 0x70
	
	// Disable the Parallel IO (PIO) of the Rx and Tx pins so that the peripheral controller can use them
	PIOA->PIO_PDR = PIO_PA1A_CANRX0 | PIO_PA0A_CANTX0;
   8026e:	2403      	movs	r4, #3
   80270:	605c      	str	r4, [r3, #4]
	
	// Enable pull up on CANH and CANL pin
	PIOA->PIO_PUER = (PIO_PA1A_CANRX0 | PIO_PA0A_CANTX0);
   80272:	665c      	str	r4, [r3, #100]	; 0x64
	
	
	//Enable Clock for CAN0 in PMC
	PMC->PMC_PCR = PMC_PCR_EN | (0 << PMC_PCR_DIV_Pos) | PMC_PCR_CMD | (ID_CAN0 << PMC_PCR_PID_Pos); // DIV = 1(can clk = MCK/2), CMD = 1 (write), PID = 2B (CAN0)
   80274:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
   80278:	4c26      	ldr	r4, [pc, #152]	; (80314 <can_init+0xdc>)
   8027a:	f8c3 410c 	str.w	r4, [r3, #268]	; 0x10c
	PMC->PMC_PCER1 |= 1 << (ID_CAN0 - 32);
   8027e:	f8d3 4100 	ldr.w	r4, [r3, #256]	; 0x100
   80282:	f444 6400 	orr.w	r4, r4, #2048	; 0x800
   80286:	f8c3 4100 	str.w	r4, [r3, #256]	; 0x100
	
	//Set baudrate, Phase1, phase2 and propagation delay for can bus. Must match on all nodes!
	CAN0->CAN_BR = can_br; 
   8028a:	6150      	str	r0, [r2, #20]
	

	/****** Start of mailbox configuration ******/

	uint32_t can_ier = 0;
   8028c:	2400      	movs	r4, #0

	/* Configure receive mailboxes */
	for (int n = num_tx_mb; n <= num_rx_mb + num_tx_mb; n++)  //Simply one mailbox setup for all messages. You might want to apply filter for them.
   8028e:	e019      	b.n	802c4 <can_init+0x8c>
	{
		CAN0->CAN_MB[n].CAN_MAM = 0; //Accept all messages
   80290:	481e      	ldr	r0, [pc, #120]	; (8030c <can_init+0xd4>)
   80292:	f101 0310 	add.w	r3, r1, #16
   80296:	015b      	lsls	r3, r3, #5
   80298:	18c2      	adds	r2, r0, r3
   8029a:	2600      	movs	r6, #0
   8029c:	6056      	str	r6, [r2, #4]
		CAN0->CAN_MB[n].CAN_MID = CAN_MID_MIDE;
   8029e:	eb00 1241 	add.w	r2, r0, r1, lsl #5
   802a2:	f04f 5600 	mov.w	r6, #536870912	; 0x20000000
   802a6:	f8c2 6208 	str.w	r6, [r2, #520]	; 0x208
		CAN0->CAN_MB[n].CAN_MMR = (CAN_MMR_MOT_MB_RX);
   802aa:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
   802ae:	50c6      	str	r6, [r0, r3]
		CAN0->CAN_MB[n].CAN_MCR |= CAN_MCR_MTCR;
   802b0:	f8d2 321c 	ldr.w	r3, [r2, #540]	; 0x21c
   802b4:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
   802b8:	f8c2 321c 	str.w	r3, [r2, #540]	; 0x21c

		can_ier |= 1 << n; //Enable interrupt on rx mailbox
   802bc:	2301      	movs	r3, #1
   802be:	408b      	lsls	r3, r1
   802c0:	431c      	orrs	r4, r3
	for (int n = num_tx_mb; n <= num_rx_mb + num_tx_mb; n++)  //Simply one mailbox setup for all messages. You might want to apply filter for them.
   802c2:	3101      	adds	r1, #1
   802c4:	42b9      	cmp	r1, r7
   802c6:	dde3      	ble.n	80290 <can_init+0x58>
   802c8:	2300      	movs	r3, #0
   802ca:	e00d      	b.n	802e8 <can_init+0xb0>
	}
	
	/*Configure transmit mailboxes */
	for (int n = 0; n < num_tx_mb; n++)
	{
		CAN0->CAN_MB[n].CAN_MID = CAN_MID_MIDE;
   802cc:	490f      	ldr	r1, [pc, #60]	; (8030c <can_init+0xd4>)
   802ce:	eb01 1243 	add.w	r2, r1, r3, lsl #5
   802d2:	f04f 5000 	mov.w	r0, #536870912	; 0x20000000
   802d6:	f8c2 0208 	str.w	r0, [r2, #520]	; 0x208
		CAN0->CAN_MB[n].CAN_MMR = (CAN_MMR_MOT_MB_TX);
   802da:	f103 0210 	add.w	r2, r3, #16
   802de:	0152      	lsls	r2, r2, #5
   802e0:	f04f 7040 	mov.w	r0, #50331648	; 0x3000000
   802e4:	5088      	str	r0, [r1, r2]
	for (int n = 0; n < num_tx_mb; n++)
   802e6:	3301      	adds	r3, #1
   802e8:	42ab      	cmp	r3, r5
   802ea:	dbef      	blt.n	802cc <can_init+0x94>
	}
	
	/****** End of mailbox configuraion ******/

	//Enable interrupt on receive mailboxes
	CAN0->CAN_IER = can_ier;
   802ec:	4b07      	ldr	r3, [pc, #28]	; (8030c <can_init+0xd4>)
   802ee:	605c      	str	r4, [r3, #4]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   802f0:	f44f 6100 	mov.w	r1, #2048	; 0x800
   802f4:	4a08      	ldr	r2, [pc, #32]	; (80318 <can_init+0xe0>)
   802f6:	6051      	str	r1, [r2, #4]

	//Enable interrupt in NVIC 
	NVIC_EnableIRQ(ID_CAN0);

	//enable CAN
	CAN0->CAN_MR |= CAN_MR_CANEN;
   802f8:	681a      	ldr	r2, [r3, #0]
   802fa:	f042 0201 	orr.w	r2, r2, #1
   802fe:	601a      	str	r2, [r3, #0]

	return 0;
   80300:	2000      	movs	r0, #0
}
   80302:	bcf0      	pop	{r4, r5, r6, r7}
   80304:	4770      	bx	lr
		return 1; //Too many mailboxes is configured
   80306:	2001      	movs	r0, #1
   80308:	e7fb      	b.n	80302 <can_init+0xca>
   8030a:	bf00      	nop
   8030c:	400b4000 	.word	0x400b4000
   80310:	400e0e00 	.word	0x400e0e00
   80314:	1000102b 	.word	0x1000102b
   80318:	e000e100 	.word	0xe000e100

0008031c <can_init_def_tx_rx_mb>:
{
   8031c:	b508      	push	{r3, lr}
	return can_init(can_br, 1, 2);
   8031e:	2202      	movs	r2, #2
   80320:	2101      	movs	r1, #1
   80322:	4b01      	ldr	r3, [pc, #4]	; (80328 <can_init_def_tx_rx_mb+0xc>)
   80324:	4798      	blx	r3
}
   80326:	bd08      	pop	{r3, pc}
   80328:	00080239 	.word	0x00080239

0008032c <can_receive>:
 * \retval Success(0) or failure(1)
 */
uint8_t can_receive(CAN_MESSAGE* can_msg, uint8_t rx_mb_id)
{
	//Check that mailbox is ready
	if(CAN0->CAN_MB[rx_mb_id].CAN_MSR & CAN_MSR_MRDY)
   8032c:	014b      	lsls	r3, r1, #5
   8032e:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   80332:	f503 2330 	add.w	r3, r3, #720896	; 0xb0000
   80336:	f8d3 3210 	ldr.w	r3, [r3, #528]	; 0x210
   8033a:	f413 0f00 	tst.w	r3, #8388608	; 0x800000
   8033e:	d033      	beq.n	803a8 <can_receive+0x7c>
{
   80340:	b470      	push	{r4, r5, r6}
	{
		//Get data from CAN mailbox
		uint32_t data_low = CAN0->CAN_MB[rx_mb_id].CAN_MDL;
   80342:	014b      	lsls	r3, r1, #5
   80344:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   80348:	f503 2330 	add.w	r3, r3, #720896	; 0xb0000
   8034c:	f8d3 4214 	ldr.w	r4, [r3, #532]	; 0x214
		uint32_t data_high = CAN0->CAN_MB[rx_mb_id].CAN_MDH;
   80350:	f8d3 2218 	ldr.w	r2, [r3, #536]	; 0x218
		
		//Get message ID
		can_msg->id = (uint16_t)((CAN0->CAN_MB[rx_mb_id].CAN_MID & CAN_MID_MIDvA_Msk) >> CAN_MID_MIDvA_Pos);
   80354:	f8d3 5208 	ldr.w	r5, [r3, #520]	; 0x208
   80358:	f3c5 458a 	ubfx	r5, r5, #18, #11
   8035c:	8005      	strh	r5, [r0, #0]
		
		//Get data length
		can_msg->data_length = (uint8_t)((CAN0->CAN_MB[rx_mb_id].CAN_MSR & CAN_MSR_MDLC_Msk) >> CAN_MSR_MDLC_Pos);
   8035e:	f8d3 5210 	ldr.w	r5, [r3, #528]	; 0x210
   80362:	f3c5 4503 	ubfx	r5, r5, #16, #4
   80366:	7085      	strb	r5, [r0, #2]
		
		//Put data in CAN_MESSAGE object
		for(int i = 0; i < can_msg->data_length;i++)
   80368:	2300      	movs	r3, #0
   8036a:	e003      	b.n	80374 <can_receive+0x48>
				can_msg->data[i] = (char)(data_low & 0xff);
				data_low = data_low >> 8;
			}
			else
			{
				can_msg->data[i] = (uint8_t)(data_high & 0xff);
   8036c:	18c6      	adds	r6, r0, r3
   8036e:	70f2      	strb	r2, [r6, #3]
				data_high = data_high >> 8;
   80370:	0a12      	lsrs	r2, r2, #8
		for(int i = 0; i < can_msg->data_length;i++)
   80372:	3301      	adds	r3, #1
   80374:	42ab      	cmp	r3, r5
   80376:	da05      	bge.n	80384 <can_receive+0x58>
			if(i < 4)
   80378:	2b03      	cmp	r3, #3
   8037a:	dcf7      	bgt.n	8036c <can_receive+0x40>
				can_msg->data[i] = (char)(data_low & 0xff);
   8037c:	18c6      	adds	r6, r0, r3
   8037e:	70f4      	strb	r4, [r6, #3]
				data_low = data_low >> 8;
   80380:	0a24      	lsrs	r4, r4, #8
   80382:	e7f6      	b.n	80372 <can_receive+0x46>
			}
		}
		
		//Reset for new receive
		CAN0->CAN_MB[rx_mb_id].CAN_MMR = CAN_MMR_MOT_MB_RX;
   80384:	4b09      	ldr	r3, [pc, #36]	; (803ac <can_receive+0x80>)
   80386:	f101 0210 	add.w	r2, r1, #16
   8038a:	0152      	lsls	r2, r2, #5
   8038c:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
   80390:	5098      	str	r0, [r3, r2]
		CAN0->CAN_MB[rx_mb_id].CAN_MCR |= CAN_MCR_MTCR;
   80392:	eb03 1141 	add.w	r1, r3, r1, lsl #5
   80396:	f8d1 321c 	ldr.w	r3, [r1, #540]	; 0x21c
   8039a:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
   8039e:	f8c1 321c 	str.w	r3, [r1, #540]	; 0x21c
		return 0;
   803a2:	2000      	movs	r0, #0
	}
	else //Mailbox busy
	{
		return 1;
	}
   803a4:	bc70      	pop	{r4, r5, r6}
   803a6:	4770      	bx	lr
		return 1;
   803a8:	2001      	movs	r0, #1
   803aa:	4770      	bx	lr
   803ac:	400b4000 	.word	0x400b4000

000803b0 <CAN0_Handler>:
   803b0:	b510      	push	{r4, lr}
   803b2:	b084      	sub	sp, #16
   803b4:	4b15      	ldr	r3, [pc, #84]	; (8040c <CAN0_Handler+0x5c>)
   803b6:	691c      	ldr	r4, [r3, #16]
   803b8:	f014 0f06 	tst.w	r4, #6
   803bc:	d019      	beq.n	803f2 <CAN0_Handler+0x42>
   803be:	f014 0f02 	tst.w	r4, #2
   803c2:	d108      	bne.n	803d6 <CAN0_Handler+0x26>
   803c4:	f014 0f04 	tst.w	r4, #4
   803c8:	d00a      	beq.n	803e0 <CAN0_Handler+0x30>
   803ca:	2102      	movs	r1, #2
   803cc:	a801      	add	r0, sp, #4
   803ce:	4b10      	ldr	r3, [pc, #64]	; (80410 <CAN0_Handler+0x60>)
   803d0:	4798      	blx	r3
   803d2:	2300      	movs	r3, #0
   803d4:	e009      	b.n	803ea <CAN0_Handler+0x3a>
   803d6:	2101      	movs	r1, #1
   803d8:	a801      	add	r0, sp, #4
   803da:	4b0d      	ldr	r3, [pc, #52]	; (80410 <CAN0_Handler+0x60>)
   803dc:	4798      	blx	r3
   803de:	e7f8      	b.n	803d2 <CAN0_Handler+0x22>
   803e0:	480c      	ldr	r0, [pc, #48]	; (80414 <CAN0_Handler+0x64>)
   803e2:	4b0d      	ldr	r3, [pc, #52]	; (80418 <CAN0_Handler+0x68>)
   803e4:	4798      	blx	r3
   803e6:	e7f4      	b.n	803d2 <CAN0_Handler+0x22>
   803e8:	3301      	adds	r3, #1
   803ea:	f89d 2006 	ldrb.w	r2, [sp, #6]
   803ee:	4293      	cmp	r3, r2
   803f0:	dbfa      	blt.n	803e8 <CAN0_Handler+0x38>
   803f2:	f014 0f01 	tst.w	r4, #1
   803f6:	d002      	beq.n	803fe <CAN0_Handler+0x4e>
   803f8:	2201      	movs	r2, #1
   803fa:	4b04      	ldr	r3, [pc, #16]	; (8040c <CAN0_Handler+0x5c>)
   803fc:	609a      	str	r2, [r3, #8]
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   803fe:	f44f 6200 	mov.w	r2, #2048	; 0x800
   80402:	4b06      	ldr	r3, [pc, #24]	; (8041c <CAN0_Handler+0x6c>)
   80404:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
   80408:	b004      	add	sp, #16
   8040a:	bd10      	pop	{r4, pc}
   8040c:	400b4000 	.word	0x400b4000
   80410:	0008032d 	.word	0x0008032d
   80414:	00081374 	.word	0x00081374
   80418:	00080a51 	.word	0x00080a51
   8041c:	e000e100 	.word	0xe000e100

00080420 <Dummy_Handler>:
   80420:	e7fe      	b.n	80420 <Dummy_Handler>
	...

00080424 <Reset_Handler>:
   80424:	b508      	push	{r3, lr}
   80426:	4b11      	ldr	r3, [pc, #68]	; (8046c <Reset_Handler+0x48>)
   80428:	4a11      	ldr	r2, [pc, #68]	; (80470 <Reset_Handler+0x4c>)
   8042a:	429a      	cmp	r2, r3
   8042c:	d009      	beq.n	80442 <Reset_Handler+0x1e>
   8042e:	4b0f      	ldr	r3, [pc, #60]	; (8046c <Reset_Handler+0x48>)
   80430:	4a0f      	ldr	r2, [pc, #60]	; (80470 <Reset_Handler+0x4c>)
   80432:	e003      	b.n	8043c <Reset_Handler+0x18>
   80434:	6811      	ldr	r1, [r2, #0]
   80436:	6019      	str	r1, [r3, #0]
   80438:	3304      	adds	r3, #4
   8043a:	3204      	adds	r2, #4
   8043c:	490d      	ldr	r1, [pc, #52]	; (80474 <Reset_Handler+0x50>)
   8043e:	428b      	cmp	r3, r1
   80440:	d3f8      	bcc.n	80434 <Reset_Handler+0x10>
   80442:	4b0d      	ldr	r3, [pc, #52]	; (80478 <Reset_Handler+0x54>)
   80444:	e002      	b.n	8044c <Reset_Handler+0x28>
   80446:	2200      	movs	r2, #0
   80448:	601a      	str	r2, [r3, #0]
   8044a:	3304      	adds	r3, #4
   8044c:	4a0b      	ldr	r2, [pc, #44]	; (8047c <Reset_Handler+0x58>)
   8044e:	4293      	cmp	r3, r2
   80450:	d3f9      	bcc.n	80446 <Reset_Handler+0x22>
   80452:	4b0b      	ldr	r3, [pc, #44]	; (80480 <Reset_Handler+0x5c>)
   80454:	f023 4360 	bic.w	r3, r3, #3758096384	; 0xe0000000
   80458:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   8045c:	4a09      	ldr	r2, [pc, #36]	; (80484 <Reset_Handler+0x60>)
   8045e:	6093      	str	r3, [r2, #8]
   80460:	4b09      	ldr	r3, [pc, #36]	; (80488 <Reset_Handler+0x64>)
   80462:	4798      	blx	r3
   80464:	4b09      	ldr	r3, [pc, #36]	; (8048c <Reset_Handler+0x68>)
   80466:	4798      	blx	r3
   80468:	e7fe      	b.n	80468 <Reset_Handler+0x44>
   8046a:	bf00      	nop
   8046c:	20000000 	.word	0x20000000
   80470:	00081418 	.word	0x00081418
   80474:	20000434 	.word	0x20000434
   80478:	20000434 	.word	0x20000434
   8047c:	200004b8 	.word	0x200004b8
   80480:	00080000 	.word	0x00080000
   80484:	e000ed00 	.word	0xe000ed00
   80488:	00081205 	.word	0x00081205
   8048c:	00080535 	.word	0x00080535

00080490 <SystemInit>:
   80490:	f44f 6380 	mov.w	r3, #1024	; 0x400
   80494:	4a20      	ldr	r2, [pc, #128]	; (80518 <SystemInit+0x88>)
   80496:	6013      	str	r3, [r2, #0]
   80498:	f502 7200 	add.w	r2, r2, #512	; 0x200
   8049c:	6013      	str	r3, [r2, #0]
   8049e:	4b1f      	ldr	r3, [pc, #124]	; (8051c <SystemInit+0x8c>)
   804a0:	6a1b      	ldr	r3, [r3, #32]
   804a2:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   804a6:	d107      	bne.n	804b8 <SystemInit+0x28>
   804a8:	4a1d      	ldr	r2, [pc, #116]	; (80520 <SystemInit+0x90>)
   804aa:	4b1c      	ldr	r3, [pc, #112]	; (8051c <SystemInit+0x8c>)
   804ac:	621a      	str	r2, [r3, #32]
   804ae:	4b1b      	ldr	r3, [pc, #108]	; (8051c <SystemInit+0x8c>)
   804b0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   804b2:	f013 0f01 	tst.w	r3, #1
   804b6:	d0fa      	beq.n	804ae <SystemInit+0x1e>
   804b8:	4a1a      	ldr	r2, [pc, #104]	; (80524 <SystemInit+0x94>)
   804ba:	4b18      	ldr	r3, [pc, #96]	; (8051c <SystemInit+0x8c>)
   804bc:	621a      	str	r2, [r3, #32]
   804be:	4b17      	ldr	r3, [pc, #92]	; (8051c <SystemInit+0x8c>)
   804c0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   804c2:	f413 3f80 	tst.w	r3, #65536	; 0x10000
   804c6:	d0fa      	beq.n	804be <SystemInit+0x2e>
   804c8:	4a14      	ldr	r2, [pc, #80]	; (8051c <SystemInit+0x8c>)
   804ca:	6b13      	ldr	r3, [r2, #48]	; 0x30
   804cc:	f023 0303 	bic.w	r3, r3, #3
   804d0:	f043 0301 	orr.w	r3, r3, #1
   804d4:	6313      	str	r3, [r2, #48]	; 0x30
   804d6:	4b11      	ldr	r3, [pc, #68]	; (8051c <SystemInit+0x8c>)
   804d8:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   804da:	f013 0f08 	tst.w	r3, #8
   804de:	d0fa      	beq.n	804d6 <SystemInit+0x46>
   804e0:	4a11      	ldr	r2, [pc, #68]	; (80528 <SystemInit+0x98>)
   804e2:	4b0e      	ldr	r3, [pc, #56]	; (8051c <SystemInit+0x8c>)
   804e4:	629a      	str	r2, [r3, #40]	; 0x28
   804e6:	4b0d      	ldr	r3, [pc, #52]	; (8051c <SystemInit+0x8c>)
   804e8:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   804ea:	f013 0f02 	tst.w	r3, #2
   804ee:	d0fa      	beq.n	804e6 <SystemInit+0x56>
   804f0:	2211      	movs	r2, #17
   804f2:	4b0a      	ldr	r3, [pc, #40]	; (8051c <SystemInit+0x8c>)
   804f4:	631a      	str	r2, [r3, #48]	; 0x30
   804f6:	4b09      	ldr	r3, [pc, #36]	; (8051c <SystemInit+0x8c>)
   804f8:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   804fa:	f013 0f08 	tst.w	r3, #8
   804fe:	d0fa      	beq.n	804f6 <SystemInit+0x66>
   80500:	2212      	movs	r2, #18
   80502:	4b06      	ldr	r3, [pc, #24]	; (8051c <SystemInit+0x8c>)
   80504:	631a      	str	r2, [r3, #48]	; 0x30
   80506:	4b05      	ldr	r3, [pc, #20]	; (8051c <SystemInit+0x8c>)
   80508:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   8050a:	f013 0f08 	tst.w	r3, #8
   8050e:	d0fa      	beq.n	80506 <SystemInit+0x76>
   80510:	4a06      	ldr	r2, [pc, #24]	; (8052c <SystemInit+0x9c>)
   80512:	4b07      	ldr	r3, [pc, #28]	; (80530 <SystemInit+0xa0>)
   80514:	601a      	str	r2, [r3, #0]
   80516:	4770      	bx	lr
   80518:	400e0a00 	.word	0x400e0a00
   8051c:	400e0600 	.word	0x400e0600
   80520:	00370809 	.word	0x00370809
   80524:	01370809 	.word	0x01370809
   80528:	200d3f01 	.word	0x200d3f01
   8052c:	0501bd00 	.word	0x0501bd00
   80530:	20000000 	.word	0x20000000

00080534 <main>:
#include "solenoid.h"
#include <stdio.h>


int main(void)
{
   80534:	b500      	push	{lr}
   80536:	b085      	sub	sp, #20
	WDT->WDT_MR = WDT_MR_WDDIS;
   80538:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   8053c:	4b18      	ldr	r3, [pc, #96]	; (805a0 <main+0x6c>)
   8053e:	605a      	str	r2, [r3, #4]
    /* Initialize the SAM system */
    SystemInit();
   80540:	4b18      	ldr	r3, [pc, #96]	; (805a4 <main+0x70>)
   80542:	4798      	blx	r3
	configure_uart();
   80544:	4b18      	ldr	r3, [pc, #96]	; (805a8 <main+0x74>)
   80546:	4798      	blx	r3
	pwm_init();
   80548:	4b18      	ldr	r3, [pc, #96]	; (805ac <main+0x78>)
   8054a:	4798      	blx	r3
	adc_init();
   8054c:	4b18      	ldr	r3, [pc, #96]	; (805b0 <main+0x7c>)
   8054e:	4798      	blx	r3
	DAC_init();
   80550:	4b18      	ldr	r3, [pc, #96]	; (805b4 <main+0x80>)
   80552:	4798      	blx	r3
	motor_init();	
   80554:	4b18      	ldr	r3, [pc, #96]	; (805b8 <main+0x84>)
   80556:	4798      	blx	r3
	
	
	int points = 0;
	/* PIOA->PIO_PUDR |= PIO_PA19;
	 /* Enable PIO controller on bit PC2(D0) */
	 PIOA->PIO_PER |= PIO_PA19;
   80558:	4b18      	ldr	r3, [pc, #96]	; (805bc <main+0x88>)
   8055a:	681a      	ldr	r2, [r3, #0]
   8055c:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
   80560:	601a      	str	r2, [r3, #0]
	 /* Set output enable on PC2(D0) */
	 PIOA->PIO_OER |= PIO_PA19;
   80562:	691a      	ldr	r2, [r3, #16]
   80564:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
   80568:	611a      	str	r2, [r3, #16]

	
	uint32_t baud_rate = 0x00290165;
	can_init_def_tx_rx_mb(baud_rate);
   8056a:	4815      	ldr	r0, [pc, #84]	; (805c0 <main+0x8c>)
   8056c:	4b15      	ldr	r3, [pc, #84]	; (805c4 <main+0x90>)
   8056e:	4798      	blx	r3
	//unsigned toto;
	
	CAN_MESSAGE receive;
	//receive.data_length = 0;
	//receive.id = 0;
	PIOC->PIO_PER |= PIO_PC9;
   80570:	4b15      	ldr	r3, [pc, #84]	; (805c8 <main+0x94>)
   80572:	681a      	ldr	r2, [r3, #0]
   80574:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   80578:	601a      	str	r2, [r3, #0]
	PIOC->PIO_OER |= PIO_PC9;
   8057a:	691a      	ldr	r2, [r3, #16]
   8057c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   80580:	611a      	str	r2, [r3, #16]
	set_pin();
   80582:	4b12      	ldr	r3, [pc, #72]	; (805cc <main+0x98>)
   80584:	4798      	blx	r3
    while (1) 
    {	
		//encoder_read();
		//DAC_send_voltage(&toto);
		
		set_pin();
   80586:	4b11      	ldr	r3, [pc, #68]	; (805cc <main+0x98>)
   80588:	4798      	blx	r3
		/*points += score();
		

		printf("SCOORE : %d \r\n", points);*/
		
		can_receive(&receive, 0);
   8058a:	2100      	movs	r1, #0
   8058c:	a801      	add	r0, sp, #4
   8058e:	4b10      	ldr	r3, [pc, #64]	; (805d0 <main+0x9c>)
   80590:	4798      	blx	r3
		set_positon(receive.data[0], receive.data[2]);
   80592:	f89d 1009 	ldrb.w	r1, [sp, #9]
   80596:	f89d 0007 	ldrb.w	r0, [sp, #7]
   8059a:	4b0e      	ldr	r3, [pc, #56]	; (805d4 <main+0xa0>)
   8059c:	4798      	blx	r3
   8059e:	e7f2      	b.n	80586 <main+0x52>
   805a0:	400e1a50 	.word	0x400e1a50
   805a4:	00080491 	.word	0x00080491
   805a8:	00080add 	.word	0x00080add
   805ac:	00080a75 	.word	0x00080a75
   805b0:	000801f9 	.word	0x000801f9
   805b4:	00080161 	.word	0x00080161
   805b8:	00080611 	.word	0x00080611
   805bc:	400e0e00 	.word	0x400e0e00
   805c0:	00290165 	.word	0x00290165
   805c4:	0008031d 	.word	0x0008031d
   805c8:	400e1200 	.word	0x400e1200
   805cc:	00080795 	.word	0x00080795
   805d0:	0008032d 	.word	0x0008032d
   805d4:	000806b9 	.word	0x000806b9

000805d8 <delay>:
	return output;
	
	
}

void delay(int num){
   805d8:	b510      	push	{r4, lr}
   805da:	b082      	sub	sp, #8
   805dc:	4604      	mov	r4, r0
	volatile float f = 1.0f;
   805de:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
   805e2:	9301      	str	r3, [sp, #4]
	
	for (volatile int i = 0; i < 1024 * num; i++ )
   805e4:	2300      	movs	r3, #0
   805e6:	9300      	str	r3, [sp, #0]
   805e8:	e007      	b.n	805fa <delay+0x22>
		f *= 1.1f;
   805ea:	9801      	ldr	r0, [sp, #4]
   805ec:	4906      	ldr	r1, [pc, #24]	; (80608 <delay+0x30>)
   805ee:	4b07      	ldr	r3, [pc, #28]	; (8060c <delay+0x34>)
   805f0:	4798      	blx	r3
   805f2:	9001      	str	r0, [sp, #4]
	for (volatile int i = 0; i < 1024 * num; i++ )
   805f4:	9b00      	ldr	r3, [sp, #0]
   805f6:	3301      	adds	r3, #1
   805f8:	9300      	str	r3, [sp, #0]
   805fa:	9b00      	ldr	r3, [sp, #0]
   805fc:	ebb3 2f84 	cmp.w	r3, r4, lsl #10
   80600:	dbf3      	blt.n	805ea <delay+0x12>
	
}
   80602:	b002      	add	sp, #8
   80604:	bd10      	pop	{r4, pc}
   80606:	bf00      	nop
   80608:	3f8ccccd 	.word	0x3f8ccccd
   8060c:	00080ded 	.word	0x00080ded

00080610 <motor_init>:
void motor_init(){
   80610:	b538      	push	{r3, r4, r5, lr}
	PMC->PMC_PCER0 |= PMC_PCER0_PID13;
   80612:	4a12      	ldr	r2, [pc, #72]	; (8065c <motor_init+0x4c>)
   80614:	6913      	ldr	r3, [r2, #16]
   80616:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   8061a:	6113      	str	r3, [r2, #16]
	PIOC->PIO_PER |= (0xff << 1);
   8061c:	4b10      	ldr	r3, [pc, #64]	; (80660 <motor_init+0x50>)
   8061e:	681a      	ldr	r2, [r3, #0]
   80620:	f442 72ff 	orr.w	r2, r2, #510	; 0x1fe
   80624:	601a      	str	r2, [r3, #0]
	PIOC->PIO_ODR |= (0xff << 1);
   80626:	695a      	ldr	r2, [r3, #20]
   80628:	f442 72ff 	orr.w	r2, r2, #510	; 0x1fe
   8062c:	615a      	str	r2, [r3, #20]
	PIOD->PIO_PER |= (0x7 << 0) | (0x3 << 9);
   8062e:	4c0d      	ldr	r4, [pc, #52]	; (80664 <motor_init+0x54>)
   80630:	6822      	ldr	r2, [r4, #0]
   80632:	f240 6107 	movw	r1, #1543	; 0x607
   80636:	430a      	orrs	r2, r1
   80638:	6022      	str	r2, [r4, #0]
	PIOD->PIO_OER |= (0x7 << 0) | (0x3 << 9);
   8063a:	6923      	ldr	r3, [r4, #16]
   8063c:	430b      	orrs	r3, r1
   8063e:	6123      	str	r3, [r4, #16]
	PIOD->PIO_SODR = PIO_SODR_P9;
   80640:	f44f 7300 	mov.w	r3, #512	; 0x200
   80644:	6323      	str	r3, [r4, #48]	; 0x30
	PIOD->PIO_CODR = PIO_CODR_P1;
   80646:	2502      	movs	r5, #2
   80648:	6365      	str	r5, [r4, #52]	; 0x34
	delay(1);
   8064a:	2001      	movs	r0, #1
   8064c:	4b06      	ldr	r3, [pc, #24]	; (80668 <motor_init+0x58>)
   8064e:	4798      	blx	r3
	PIOD->PIO_SODR = PIO_SODR_P1;
   80650:	6325      	str	r5, [r4, #48]	; 0x30
	DAC_send_voltage(0);
   80652:	2000      	movs	r0, #0
   80654:	4b05      	ldr	r3, [pc, #20]	; (8066c <motor_init+0x5c>)
   80656:	4798      	blx	r3
   80658:	bd38      	pop	{r3, r4, r5, pc}
   8065a:	bf00      	nop
   8065c:	400e0600 	.word	0x400e0600
   80660:	400e1200 	.word	0x400e1200
   80664:	400e1400 	.word	0x400e1400
   80668:	000805d9 	.word	0x000805d9
   8066c:	0008019d 	.word	0x0008019d

00080670 <encoder_read>:
uint16_t encoder_read(){
   80670:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	PIOD->PIO_CODR = PIO_CODR_P0;
   80674:	4d0d      	ldr	r5, [pc, #52]	; (806ac <encoder_read+0x3c>)
   80676:	2601      	movs	r6, #1
   80678:	636e      	str	r6, [r5, #52]	; 0x34
	PIOD->PIO_CODR = PIO_CODR_P2;
   8067a:	f04f 0904 	mov.w	r9, #4
   8067e:	f8c5 9034 	str.w	r9, [r5, #52]	; 0x34
	delay(1);
   80682:	4630      	mov	r0, r6
   80684:	f8df 802c 	ldr.w	r8, [pc, #44]	; 806b4 <encoder_read+0x44>
   80688:	47c0      	blx	r8
	output += ((PIOC->PIO_PDSR & encoder_mask) << 8);
   8068a:	4f09      	ldr	r7, [pc, #36]	; (806b0 <encoder_read+0x40>)
   8068c:	6bfc      	ldr	r4, [r7, #60]	; 0x3c
   8068e:	0224      	lsls	r4, r4, #8
   80690:	f404 447e 	and.w	r4, r4, #65024	; 0xfe00
	PIOD->PIO_SODR = PIO_CODR_P2;
   80694:	f8c5 9030 	str.w	r9, [r5, #48]	; 0x30
	delay(1);
   80698:	4630      	mov	r0, r6
   8069a:	47c0      	blx	r8
	output += (PIOC->PIO_PDSR & encoder_mask);
   8069c:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
   8069e:	f400 70ff 	and.w	r0, r0, #510	; 0x1fe
   806a2:	4420      	add	r0, r4
   806a4:	b280      	uxth	r0, r0
	PIOD->PIO_SODR = PIO_CODR_P0;
   806a6:	632e      	str	r6, [r5, #48]	; 0x30
}
   806a8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   806ac:	400e1400 	.word	0x400e1400
   806b0:	400e1200 	.word	0x400e1200
   806b4:	000805d9 	.word	0x000805d9

000806b8 <set_positon>:

//17584

void set_positon(int joy_value, int dir) {
   806b8:	b510      	push	{r4, lr}
   806ba:	b082      	sub	sp, #8
	int motor_pos;
	int middle = 17584 / 2;
	
	if(joy_value > 100) {
   806bc:	2864      	cmp	r0, #100	; 0x64
   806be:	dd00      	ble.n	806c2 <set_positon+0xa>
		joy_value = 100;
   806c0:	2064      	movs	r0, #100	; 0x64
	}
	if (joy_value < 0) {
   806c2:	2800      	cmp	r0, #0
   806c4:	db33      	blt.n	8072e <set_positon+0x76>
		joy_value = 0;
	}
	
	
	switch (dir)
   806c6:	2900      	cmp	r1, #0
   806c8:	d033      	beq.n	80732 <set_positon+0x7a>
   806ca:	2901      	cmp	r1, #1
   806cc:	d142      	bne.n	80754 <set_positon+0x9c>
	{
	case 1: //droite
		motor_pos = middle - (int)(middle*joy_value/100);
   806ce:	f242 2358 	movw	r3, #8792	; 0x2258
   806d2:	fb03 f000 	mul.w	r0, r3, r0
   806d6:	4c23      	ldr	r4, [pc, #140]	; (80764 <set_positon+0xac>)
   806d8:	fb84 2400 	smull	r2, r4, r4, r0
   806dc:	17c0      	asrs	r0, r0, #31
   806de:	eba0 1464 	sub.w	r4, r0, r4, asr #5
   806e2:	441c      	add	r4, r3
		PIOD->PIO_SODR |= PIO_SODR_P10;
   806e4:	4a20      	ldr	r2, [pc, #128]	; (80768 <set_positon+0xb0>)
   806e6:	6b13      	ldr	r3, [r2, #48]	; 0x30
   806e8:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
   806ec:	6313      	str	r3, [r2, #48]	; 0x30
		motor_pos = middle;
		break;
	}
	
	
	printf("MOTOR POS : %d \r\n", motor_pos);
   806ee:	4621      	mov	r1, r4
   806f0:	481e      	ldr	r0, [pc, #120]	; (8076c <set_positon+0xb4>)
   806f2:	4b1f      	ldr	r3, [pc, #124]	; (80770 <set_positon+0xb8>)
   806f4:	4798      	blx	r3
	int y = (int)encoder_read();
   806f6:	4b1f      	ldr	r3, [pc, #124]	; (80774 <set_positon+0xbc>)
   806f8:	4798      	blx	r3
	int e = motor_pos - y;
	float kp = 0.0005;
	float u = kp * e;
   806fa:	1a20      	subs	r0, r4, r0
   806fc:	4b1e      	ldr	r3, [pc, #120]	; (80778 <set_positon+0xc0>)
   806fe:	4798      	blx	r3
   80700:	491e      	ldr	r1, [pc, #120]	; (8077c <set_positon+0xc4>)
   80702:	4b1f      	ldr	r3, [pc, #124]	; (80780 <set_positon+0xc8>)
   80704:	4798      	blx	r3
   80706:	4604      	mov	r4, r0
   80708:	9001      	str	r0, [sp, #4]
	if (u < 0) {
   8070a:	2100      	movs	r1, #0
   8070c:	4b1d      	ldr	r3, [pc, #116]	; (80784 <set_positon+0xcc>)
   8070e:	4798      	blx	r3
   80710:	bb18      	cbnz	r0, 8075a <set_positon+0xa2>
		u = -u;
	}
	printf("UUUUUUUUUU : %d \r\n", (int)u);
   80712:	ac02      	add	r4, sp, #8
   80714:	f854 0d04 	ldr.w	r0, [r4, #-4]!
   80718:	4b1b      	ldr	r3, [pc, #108]	; (80788 <set_positon+0xd0>)
   8071a:	4798      	blx	r3
   8071c:	4601      	mov	r1, r0
   8071e:	481b      	ldr	r0, [pc, #108]	; (8078c <set_positon+0xd4>)
   80720:	4b13      	ldr	r3, [pc, #76]	; (80770 <set_positon+0xb8>)
   80722:	4798      	blx	r3
	
	DAC_send_voltage(&u);
   80724:	4620      	mov	r0, r4
   80726:	4b1a      	ldr	r3, [pc, #104]	; (80790 <set_positon+0xd8>)
   80728:	4798      	blx	r3
	
}
   8072a:	b002      	add	sp, #8
   8072c:	bd10      	pop	{r4, pc}
		joy_value = 0;
   8072e:	2000      	movs	r0, #0
   80730:	e7c9      	b.n	806c6 <set_positon+0xe>
		motor_pos = middle + (int)(middle*joy_value/100);
   80732:	f242 2358 	movw	r3, #8792	; 0x2258
   80736:	fb03 f000 	mul.w	r0, r3, r0
   8073a:	4c0a      	ldr	r4, [pc, #40]	; (80764 <set_positon+0xac>)
   8073c:	fb84 2400 	smull	r2, r4, r4, r0
   80740:	17c0      	asrs	r0, r0, #31
   80742:	ebc0 1464 	rsb	r4, r0, r4, asr #5
   80746:	441c      	add	r4, r3
		PIOD->PIO_CODR |= PIO_CODR_P10;
   80748:	4a07      	ldr	r2, [pc, #28]	; (80768 <set_positon+0xb0>)
   8074a:	6b53      	ldr	r3, [r2, #52]	; 0x34
   8074c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
   80750:	6353      	str	r3, [r2, #52]	; 0x34
		break;
   80752:	e7cc      	b.n	806ee <set_positon+0x36>
		motor_pos = middle;
   80754:	f242 2458 	movw	r4, #8792	; 0x2258
   80758:	e7c9      	b.n	806ee <set_positon+0x36>
		u = -u;
   8075a:	f104 4400 	add.w	r4, r4, #2147483648	; 0x80000000
   8075e:	9401      	str	r4, [sp, #4]
   80760:	e7d7      	b.n	80712 <set_positon+0x5a>
   80762:	bf00      	nop
   80764:	51eb851f 	.word	0x51eb851f
   80768:	400e1400 	.word	0x400e1400
   8076c:	000813a0 	.word	0x000813a0
   80770:	00080a51 	.word	0x00080a51
   80774:	00080671 	.word	0x00080671
   80778:	00080d45 	.word	0x00080d45
   8077c:	3a03126f 	.word	0x3a03126f
   80780:	00080ded 	.word	0x00080ded
   80784:	00081129 	.word	0x00081129
   80788:	00081179 	.word	0x00081179
   8078c:	000813b4 	.word	0x000813b4
   80790:	0008019d 	.word	0x0008019d

00080794 <set_pin>:


void set_pin(){
   80794:	b538      	push	{r3, r4, r5, lr}

	PIOC->PIO_SODR |= PIO_PC9;
   80796:	4c08      	ldr	r4, [pc, #32]	; (807b8 <set_pin+0x24>)
   80798:	6b23      	ldr	r3, [r4, #48]	; 0x30
   8079a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
   8079e:	6323      	str	r3, [r4, #48]	; 0x30
	 delay(1000);
   807a0:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
   807a4:	4d05      	ldr	r5, [pc, #20]	; (807bc <set_pin+0x28>)
   807a6:	47a8      	blx	r5
	 PIOC->PIO_CODR |= PIO_PC9;
   807a8:	6b63      	ldr	r3, [r4, #52]	; 0x34
   807aa:	f443 7300 	orr.w	r3, r3, #512	; 0x200
   807ae:	6363      	str	r3, [r4, #52]	; 0x34
 	 //PIOC->PIO_SODR &= ~PIO_PC9;
	 delay(1000);
   807b0:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
   807b4:	47a8      	blx	r5
   807b6:	bd38      	pop	{r3, r4, r5, pc}
   807b8:	400e1200 	.word	0x400e1200
   807bc:	000805d9 	.word	0x000805d9

000807c0 <printchar>:
   807c0:	b508      	push	{r3, lr}
   807c2:	b2c8      	uxtb	r0, r1
   807c4:	4b01      	ldr	r3, [pc, #4]	; (807cc <printchar+0xc>)
   807c6:	4798      	blx	r3
   807c8:	bd08      	pop	{r3, pc}
   807ca:	bf00      	nop
   807cc:	00080b45 	.word	0x00080b45

000807d0 <prints>:
   807d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   807d4:	4607      	mov	r7, r0
   807d6:	460e      	mov	r6, r1
   807d8:	1e15      	subs	r5, r2, #0
   807da:	dd02      	ble.n	807e2 <prints+0x12>
   807dc:	460a      	mov	r2, r1
   807de:	2100      	movs	r1, #0
   807e0:	e004      	b.n	807ec <prints+0x1c>
   807e2:	f04f 0820 	mov.w	r8, #32
   807e6:	e00e      	b.n	80806 <prints+0x36>
   807e8:	3101      	adds	r1, #1
   807ea:	3201      	adds	r2, #1
   807ec:	7810      	ldrb	r0, [r2, #0]
   807ee:	2800      	cmp	r0, #0
   807f0:	d1fa      	bne.n	807e8 <prints+0x18>
   807f2:	42a9      	cmp	r1, r5
   807f4:	da01      	bge.n	807fa <prints+0x2a>
   807f6:	1a6d      	subs	r5, r5, r1
   807f8:	e000      	b.n	807fc <prints+0x2c>
   807fa:	2500      	movs	r5, #0
   807fc:	f013 0f02 	tst.w	r3, #2
   80800:	d106      	bne.n	80810 <prints+0x40>
   80802:	f04f 0820 	mov.w	r8, #32
   80806:	f013 0401 	ands.w	r4, r3, #1
   8080a:	d00a      	beq.n	80822 <prints+0x52>
   8080c:	2400      	movs	r4, #0
   8080e:	e010      	b.n	80832 <prints+0x62>
   80810:	f04f 0830 	mov.w	r8, #48	; 0x30
   80814:	e7f7      	b.n	80806 <prints+0x36>
   80816:	4641      	mov	r1, r8
   80818:	4638      	mov	r0, r7
   8081a:	4b0d      	ldr	r3, [pc, #52]	; (80850 <prints+0x80>)
   8081c:	4798      	blx	r3
   8081e:	3401      	adds	r4, #1
   80820:	3d01      	subs	r5, #1
   80822:	2d00      	cmp	r5, #0
   80824:	dcf7      	bgt.n	80816 <prints+0x46>
   80826:	e004      	b.n	80832 <prints+0x62>
   80828:	4638      	mov	r0, r7
   8082a:	4b09      	ldr	r3, [pc, #36]	; (80850 <prints+0x80>)
   8082c:	4798      	blx	r3
   8082e:	3401      	adds	r4, #1
   80830:	3601      	adds	r6, #1
   80832:	7831      	ldrb	r1, [r6, #0]
   80834:	2900      	cmp	r1, #0
   80836:	d1f7      	bne.n	80828 <prints+0x58>
   80838:	e005      	b.n	80846 <prints+0x76>
   8083a:	4641      	mov	r1, r8
   8083c:	4638      	mov	r0, r7
   8083e:	4b04      	ldr	r3, [pc, #16]	; (80850 <prints+0x80>)
   80840:	4798      	blx	r3
   80842:	3401      	adds	r4, #1
   80844:	3d01      	subs	r5, #1
   80846:	2d00      	cmp	r5, #0
   80848:	dcf7      	bgt.n	8083a <prints+0x6a>
   8084a:	4620      	mov	r0, r4
   8084c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80850:	000807c1 	.word	0x000807c1

00080854 <printi>:
   80854:	b5f0      	push	{r4, r5, r6, r7, lr}
   80856:	b085      	sub	sp, #20
   80858:	4607      	mov	r7, r0
   8085a:	980c      	ldr	r0, [sp, #48]	; 0x30
   8085c:	b151      	cbz	r1, 80874 <printi+0x20>
   8085e:	461e      	mov	r6, r3
   80860:	460c      	mov	r4, r1
   80862:	b113      	cbz	r3, 8086a <printi+0x16>
   80864:	2a0a      	cmp	r2, #10
   80866:	d012      	beq.n	8088e <printi+0x3a>
   80868:	2600      	movs	r6, #0
   8086a:	ad04      	add	r5, sp, #16
   8086c:	2300      	movs	r3, #0
   8086e:	f805 3d01 	strb.w	r3, [r5, #-1]!
   80872:	e018      	b.n	808a6 <printi+0x52>
   80874:	2330      	movs	r3, #48	; 0x30
   80876:	f88d 3004 	strb.w	r3, [sp, #4]
   8087a:	2300      	movs	r3, #0
   8087c:	f88d 3005 	strb.w	r3, [sp, #5]
   80880:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   80882:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   80884:	a901      	add	r1, sp, #4
   80886:	4638      	mov	r0, r7
   80888:	4c1b      	ldr	r4, [pc, #108]	; (808f8 <printi+0xa4>)
   8088a:	47a0      	blx	r4
   8088c:	e029      	b.n	808e2 <printi+0x8e>
   8088e:	2900      	cmp	r1, #0
   80890:	db01      	blt.n	80896 <printi+0x42>
   80892:	2600      	movs	r6, #0
   80894:	e7e9      	b.n	8086a <printi+0x16>
   80896:	424c      	negs	r4, r1
   80898:	2601      	movs	r6, #1
   8089a:	e7e6      	b.n	8086a <printi+0x16>
   8089c:	3330      	adds	r3, #48	; 0x30
   8089e:	f805 3d01 	strb.w	r3, [r5, #-1]!
   808a2:	fbb4 f4f2 	udiv	r4, r4, r2
   808a6:	b14c      	cbz	r4, 808bc <printi+0x68>
   808a8:	fbb4 f3f2 	udiv	r3, r4, r2
   808ac:	fb02 4313 	mls	r3, r2, r3, r4
   808b0:	2b09      	cmp	r3, #9
   808b2:	ddf3      	ble.n	8089c <printi+0x48>
   808b4:	f1a0 013a 	sub.w	r1, r0, #58	; 0x3a
   808b8:	440b      	add	r3, r1
   808ba:	e7ef      	b.n	8089c <printi+0x48>
   808bc:	b156      	cbz	r6, 808d4 <printi+0x80>
   808be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   808c0:	b11b      	cbz	r3, 808ca <printi+0x76>
   808c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   808c4:	f013 0f02 	tst.w	r3, #2
   808c8:	d10d      	bne.n	808e6 <printi+0x92>
   808ca:	232d      	movs	r3, #45	; 0x2d
   808cc:	f805 3c01 	strb.w	r3, [r5, #-1]
   808d0:	3d01      	subs	r5, #1
   808d2:	2600      	movs	r6, #0
   808d4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   808d6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   808d8:	4629      	mov	r1, r5
   808da:	4638      	mov	r0, r7
   808dc:	4c06      	ldr	r4, [pc, #24]	; (808f8 <printi+0xa4>)
   808de:	47a0      	blx	r4
   808e0:	4430      	add	r0, r6
   808e2:	b005      	add	sp, #20
   808e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
   808e6:	212d      	movs	r1, #45	; 0x2d
   808e8:	4638      	mov	r0, r7
   808ea:	4b04      	ldr	r3, [pc, #16]	; (808fc <printi+0xa8>)
   808ec:	4798      	blx	r3
   808ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   808f0:	3b01      	subs	r3, #1
   808f2:	930a      	str	r3, [sp, #40]	; 0x28
   808f4:	e7ee      	b.n	808d4 <printi+0x80>
   808f6:	bf00      	nop
   808f8:	000807d1 	.word	0x000807d1
   808fc:	000807c1 	.word	0x000807c1

00080900 <print>:
   80900:	b5f0      	push	{r4, r5, r6, r7, lr}
   80902:	b089      	sub	sp, #36	; 0x24
   80904:	4606      	mov	r6, r0
   80906:	460c      	mov	r4, r1
   80908:	9205      	str	r2, [sp, #20]
   8090a:	2500      	movs	r5, #0
   8090c:	e081      	b.n	80a12 <print+0x112>
   8090e:	1ca2      	adds	r2, r4, #2
   80910:	2301      	movs	r3, #1
   80912:	e08b      	b.n	80a2c <print+0x12c>
   80914:	3401      	adds	r4, #1
   80916:	f043 0302 	orr.w	r3, r3, #2
   8091a:	7822      	ldrb	r2, [r4, #0]
   8091c:	2a30      	cmp	r2, #48	; 0x30
   8091e:	d0f9      	beq.n	80914 <print+0x14>
   80920:	2200      	movs	r2, #0
   80922:	e006      	b.n	80932 <print+0x32>
   80924:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   80928:	0050      	lsls	r0, r2, #1
   8092a:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
   8092e:	4402      	add	r2, r0
   80930:	3401      	adds	r4, #1
   80932:	7821      	ldrb	r1, [r4, #0]
   80934:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
   80938:	b2c0      	uxtb	r0, r0
   8093a:	2809      	cmp	r0, #9
   8093c:	d9f2      	bls.n	80924 <print+0x24>
   8093e:	2973      	cmp	r1, #115	; 0x73
   80940:	d018      	beq.n	80974 <print+0x74>
   80942:	2964      	cmp	r1, #100	; 0x64
   80944:	d022      	beq.n	8098c <print+0x8c>
   80946:	2978      	cmp	r1, #120	; 0x78
   80948:	d02f      	beq.n	809aa <print+0xaa>
   8094a:	2958      	cmp	r1, #88	; 0x58
   8094c:	d03c      	beq.n	809c8 <print+0xc8>
   8094e:	2975      	cmp	r1, #117	; 0x75
   80950:	d049      	beq.n	809e6 <print+0xe6>
   80952:	2963      	cmp	r1, #99	; 0x63
   80954:	d15c      	bne.n	80a10 <print+0x110>
   80956:	9905      	ldr	r1, [sp, #20]
   80958:	1d08      	adds	r0, r1, #4
   8095a:	9005      	str	r0, [sp, #20]
   8095c:	7809      	ldrb	r1, [r1, #0]
   8095e:	f88d 101c 	strb.w	r1, [sp, #28]
   80962:	2100      	movs	r1, #0
   80964:	f88d 101d 	strb.w	r1, [sp, #29]
   80968:	a907      	add	r1, sp, #28
   8096a:	4630      	mov	r0, r6
   8096c:	4f34      	ldr	r7, [pc, #208]	; (80a40 <print+0x140>)
   8096e:	47b8      	blx	r7
   80970:	4405      	add	r5, r0
   80972:	e04d      	b.n	80a10 <print+0x110>
   80974:	9905      	ldr	r1, [sp, #20]
   80976:	1d08      	adds	r0, r1, #4
   80978:	9005      	str	r0, [sp, #20]
   8097a:	6809      	ldr	r1, [r1, #0]
   8097c:	b121      	cbz	r1, 80988 <print+0x88>
   8097e:	4630      	mov	r0, r6
   80980:	4f2f      	ldr	r7, [pc, #188]	; (80a40 <print+0x140>)
   80982:	47b8      	blx	r7
   80984:	4405      	add	r5, r0
   80986:	e043      	b.n	80a10 <print+0x110>
   80988:	492e      	ldr	r1, [pc, #184]	; (80a44 <print+0x144>)
   8098a:	e7f8      	b.n	8097e <print+0x7e>
   8098c:	9905      	ldr	r1, [sp, #20]
   8098e:	1d08      	adds	r0, r1, #4
   80990:	9005      	str	r0, [sp, #20]
   80992:	6809      	ldr	r1, [r1, #0]
   80994:	2061      	movs	r0, #97	; 0x61
   80996:	9002      	str	r0, [sp, #8]
   80998:	9301      	str	r3, [sp, #4]
   8099a:	9200      	str	r2, [sp, #0]
   8099c:	2301      	movs	r3, #1
   8099e:	220a      	movs	r2, #10
   809a0:	4630      	mov	r0, r6
   809a2:	4f29      	ldr	r7, [pc, #164]	; (80a48 <print+0x148>)
   809a4:	47b8      	blx	r7
   809a6:	4405      	add	r5, r0
   809a8:	e032      	b.n	80a10 <print+0x110>
   809aa:	9905      	ldr	r1, [sp, #20]
   809ac:	1d08      	adds	r0, r1, #4
   809ae:	9005      	str	r0, [sp, #20]
   809b0:	6809      	ldr	r1, [r1, #0]
   809b2:	2061      	movs	r0, #97	; 0x61
   809b4:	9002      	str	r0, [sp, #8]
   809b6:	9301      	str	r3, [sp, #4]
   809b8:	9200      	str	r2, [sp, #0]
   809ba:	2300      	movs	r3, #0
   809bc:	2210      	movs	r2, #16
   809be:	4630      	mov	r0, r6
   809c0:	4f21      	ldr	r7, [pc, #132]	; (80a48 <print+0x148>)
   809c2:	47b8      	blx	r7
   809c4:	4405      	add	r5, r0
   809c6:	e023      	b.n	80a10 <print+0x110>
   809c8:	9905      	ldr	r1, [sp, #20]
   809ca:	1d08      	adds	r0, r1, #4
   809cc:	9005      	str	r0, [sp, #20]
   809ce:	6809      	ldr	r1, [r1, #0]
   809d0:	2041      	movs	r0, #65	; 0x41
   809d2:	9002      	str	r0, [sp, #8]
   809d4:	9301      	str	r3, [sp, #4]
   809d6:	9200      	str	r2, [sp, #0]
   809d8:	2300      	movs	r3, #0
   809da:	2210      	movs	r2, #16
   809dc:	4630      	mov	r0, r6
   809de:	4f1a      	ldr	r7, [pc, #104]	; (80a48 <print+0x148>)
   809e0:	47b8      	blx	r7
   809e2:	4405      	add	r5, r0
   809e4:	e014      	b.n	80a10 <print+0x110>
   809e6:	9905      	ldr	r1, [sp, #20]
   809e8:	1d08      	adds	r0, r1, #4
   809ea:	9005      	str	r0, [sp, #20]
   809ec:	6809      	ldr	r1, [r1, #0]
   809ee:	2061      	movs	r0, #97	; 0x61
   809f0:	9002      	str	r0, [sp, #8]
   809f2:	9301      	str	r3, [sp, #4]
   809f4:	9200      	str	r2, [sp, #0]
   809f6:	2300      	movs	r3, #0
   809f8:	220a      	movs	r2, #10
   809fa:	4630      	mov	r0, r6
   809fc:	4f12      	ldr	r7, [pc, #72]	; (80a48 <print+0x148>)
   809fe:	47b8      	blx	r7
   80a00:	4405      	add	r5, r0
   80a02:	e005      	b.n	80a10 <print+0x110>
   80a04:	4614      	mov	r4, r2
   80a06:	7821      	ldrb	r1, [r4, #0]
   80a08:	4630      	mov	r0, r6
   80a0a:	4b10      	ldr	r3, [pc, #64]	; (80a4c <print+0x14c>)
   80a0c:	4798      	blx	r3
   80a0e:	3501      	adds	r5, #1
   80a10:	3401      	adds	r4, #1
   80a12:	7823      	ldrb	r3, [r4, #0]
   80a14:	b163      	cbz	r3, 80a30 <print+0x130>
   80a16:	2b25      	cmp	r3, #37	; 0x25
   80a18:	d1f5      	bne.n	80a06 <print+0x106>
   80a1a:	1c62      	adds	r2, r4, #1
   80a1c:	7863      	ldrb	r3, [r4, #1]
   80a1e:	b13b      	cbz	r3, 80a30 <print+0x130>
   80a20:	2b25      	cmp	r3, #37	; 0x25
   80a22:	d0ef      	beq.n	80a04 <print+0x104>
   80a24:	2b2d      	cmp	r3, #45	; 0x2d
   80a26:	f43f af72 	beq.w	8090e <print+0xe>
   80a2a:	2300      	movs	r3, #0
   80a2c:	4614      	mov	r4, r2
   80a2e:	e774      	b.n	8091a <print+0x1a>
   80a30:	b116      	cbz	r6, 80a38 <print+0x138>
   80a32:	6833      	ldr	r3, [r6, #0]
   80a34:	2200      	movs	r2, #0
   80a36:	701a      	strb	r2, [r3, #0]
   80a38:	4628      	mov	r0, r5
   80a3a:	b009      	add	sp, #36	; 0x24
   80a3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   80a3e:	bf00      	nop
   80a40:	000807d1 	.word	0x000807d1
   80a44:	000813c8 	.word	0x000813c8
   80a48:	00080855 	.word	0x00080855
   80a4c:	000807c1 	.word	0x000807c1

00080a50 <printf>:
   80a50:	b40f      	push	{r0, r1, r2, r3}
   80a52:	b500      	push	{lr}
   80a54:	b083      	sub	sp, #12
   80a56:	aa04      	add	r2, sp, #16
   80a58:	f852 1b04 	ldr.w	r1, [r2], #4
   80a5c:	9201      	str	r2, [sp, #4]
   80a5e:	2000      	movs	r0, #0
   80a60:	4b03      	ldr	r3, [pc, #12]	; (80a70 <printf+0x20>)
   80a62:	4798      	blx	r3
   80a64:	b003      	add	sp, #12
   80a66:	f85d eb04 	ldr.w	lr, [sp], #4
   80a6a:	b004      	add	sp, #16
   80a6c:	4770      	bx	lr
   80a6e:	bf00      	nop
   80a70:	00080901 	.word	0x00080901

00080a74 <pwm_init>:
   80a74:	4b15      	ldr	r3, [pc, #84]	; (80acc <pwm_init+0x58>)
   80a76:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   80a78:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
   80a7c:	671a      	str	r2, [r3, #112]	; 0x70
   80a7e:	685a      	ldr	r2, [r3, #4]
   80a80:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
   80a84:	605a      	str	r2, [r3, #4]
   80a86:	4a12      	ldr	r2, [pc, #72]	; (80ad0 <pwm_init+0x5c>)
   80a88:	f8d2 3100 	ldr.w	r3, [r2, #256]	; 0x100
   80a8c:	f043 0310 	orr.w	r3, r3, #16
   80a90:	f8c2 3100 	str.w	r3, [r2, #256]	; 0x100
   80a94:	4b0f      	ldr	r3, [pc, #60]	; (80ad4 <pwm_init+0x60>)
   80a96:	4a10      	ldr	r2, [pc, #64]	; (80ad8 <pwm_init+0x64>)
   80a98:	601a      	str	r2, [r3, #0]
   80a9a:	f8d3 22a0 	ldr.w	r2, [r3, #672]	; 0x2a0
   80a9e:	f442 7203 	orr.w	r2, r2, #524	; 0x20c
   80aa2:	f8c3 22a0 	str.w	r2, [r3, #672]	; 0x2a0
   80aa6:	f8d3 22ac 	ldr.w	r2, [r3, #684]	; 0x2ac
   80aaa:	f442 624d 	orr.w	r2, r2, #3280	; 0xcd0
   80aae:	f042 0201 	orr.w	r2, r2, #1
   80ab2:	f8c3 22ac 	str.w	r2, [r3, #684]	; 0x2ac
   80ab6:	f8d3 22a4 	ldr.w	r2, [r3, #676]	; 0x2a4
   80aba:	f042 02f6 	orr.w	r2, r2, #246	; 0xf6
   80abe:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
   80ac2:	685a      	ldr	r2, [r3, #4]
   80ac4:	f042 0220 	orr.w	r2, r2, #32
   80ac8:	605a      	str	r2, [r3, #4]
   80aca:	4770      	bx	lr
   80acc:	400e1200 	.word	0x400e1200
   80ad0:	400e0600 	.word	0x400e0600
   80ad4:	40094000 	.word	0x40094000
   80ad8:	09010000 	.word	0x09010000

00080adc <configure_uart>:
   80adc:	4b16      	ldr	r3, [pc, #88]	; (80b38 <configure_uart+0x5c>)
   80ade:	2200      	movs	r2, #0
   80ae0:	701a      	strb	r2, [r3, #0]
   80ae2:	705a      	strb	r2, [r3, #1]
   80ae4:	4b15      	ldr	r3, [pc, #84]	; (80b3c <configure_uart+0x60>)
   80ae6:	f44f 7140 	mov.w	r1, #768	; 0x300
   80aea:	6459      	str	r1, [r3, #68]	; 0x44
   80aec:	6059      	str	r1, [r3, #4]
   80aee:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   80af0:	6f18      	ldr	r0, [r3, #112]	; 0x70
   80af2:	4002      	ands	r2, r0
   80af4:	f422 7240 	bic.w	r2, r2, #768	; 0x300
   80af8:	671a      	str	r2, [r3, #112]	; 0x70
   80afa:	6659      	str	r1, [r3, #100]	; 0x64
   80afc:	f44f 7280 	mov.w	r2, #256	; 0x100
   80b00:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
   80b04:	611a      	str	r2, [r3, #16]
   80b06:	f503 7300 	add.w	r3, r3, #512	; 0x200
   80b0a:	21ac      	movs	r1, #172	; 0xac
   80b0c:	6019      	str	r1, [r3, #0]
   80b0e:	f240 2123 	movw	r1, #547	; 0x223
   80b12:	6219      	str	r1, [r3, #32]
   80b14:	f44f 6100 	mov.w	r1, #2048	; 0x800
   80b18:	6059      	str	r1, [r3, #4]
   80b1a:	f240 2102 	movw	r1, #514	; 0x202
   80b1e:	f8c3 1120 	str.w	r1, [r3, #288]	; 0x120
   80b22:	f04f 31ff 	mov.w	r1, #4294967295
   80b26:	60d9      	str	r1, [r3, #12]
   80b28:	21e1      	movs	r1, #225	; 0xe1
   80b2a:	6099      	str	r1, [r3, #8]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   80b2c:	4904      	ldr	r1, [pc, #16]	; (80b40 <configure_uart+0x64>)
   80b2e:	600a      	str	r2, [r1, #0]
   80b30:	2250      	movs	r2, #80	; 0x50
   80b32:	601a      	str	r2, [r3, #0]
   80b34:	4770      	bx	lr
   80b36:	bf00      	nop
   80b38:	20000450 	.word	0x20000450
   80b3c:	400e0e00 	.word	0x400e0e00
   80b40:	e000e100 	.word	0xe000e100

00080b44 <uart_putchar>:
   80b44:	4b07      	ldr	r3, [pc, #28]	; (80b64 <uart_putchar+0x20>)
   80b46:	695b      	ldr	r3, [r3, #20]
   80b48:	f013 0f02 	tst.w	r3, #2
   80b4c:	d008      	beq.n	80b60 <uart_putchar+0x1c>
   80b4e:	4b05      	ldr	r3, [pc, #20]	; (80b64 <uart_putchar+0x20>)
   80b50:	61d8      	str	r0, [r3, #28]
   80b52:	4b04      	ldr	r3, [pc, #16]	; (80b64 <uart_putchar+0x20>)
   80b54:	695b      	ldr	r3, [r3, #20]
   80b56:	f413 7f00 	tst.w	r3, #512	; 0x200
   80b5a:	d0fa      	beq.n	80b52 <uart_putchar+0xe>
   80b5c:	2000      	movs	r0, #0
   80b5e:	4770      	bx	lr
   80b60:	2001      	movs	r0, #1
   80b62:	4770      	bx	lr
   80b64:	400e0800 	.word	0x400e0800

00080b68 <UART_Handler>:
   80b68:	b508      	push	{r3, lr}
   80b6a:	4b15      	ldr	r3, [pc, #84]	; (80bc0 <UART_Handler+0x58>)
   80b6c:	695b      	ldr	r3, [r3, #20]
   80b6e:	f013 0fe0 	tst.w	r3, #224	; 0xe0
   80b72:	d003      	beq.n	80b7c <UART_Handler+0x14>
   80b74:	f44f 71a8 	mov.w	r1, #336	; 0x150
   80b78:	4a11      	ldr	r2, [pc, #68]	; (80bc0 <UART_Handler+0x58>)
   80b7a:	6011      	str	r1, [r2, #0]
   80b7c:	f013 0f01 	tst.w	r3, #1
   80b80:	d012      	beq.n	80ba8 <UART_Handler+0x40>
   80b82:	4810      	ldr	r0, [pc, #64]	; (80bc4 <UART_Handler+0x5c>)
   80b84:	7842      	ldrb	r2, [r0, #1]
   80b86:	1c53      	adds	r3, r2, #1
   80b88:	4259      	negs	r1, r3
   80b8a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   80b8e:	f001 013f 	and.w	r1, r1, #63	; 0x3f
   80b92:	bf58      	it	pl
   80b94:	424b      	negpl	r3, r1
   80b96:	7801      	ldrb	r1, [r0, #0]
   80b98:	428b      	cmp	r3, r1
   80b9a:	d006      	beq.n	80baa <UART_Handler+0x42>
   80b9c:	4908      	ldr	r1, [pc, #32]	; (80bc0 <UART_Handler+0x58>)
   80b9e:	6988      	ldr	r0, [r1, #24]
   80ba0:	4908      	ldr	r1, [pc, #32]	; (80bc4 <UART_Handler+0x5c>)
   80ba2:	440a      	add	r2, r1
   80ba4:	7090      	strb	r0, [r2, #2]
   80ba6:	704b      	strb	r3, [r1, #1]
   80ba8:	bd08      	pop	{r3, pc}
   80baa:	4807      	ldr	r0, [pc, #28]	; (80bc8 <UART_Handler+0x60>)
   80bac:	4b07      	ldr	r3, [pc, #28]	; (80bcc <UART_Handler+0x64>)
   80bae:	4798      	blx	r3
   80bb0:	4b04      	ldr	r3, [pc, #16]	; (80bc4 <UART_Handler+0x5c>)
   80bb2:	7859      	ldrb	r1, [r3, #1]
   80bb4:	4a02      	ldr	r2, [pc, #8]	; (80bc0 <UART_Handler+0x58>)
   80bb6:	6992      	ldr	r2, [r2, #24]
   80bb8:	440b      	add	r3, r1
   80bba:	709a      	strb	r2, [r3, #2]
   80bbc:	bd08      	pop	{r3, pc}
   80bbe:	bf00      	nop
   80bc0:	400e0800 	.word	0x400e0800
   80bc4:	20000450 	.word	0x20000450
   80bc8:	000813d0 	.word	0x000813d0
   80bcc:	00080a51 	.word	0x00080a51

00080bd0 <__aeabi_frsub>:
   80bd0:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
   80bd4:	e002      	b.n	80bdc <__addsf3>
   80bd6:	bf00      	nop

00080bd8 <__aeabi_fsub>:
   80bd8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

00080bdc <__addsf3>:
   80bdc:	0042      	lsls	r2, r0, #1
   80bde:	bf1f      	itttt	ne
   80be0:	ea5f 0341 	movsne.w	r3, r1, lsl #1
   80be4:	ea92 0f03 	teqne	r2, r3
   80be8:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
   80bec:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   80bf0:	d06a      	beq.n	80cc8 <__addsf3+0xec>
   80bf2:	ea4f 6212 	mov.w	r2, r2, lsr #24
   80bf6:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
   80bfa:	bfc1      	itttt	gt
   80bfc:	18d2      	addgt	r2, r2, r3
   80bfe:	4041      	eorgt	r1, r0
   80c00:	4048      	eorgt	r0, r1
   80c02:	4041      	eorgt	r1, r0
   80c04:	bfb8      	it	lt
   80c06:	425b      	neglt	r3, r3
   80c08:	2b19      	cmp	r3, #25
   80c0a:	bf88      	it	hi
   80c0c:	4770      	bxhi	lr
   80c0e:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   80c12:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   80c16:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
   80c1a:	bf18      	it	ne
   80c1c:	4240      	negne	r0, r0
   80c1e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   80c22:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
   80c26:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
   80c2a:	bf18      	it	ne
   80c2c:	4249      	negne	r1, r1
   80c2e:	ea92 0f03 	teq	r2, r3
   80c32:	d03f      	beq.n	80cb4 <__addsf3+0xd8>
   80c34:	f1a2 0201 	sub.w	r2, r2, #1
   80c38:	fa41 fc03 	asr.w	ip, r1, r3
   80c3c:	eb10 000c 	adds.w	r0, r0, ip
   80c40:	f1c3 0320 	rsb	r3, r3, #32
   80c44:	fa01 f103 	lsl.w	r1, r1, r3
   80c48:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   80c4c:	d502      	bpl.n	80c54 <__addsf3+0x78>
   80c4e:	4249      	negs	r1, r1
   80c50:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
   80c54:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
   80c58:	d313      	bcc.n	80c82 <__addsf3+0xa6>
   80c5a:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
   80c5e:	d306      	bcc.n	80c6e <__addsf3+0x92>
   80c60:	0840      	lsrs	r0, r0, #1
   80c62:	ea4f 0131 	mov.w	r1, r1, rrx
   80c66:	f102 0201 	add.w	r2, r2, #1
   80c6a:	2afe      	cmp	r2, #254	; 0xfe
   80c6c:	d251      	bcs.n	80d12 <__addsf3+0x136>
   80c6e:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
   80c72:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   80c76:	bf08      	it	eq
   80c78:	f020 0001 	biceq.w	r0, r0, #1
   80c7c:	ea40 0003 	orr.w	r0, r0, r3
   80c80:	4770      	bx	lr
   80c82:	0049      	lsls	r1, r1, #1
   80c84:	eb40 0000 	adc.w	r0, r0, r0
   80c88:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
   80c8c:	f1a2 0201 	sub.w	r2, r2, #1
   80c90:	d1ed      	bne.n	80c6e <__addsf3+0x92>
   80c92:	fab0 fc80 	clz	ip, r0
   80c96:	f1ac 0c08 	sub.w	ip, ip, #8
   80c9a:	ebb2 020c 	subs.w	r2, r2, ip
   80c9e:	fa00 f00c 	lsl.w	r0, r0, ip
   80ca2:	bfaa      	itet	ge
   80ca4:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
   80ca8:	4252      	neglt	r2, r2
   80caa:	4318      	orrge	r0, r3
   80cac:	bfbc      	itt	lt
   80cae:	40d0      	lsrlt	r0, r2
   80cb0:	4318      	orrlt	r0, r3
   80cb2:	4770      	bx	lr
   80cb4:	f092 0f00 	teq	r2, #0
   80cb8:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
   80cbc:	bf06      	itte	eq
   80cbe:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
   80cc2:	3201      	addeq	r2, #1
   80cc4:	3b01      	subne	r3, #1
   80cc6:	e7b5      	b.n	80c34 <__addsf3+0x58>
   80cc8:	ea4f 0341 	mov.w	r3, r1, lsl #1
   80ccc:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   80cd0:	bf18      	it	ne
   80cd2:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   80cd6:	d021      	beq.n	80d1c <__addsf3+0x140>
   80cd8:	ea92 0f03 	teq	r2, r3
   80cdc:	d004      	beq.n	80ce8 <__addsf3+0x10c>
   80cde:	f092 0f00 	teq	r2, #0
   80ce2:	bf08      	it	eq
   80ce4:	4608      	moveq	r0, r1
   80ce6:	4770      	bx	lr
   80ce8:	ea90 0f01 	teq	r0, r1
   80cec:	bf1c      	itt	ne
   80cee:	2000      	movne	r0, #0
   80cf0:	4770      	bxne	lr
   80cf2:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
   80cf6:	d104      	bne.n	80d02 <__addsf3+0x126>
   80cf8:	0040      	lsls	r0, r0, #1
   80cfa:	bf28      	it	cs
   80cfc:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
   80d00:	4770      	bx	lr
   80d02:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
   80d06:	bf3c      	itt	cc
   80d08:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
   80d0c:	4770      	bxcc	lr
   80d0e:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   80d12:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
   80d16:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   80d1a:	4770      	bx	lr
   80d1c:	ea7f 6222 	mvns.w	r2, r2, asr #24
   80d20:	bf16      	itet	ne
   80d22:	4608      	movne	r0, r1
   80d24:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
   80d28:	4601      	movne	r1, r0
   80d2a:	0242      	lsls	r2, r0, #9
   80d2c:	bf06      	itte	eq
   80d2e:	ea5f 2341 	movseq.w	r3, r1, lsl #9
   80d32:	ea90 0f01 	teqeq	r0, r1
   80d36:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
   80d3a:	4770      	bx	lr

00080d3c <__aeabi_ui2f>:
   80d3c:	f04f 0300 	mov.w	r3, #0
   80d40:	e004      	b.n	80d4c <__aeabi_i2f+0x8>
   80d42:	bf00      	nop

00080d44 <__aeabi_i2f>:
   80d44:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
   80d48:	bf48      	it	mi
   80d4a:	4240      	negmi	r0, r0
   80d4c:	ea5f 0c00 	movs.w	ip, r0
   80d50:	bf08      	it	eq
   80d52:	4770      	bxeq	lr
   80d54:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
   80d58:	4601      	mov	r1, r0
   80d5a:	f04f 0000 	mov.w	r0, #0
   80d5e:	e01c      	b.n	80d9a <__aeabi_l2f+0x2a>

00080d60 <__aeabi_ul2f>:
   80d60:	ea50 0201 	orrs.w	r2, r0, r1
   80d64:	bf08      	it	eq
   80d66:	4770      	bxeq	lr
   80d68:	f04f 0300 	mov.w	r3, #0
   80d6c:	e00a      	b.n	80d84 <__aeabi_l2f+0x14>
   80d6e:	bf00      	nop

00080d70 <__aeabi_l2f>:
   80d70:	ea50 0201 	orrs.w	r2, r0, r1
   80d74:	bf08      	it	eq
   80d76:	4770      	bxeq	lr
   80d78:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
   80d7c:	d502      	bpl.n	80d84 <__aeabi_l2f+0x14>
   80d7e:	4240      	negs	r0, r0
   80d80:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   80d84:	ea5f 0c01 	movs.w	ip, r1
   80d88:	bf02      	ittt	eq
   80d8a:	4684      	moveq	ip, r0
   80d8c:	4601      	moveq	r1, r0
   80d8e:	2000      	moveq	r0, #0
   80d90:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
   80d94:	bf08      	it	eq
   80d96:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
   80d9a:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
   80d9e:	fabc f28c 	clz	r2, ip
   80da2:	3a08      	subs	r2, #8
   80da4:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
   80da8:	db10      	blt.n	80dcc <__aeabi_l2f+0x5c>
   80daa:	fa01 fc02 	lsl.w	ip, r1, r2
   80dae:	4463      	add	r3, ip
   80db0:	fa00 fc02 	lsl.w	ip, r0, r2
   80db4:	f1c2 0220 	rsb	r2, r2, #32
   80db8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   80dbc:	fa20 f202 	lsr.w	r2, r0, r2
   80dc0:	eb43 0002 	adc.w	r0, r3, r2
   80dc4:	bf08      	it	eq
   80dc6:	f020 0001 	biceq.w	r0, r0, #1
   80dca:	4770      	bx	lr
   80dcc:	f102 0220 	add.w	r2, r2, #32
   80dd0:	fa01 fc02 	lsl.w	ip, r1, r2
   80dd4:	f1c2 0220 	rsb	r2, r2, #32
   80dd8:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
   80ddc:	fa21 f202 	lsr.w	r2, r1, r2
   80de0:	eb43 0002 	adc.w	r0, r3, r2
   80de4:	bf08      	it	eq
   80de6:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   80dea:	4770      	bx	lr

00080dec <__aeabi_fmul>:
   80dec:	f04f 0cff 	mov.w	ip, #255	; 0xff
   80df0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   80df4:	bf1e      	ittt	ne
   80df6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   80dfa:	ea92 0f0c 	teqne	r2, ip
   80dfe:	ea93 0f0c 	teqne	r3, ip
   80e02:	d06f      	beq.n	80ee4 <__aeabi_fmul+0xf8>
   80e04:	441a      	add	r2, r3
   80e06:	ea80 0c01 	eor.w	ip, r0, r1
   80e0a:	0240      	lsls	r0, r0, #9
   80e0c:	bf18      	it	ne
   80e0e:	ea5f 2141 	movsne.w	r1, r1, lsl #9
   80e12:	d01e      	beq.n	80e52 <__aeabi_fmul+0x66>
   80e14:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
   80e18:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
   80e1c:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
   80e20:	fba0 3101 	umull	r3, r1, r0, r1
   80e24:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   80e28:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
   80e2c:	bf3e      	ittt	cc
   80e2e:	0049      	lslcc	r1, r1, #1
   80e30:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
   80e34:	005b      	lslcc	r3, r3, #1
   80e36:	ea40 0001 	orr.w	r0, r0, r1
   80e3a:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
   80e3e:	2afd      	cmp	r2, #253	; 0xfd
   80e40:	d81d      	bhi.n	80e7e <__aeabi_fmul+0x92>
   80e42:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
   80e46:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   80e4a:	bf08      	it	eq
   80e4c:	f020 0001 	biceq.w	r0, r0, #1
   80e50:	4770      	bx	lr
   80e52:	f090 0f00 	teq	r0, #0
   80e56:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   80e5a:	bf08      	it	eq
   80e5c:	0249      	lsleq	r1, r1, #9
   80e5e:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   80e62:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
   80e66:	3a7f      	subs	r2, #127	; 0x7f
   80e68:	bfc2      	ittt	gt
   80e6a:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   80e6e:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   80e72:	4770      	bxgt	lr
   80e74:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   80e78:	f04f 0300 	mov.w	r3, #0
   80e7c:	3a01      	subs	r2, #1
   80e7e:	dc5d      	bgt.n	80f3c <__aeabi_fmul+0x150>
   80e80:	f112 0f19 	cmn.w	r2, #25
   80e84:	bfdc      	itt	le
   80e86:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
   80e8a:	4770      	bxle	lr
   80e8c:	f1c2 0200 	rsb	r2, r2, #0
   80e90:	0041      	lsls	r1, r0, #1
   80e92:	fa21 f102 	lsr.w	r1, r1, r2
   80e96:	f1c2 0220 	rsb	r2, r2, #32
   80e9a:	fa00 fc02 	lsl.w	ip, r0, r2
   80e9e:	ea5f 0031 	movs.w	r0, r1, rrx
   80ea2:	f140 0000 	adc.w	r0, r0, #0
   80ea6:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
   80eaa:	bf08      	it	eq
   80eac:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   80eb0:	4770      	bx	lr
   80eb2:	f092 0f00 	teq	r2, #0
   80eb6:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   80eba:	bf02      	ittt	eq
   80ebc:	0040      	lsleq	r0, r0, #1
   80ebe:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   80ec2:	3a01      	subeq	r2, #1
   80ec4:	d0f9      	beq.n	80eba <__aeabi_fmul+0xce>
   80ec6:	ea40 000c 	orr.w	r0, r0, ip
   80eca:	f093 0f00 	teq	r3, #0
   80ece:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   80ed2:	bf02      	ittt	eq
   80ed4:	0049      	lsleq	r1, r1, #1
   80ed6:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   80eda:	3b01      	subeq	r3, #1
   80edc:	d0f9      	beq.n	80ed2 <__aeabi_fmul+0xe6>
   80ede:	ea41 010c 	orr.w	r1, r1, ip
   80ee2:	e78f      	b.n	80e04 <__aeabi_fmul+0x18>
   80ee4:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   80ee8:	ea92 0f0c 	teq	r2, ip
   80eec:	bf18      	it	ne
   80eee:	ea93 0f0c 	teqne	r3, ip
   80ef2:	d00a      	beq.n	80f0a <__aeabi_fmul+0x11e>
   80ef4:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   80ef8:	bf18      	it	ne
   80efa:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   80efe:	d1d8      	bne.n	80eb2 <__aeabi_fmul+0xc6>
   80f00:	ea80 0001 	eor.w	r0, r0, r1
   80f04:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   80f08:	4770      	bx	lr
   80f0a:	f090 0f00 	teq	r0, #0
   80f0e:	bf17      	itett	ne
   80f10:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
   80f14:	4608      	moveq	r0, r1
   80f16:	f091 0f00 	teqne	r1, #0
   80f1a:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
   80f1e:	d014      	beq.n	80f4a <__aeabi_fmul+0x15e>
   80f20:	ea92 0f0c 	teq	r2, ip
   80f24:	d101      	bne.n	80f2a <__aeabi_fmul+0x13e>
   80f26:	0242      	lsls	r2, r0, #9
   80f28:	d10f      	bne.n	80f4a <__aeabi_fmul+0x15e>
   80f2a:	ea93 0f0c 	teq	r3, ip
   80f2e:	d103      	bne.n	80f38 <__aeabi_fmul+0x14c>
   80f30:	024b      	lsls	r3, r1, #9
   80f32:	bf18      	it	ne
   80f34:	4608      	movne	r0, r1
   80f36:	d108      	bne.n	80f4a <__aeabi_fmul+0x15e>
   80f38:	ea80 0001 	eor.w	r0, r0, r1
   80f3c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   80f40:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   80f44:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   80f48:	4770      	bx	lr
   80f4a:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   80f4e:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
   80f52:	4770      	bx	lr

00080f54 <__aeabi_fdiv>:
   80f54:	f04f 0cff 	mov.w	ip, #255	; 0xff
   80f58:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   80f5c:	bf1e      	ittt	ne
   80f5e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   80f62:	ea92 0f0c 	teqne	r2, ip
   80f66:	ea93 0f0c 	teqne	r3, ip
   80f6a:	d069      	beq.n	81040 <__aeabi_fdiv+0xec>
   80f6c:	eba2 0203 	sub.w	r2, r2, r3
   80f70:	ea80 0c01 	eor.w	ip, r0, r1
   80f74:	0249      	lsls	r1, r1, #9
   80f76:	ea4f 2040 	mov.w	r0, r0, lsl #9
   80f7a:	d037      	beq.n	80fec <__aeabi_fdiv+0x98>
   80f7c:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   80f80:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
   80f84:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
   80f88:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   80f8c:	428b      	cmp	r3, r1
   80f8e:	bf38      	it	cc
   80f90:	005b      	lslcc	r3, r3, #1
   80f92:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
   80f96:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
   80f9a:	428b      	cmp	r3, r1
   80f9c:	bf24      	itt	cs
   80f9e:	1a5b      	subcs	r3, r3, r1
   80fa0:	ea40 000c 	orrcs.w	r0, r0, ip
   80fa4:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
   80fa8:	bf24      	itt	cs
   80faa:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
   80fae:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   80fb2:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
   80fb6:	bf24      	itt	cs
   80fb8:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
   80fbc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   80fc0:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
   80fc4:	bf24      	itt	cs
   80fc6:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
   80fca:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   80fce:	011b      	lsls	r3, r3, #4
   80fd0:	bf18      	it	ne
   80fd2:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
   80fd6:	d1e0      	bne.n	80f9a <__aeabi_fdiv+0x46>
   80fd8:	2afd      	cmp	r2, #253	; 0xfd
   80fda:	f63f af50 	bhi.w	80e7e <__aeabi_fmul+0x92>
   80fde:	428b      	cmp	r3, r1
   80fe0:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   80fe4:	bf08      	it	eq
   80fe6:	f020 0001 	biceq.w	r0, r0, #1
   80fea:	4770      	bx	lr
   80fec:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   80ff0:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   80ff4:	327f      	adds	r2, #127	; 0x7f
   80ff6:	bfc2      	ittt	gt
   80ff8:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   80ffc:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   81000:	4770      	bxgt	lr
   81002:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   81006:	f04f 0300 	mov.w	r3, #0
   8100a:	3a01      	subs	r2, #1
   8100c:	e737      	b.n	80e7e <__aeabi_fmul+0x92>
   8100e:	f092 0f00 	teq	r2, #0
   81012:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   81016:	bf02      	ittt	eq
   81018:	0040      	lsleq	r0, r0, #1
   8101a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   8101e:	3a01      	subeq	r2, #1
   81020:	d0f9      	beq.n	81016 <__aeabi_fdiv+0xc2>
   81022:	ea40 000c 	orr.w	r0, r0, ip
   81026:	f093 0f00 	teq	r3, #0
   8102a:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   8102e:	bf02      	ittt	eq
   81030:	0049      	lsleq	r1, r1, #1
   81032:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   81036:	3b01      	subeq	r3, #1
   81038:	d0f9      	beq.n	8102e <__aeabi_fdiv+0xda>
   8103a:	ea41 010c 	orr.w	r1, r1, ip
   8103e:	e795      	b.n	80f6c <__aeabi_fdiv+0x18>
   81040:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   81044:	ea92 0f0c 	teq	r2, ip
   81048:	d108      	bne.n	8105c <__aeabi_fdiv+0x108>
   8104a:	0242      	lsls	r2, r0, #9
   8104c:	f47f af7d 	bne.w	80f4a <__aeabi_fmul+0x15e>
   81050:	ea93 0f0c 	teq	r3, ip
   81054:	f47f af70 	bne.w	80f38 <__aeabi_fmul+0x14c>
   81058:	4608      	mov	r0, r1
   8105a:	e776      	b.n	80f4a <__aeabi_fmul+0x15e>
   8105c:	ea93 0f0c 	teq	r3, ip
   81060:	d104      	bne.n	8106c <__aeabi_fdiv+0x118>
   81062:	024b      	lsls	r3, r1, #9
   81064:	f43f af4c 	beq.w	80f00 <__aeabi_fmul+0x114>
   81068:	4608      	mov	r0, r1
   8106a:	e76e      	b.n	80f4a <__aeabi_fmul+0x15e>
   8106c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   81070:	bf18      	it	ne
   81072:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   81076:	d1ca      	bne.n	8100e <__aeabi_fdiv+0xba>
   81078:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
   8107c:	f47f af5c 	bne.w	80f38 <__aeabi_fmul+0x14c>
   81080:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   81084:	f47f af3c 	bne.w	80f00 <__aeabi_fmul+0x114>
   81088:	e75f      	b.n	80f4a <__aeabi_fmul+0x15e>
   8108a:	bf00      	nop

0008108c <__gesf2>:
   8108c:	f04f 3cff 	mov.w	ip, #4294967295
   81090:	e006      	b.n	810a0 <__cmpsf2+0x4>
   81092:	bf00      	nop

00081094 <__lesf2>:
   81094:	f04f 0c01 	mov.w	ip, #1
   81098:	e002      	b.n	810a0 <__cmpsf2+0x4>
   8109a:	bf00      	nop

0008109c <__cmpsf2>:
   8109c:	f04f 0c01 	mov.w	ip, #1
   810a0:	f84d cd04 	str.w	ip, [sp, #-4]!
   810a4:	ea4f 0240 	mov.w	r2, r0, lsl #1
   810a8:	ea4f 0341 	mov.w	r3, r1, lsl #1
   810ac:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   810b0:	bf18      	it	ne
   810b2:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   810b6:	d011      	beq.n	810dc <__cmpsf2+0x40>
   810b8:	b001      	add	sp, #4
   810ba:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
   810be:	bf18      	it	ne
   810c0:	ea90 0f01 	teqne	r0, r1
   810c4:	bf58      	it	pl
   810c6:	ebb2 0003 	subspl.w	r0, r2, r3
   810ca:	bf88      	it	hi
   810cc:	17c8      	asrhi	r0, r1, #31
   810ce:	bf38      	it	cc
   810d0:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
   810d4:	bf18      	it	ne
   810d6:	f040 0001 	orrne.w	r0, r0, #1
   810da:	4770      	bx	lr
   810dc:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   810e0:	d102      	bne.n	810e8 <__cmpsf2+0x4c>
   810e2:	ea5f 2c40 	movs.w	ip, r0, lsl #9
   810e6:	d105      	bne.n	810f4 <__cmpsf2+0x58>
   810e8:	ea7f 6c23 	mvns.w	ip, r3, asr #24
   810ec:	d1e4      	bne.n	810b8 <__cmpsf2+0x1c>
   810ee:	ea5f 2c41 	movs.w	ip, r1, lsl #9
   810f2:	d0e1      	beq.n	810b8 <__cmpsf2+0x1c>
   810f4:	f85d 0b04 	ldr.w	r0, [sp], #4
   810f8:	4770      	bx	lr
   810fa:	bf00      	nop

000810fc <__aeabi_cfrcmple>:
   810fc:	4684      	mov	ip, r0
   810fe:	4608      	mov	r0, r1
   81100:	4661      	mov	r1, ip
   81102:	e7ff      	b.n	81104 <__aeabi_cfcmpeq>

00081104 <__aeabi_cfcmpeq>:
   81104:	b50f      	push	{r0, r1, r2, r3, lr}
   81106:	f7ff ffc9 	bl	8109c <__cmpsf2>
   8110a:	2800      	cmp	r0, #0
   8110c:	bf48      	it	mi
   8110e:	f110 0f00 	cmnmi.w	r0, #0
   81112:	bd0f      	pop	{r0, r1, r2, r3, pc}

00081114 <__aeabi_fcmpeq>:
   81114:	f84d ed08 	str.w	lr, [sp, #-8]!
   81118:	f7ff fff4 	bl	81104 <__aeabi_cfcmpeq>
   8111c:	bf0c      	ite	eq
   8111e:	2001      	moveq	r0, #1
   81120:	2000      	movne	r0, #0
   81122:	f85d fb08 	ldr.w	pc, [sp], #8
   81126:	bf00      	nop

00081128 <__aeabi_fcmplt>:
   81128:	f84d ed08 	str.w	lr, [sp, #-8]!
   8112c:	f7ff ffea 	bl	81104 <__aeabi_cfcmpeq>
   81130:	bf34      	ite	cc
   81132:	2001      	movcc	r0, #1
   81134:	2000      	movcs	r0, #0
   81136:	f85d fb08 	ldr.w	pc, [sp], #8
   8113a:	bf00      	nop

0008113c <__aeabi_fcmple>:
   8113c:	f84d ed08 	str.w	lr, [sp, #-8]!
   81140:	f7ff ffe0 	bl	81104 <__aeabi_cfcmpeq>
   81144:	bf94      	ite	ls
   81146:	2001      	movls	r0, #1
   81148:	2000      	movhi	r0, #0
   8114a:	f85d fb08 	ldr.w	pc, [sp], #8
   8114e:	bf00      	nop

00081150 <__aeabi_fcmpge>:
   81150:	f84d ed08 	str.w	lr, [sp, #-8]!
   81154:	f7ff ffd2 	bl	810fc <__aeabi_cfrcmple>
   81158:	bf94      	ite	ls
   8115a:	2001      	movls	r0, #1
   8115c:	2000      	movhi	r0, #0
   8115e:	f85d fb08 	ldr.w	pc, [sp], #8
   81162:	bf00      	nop

00081164 <__aeabi_fcmpgt>:
   81164:	f84d ed08 	str.w	lr, [sp, #-8]!
   81168:	f7ff ffc8 	bl	810fc <__aeabi_cfrcmple>
   8116c:	bf34      	ite	cc
   8116e:	2001      	movcc	r0, #1
   81170:	2000      	movcs	r0, #0
   81172:	f85d fb08 	ldr.w	pc, [sp], #8
   81176:	bf00      	nop

00081178 <__aeabi_f2iz>:
   81178:	ea4f 0240 	mov.w	r2, r0, lsl #1
   8117c:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
   81180:	d30f      	bcc.n	811a2 <__aeabi_f2iz+0x2a>
   81182:	f04f 039e 	mov.w	r3, #158	; 0x9e
   81186:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
   8118a:	d90d      	bls.n	811a8 <__aeabi_f2iz+0x30>
   8118c:	ea4f 2300 	mov.w	r3, r0, lsl #8
   81190:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   81194:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   81198:	fa23 f002 	lsr.w	r0, r3, r2
   8119c:	bf18      	it	ne
   8119e:	4240      	negne	r0, r0
   811a0:	4770      	bx	lr
   811a2:	f04f 0000 	mov.w	r0, #0
   811a6:	4770      	bx	lr
   811a8:	f112 0f61 	cmn.w	r2, #97	; 0x61
   811ac:	d101      	bne.n	811b2 <__aeabi_f2iz+0x3a>
   811ae:	0242      	lsls	r2, r0, #9
   811b0:	d105      	bne.n	811be <__aeabi_f2iz+0x46>
   811b2:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
   811b6:	bf08      	it	eq
   811b8:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   811bc:	4770      	bx	lr
   811be:	f04f 0000 	mov.w	r0, #0
   811c2:	4770      	bx	lr

000811c4 <__aeabi_f2uiz>:
   811c4:	0042      	lsls	r2, r0, #1
   811c6:	d20e      	bcs.n	811e6 <__aeabi_f2uiz+0x22>
   811c8:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
   811cc:	d30b      	bcc.n	811e6 <__aeabi_f2uiz+0x22>
   811ce:	f04f 039e 	mov.w	r3, #158	; 0x9e
   811d2:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
   811d6:	d409      	bmi.n	811ec <__aeabi_f2uiz+0x28>
   811d8:	ea4f 2300 	mov.w	r3, r0, lsl #8
   811dc:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   811e0:	fa23 f002 	lsr.w	r0, r3, r2
   811e4:	4770      	bx	lr
   811e6:	f04f 0000 	mov.w	r0, #0
   811ea:	4770      	bx	lr
   811ec:	f112 0f61 	cmn.w	r2, #97	; 0x61
   811f0:	d101      	bne.n	811f6 <__aeabi_f2uiz+0x32>
   811f2:	0242      	lsls	r2, r0, #9
   811f4:	d102      	bne.n	811fc <__aeabi_f2uiz+0x38>
   811f6:	f04f 30ff 	mov.w	r0, #4294967295
   811fa:	4770      	bx	lr
   811fc:	f04f 0000 	mov.w	r0, #0
   81200:	4770      	bx	lr
   81202:	bf00      	nop

00081204 <__libc_init_array>:
   81204:	b570      	push	{r4, r5, r6, lr}
   81206:	4e0f      	ldr	r6, [pc, #60]	; (81244 <__libc_init_array+0x40>)
   81208:	4d0f      	ldr	r5, [pc, #60]	; (81248 <__libc_init_array+0x44>)
   8120a:	1b76      	subs	r6, r6, r5
   8120c:	10b6      	asrs	r6, r6, #2
   8120e:	bf18      	it	ne
   81210:	2400      	movne	r4, #0
   81212:	d005      	beq.n	81220 <__libc_init_array+0x1c>
   81214:	3401      	adds	r4, #1
   81216:	f855 3b04 	ldr.w	r3, [r5], #4
   8121a:	4798      	blx	r3
   8121c:	42a6      	cmp	r6, r4
   8121e:	d1f9      	bne.n	81214 <__libc_init_array+0x10>
   81220:	4e0a      	ldr	r6, [pc, #40]	; (8124c <__libc_init_array+0x48>)
   81222:	4d0b      	ldr	r5, [pc, #44]	; (81250 <__libc_init_array+0x4c>)
   81224:	f000 f8e6 	bl	813f4 <_init>
   81228:	1b76      	subs	r6, r6, r5
   8122a:	10b6      	asrs	r6, r6, #2
   8122c:	bf18      	it	ne
   8122e:	2400      	movne	r4, #0
   81230:	d006      	beq.n	81240 <__libc_init_array+0x3c>
   81232:	3401      	adds	r4, #1
   81234:	f855 3b04 	ldr.w	r3, [r5], #4
   81238:	4798      	blx	r3
   8123a:	42a6      	cmp	r6, r4
   8123c:	d1f9      	bne.n	81232 <__libc_init_array+0x2e>
   8123e:	bd70      	pop	{r4, r5, r6, pc}
   81240:	bd70      	pop	{r4, r5, r6, pc}
   81242:	bf00      	nop
   81244:	00081400 	.word	0x00081400
   81248:	00081400 	.word	0x00081400
   8124c:	00081408 	.word	0x00081408
   81250:	00081400 	.word	0x00081400

00081254 <register_fini>:
   81254:	4b02      	ldr	r3, [pc, #8]	; (81260 <register_fini+0xc>)
   81256:	b113      	cbz	r3, 8125e <register_fini+0xa>
   81258:	4802      	ldr	r0, [pc, #8]	; (81264 <register_fini+0x10>)
   8125a:	f000 b805 	b.w	81268 <atexit>
   8125e:	4770      	bx	lr
   81260:	00000000 	.word	0x00000000
   81264:	00081275 	.word	0x00081275

00081268 <atexit>:
   81268:	2300      	movs	r3, #0
   8126a:	4601      	mov	r1, r0
   8126c:	461a      	mov	r2, r3
   8126e:	4618      	mov	r0, r3
   81270:	f000 b81e 	b.w	812b0 <__register_exitproc>

00081274 <__libc_fini_array>:
   81274:	b538      	push	{r3, r4, r5, lr}
   81276:	4c0a      	ldr	r4, [pc, #40]	; (812a0 <__libc_fini_array+0x2c>)
   81278:	4d0a      	ldr	r5, [pc, #40]	; (812a4 <__libc_fini_array+0x30>)
   8127a:	1b64      	subs	r4, r4, r5
   8127c:	10a4      	asrs	r4, r4, #2
   8127e:	d00a      	beq.n	81296 <__libc_fini_array+0x22>
   81280:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   81284:	3b01      	subs	r3, #1
   81286:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   8128a:	3c01      	subs	r4, #1
   8128c:	f855 3904 	ldr.w	r3, [r5], #-4
   81290:	4798      	blx	r3
   81292:	2c00      	cmp	r4, #0
   81294:	d1f9      	bne.n	8128a <__libc_fini_array+0x16>
   81296:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   8129a:	f000 b8b5 	b.w	81408 <_fini>
   8129e:	bf00      	nop
   812a0:	00081418 	.word	0x00081418
   812a4:	00081414 	.word	0x00081414

000812a8 <__retarget_lock_acquire_recursive>:
   812a8:	4770      	bx	lr
   812aa:	bf00      	nop

000812ac <__retarget_lock_release_recursive>:
   812ac:	4770      	bx	lr
   812ae:	bf00      	nop

000812b0 <__register_exitproc>:
   812b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   812b4:	4d2c      	ldr	r5, [pc, #176]	; (81368 <__register_exitproc+0xb8>)
   812b6:	4606      	mov	r6, r0
   812b8:	6828      	ldr	r0, [r5, #0]
   812ba:	4698      	mov	r8, r3
   812bc:	460f      	mov	r7, r1
   812be:	4691      	mov	r9, r2
   812c0:	f7ff fff2 	bl	812a8 <__retarget_lock_acquire_recursive>
   812c4:	4b29      	ldr	r3, [pc, #164]	; (8136c <__register_exitproc+0xbc>)
   812c6:	681c      	ldr	r4, [r3, #0]
   812c8:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   812cc:	2b00      	cmp	r3, #0
   812ce:	d03e      	beq.n	8134e <__register_exitproc+0x9e>
   812d0:	685a      	ldr	r2, [r3, #4]
   812d2:	2a1f      	cmp	r2, #31
   812d4:	dc1c      	bgt.n	81310 <__register_exitproc+0x60>
   812d6:	f102 0e01 	add.w	lr, r2, #1
   812da:	b176      	cbz	r6, 812fa <__register_exitproc+0x4a>
   812dc:	2101      	movs	r1, #1
   812de:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   812e2:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   812e6:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   812ea:	4091      	lsls	r1, r2
   812ec:	4308      	orrs	r0, r1
   812ee:	2e02      	cmp	r6, #2
   812f0:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   812f4:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   812f8:	d023      	beq.n	81342 <__register_exitproc+0x92>
   812fa:	3202      	adds	r2, #2
   812fc:	f8c3 e004 	str.w	lr, [r3, #4]
   81300:	6828      	ldr	r0, [r5, #0]
   81302:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   81306:	f7ff ffd1 	bl	812ac <__retarget_lock_release_recursive>
   8130a:	2000      	movs	r0, #0
   8130c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   81310:	4b17      	ldr	r3, [pc, #92]	; (81370 <__register_exitproc+0xc0>)
   81312:	b30b      	cbz	r3, 81358 <__register_exitproc+0xa8>
   81314:	f44f 70c8 	mov.w	r0, #400	; 0x190
   81318:	f3af 8000 	nop.w
   8131c:	4603      	mov	r3, r0
   8131e:	b1d8      	cbz	r0, 81358 <__register_exitproc+0xa8>
   81320:	2000      	movs	r0, #0
   81322:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   81326:	f04f 0e01 	mov.w	lr, #1
   8132a:	6058      	str	r0, [r3, #4]
   8132c:	6019      	str	r1, [r3, #0]
   8132e:	4602      	mov	r2, r0
   81330:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   81334:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   81338:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   8133c:	2e00      	cmp	r6, #0
   8133e:	d0dc      	beq.n	812fa <__register_exitproc+0x4a>
   81340:	e7cc      	b.n	812dc <__register_exitproc+0x2c>
   81342:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   81346:	4301      	orrs	r1, r0
   81348:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   8134c:	e7d5      	b.n	812fa <__register_exitproc+0x4a>
   8134e:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   81352:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   81356:	e7bb      	b.n	812d0 <__register_exitproc+0x20>
   81358:	6828      	ldr	r0, [r5, #0]
   8135a:	f7ff ffa7 	bl	812ac <__retarget_lock_release_recursive>
   8135e:	f04f 30ff 	mov.w	r0, #4294967295
   81362:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   81366:	bf00      	nop
   81368:	20000430 	.word	0x20000430
   8136c:	000813f0 	.word	0x000813f0
   81370:	00000000 	.word	0x00000000
   81374:	304e4143 	.word	0x304e4143
   81378:	73656d20 	.word	0x73656d20
   8137c:	65676173 	.word	0x65676173
   81380:	72726120 	.word	0x72726120
   81384:	64657669 	.word	0x64657669
   81388:	206e6920 	.word	0x206e6920
   8138c:	2d6e6f6e 	.word	0x2d6e6f6e
   81390:	64657375 	.word	0x64657375
   81394:	69616d20 	.word	0x69616d20
   81398:	786f626c 	.word	0x786f626c
   8139c:	00000d0a 	.word	0x00000d0a
   813a0:	4f544f4d 	.word	0x4f544f4d
   813a4:	4f502052 	.word	0x4f502052
   813a8:	203a2053 	.word	0x203a2053
   813ac:	0d206425 	.word	0x0d206425
   813b0:	0000000a 	.word	0x0000000a
   813b4:	55555555 	.word	0x55555555
   813b8:	55555555 	.word	0x55555555
   813bc:	3a205555 	.word	0x3a205555
   813c0:	20642520 	.word	0x20642520
   813c4:	00000a0d 	.word	0x00000a0d
   813c8:	6c756e28 	.word	0x6c756e28
   813cc:	0000296c 	.word	0x0000296c
   813d0:	3a525245 	.word	0x3a525245
   813d4:	52415520 	.word	0x52415520
   813d8:	58522054 	.word	0x58522054
   813dc:	66756220 	.word	0x66756220
   813e0:	20726566 	.word	0x20726566
   813e4:	66207369 	.word	0x66207369
   813e8:	0a6c6c75 	.word	0x0a6c6c75
   813ec:	0000000d 	.word	0x0000000d

000813f0 <_global_impure_ptr>:
   813f0:	20000008                                ... 

000813f4 <_init>:
   813f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   813f6:	bf00      	nop
   813f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
   813fa:	bc08      	pop	{r3}
   813fc:	469e      	mov	lr, r3
   813fe:	4770      	bx	lr

00081400 <__init_array_start>:
   81400:	00081255 	.word	0x00081255

00081404 <__frame_dummy_init_array_entry>:
   81404:	00080119                                ....

00081408 <_fini>:
   81408:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8140a:	bf00      	nop
   8140c:	bcf8      	pop	{r3, r4, r5, r6, r7}
   8140e:	bc08      	pop	{r3}
   81410:	469e      	mov	lr, r3
   81412:	4770      	bx	lr

00081414 <__fini_array_start>:
   81414:	000800f5 	.word	0x000800f5
